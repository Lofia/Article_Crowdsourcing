<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE collection SYSTEM "BioC.dtd">
<collection><source>PMC</source><date>20201221</date><key>pmc.key</key><document><id>6927297</id><infon key="license">CC BY</infon><passage><infon key="article-id_doi">10.3389/fpls.2019.01550</infon><infon key="article-id_pmc">6927297</infon><infon key="article-id_pmid">31921228</infon><infon key="elocation-id">1550</infon><infon key="kwd">phenotyping unmanned aerial vehicles plant disease deep learning machine learning crowdsourcing</infon><infon key="license">This is an open-access article distributed under the terms of the Creative Commons Attribution License (CC BY). The use, distribution or reproduction in other forums is permitted, provided the original author(s) and the copyright owner(s) are credited and that the original publication in this journal is cited, in accordance with accepted academic practice. No use, distribution or reproduction is permitted which does not comply with these terms.</infon><infon key="name_0">surname:Wiesner-Hanks;given-names:Tyr</infon><infon key="name_1">surname:Wu;given-names:Harvey</infon><infon key="name_2">surname:Stewart;given-names:Ethan</infon><infon key="name_3">surname:DeChant;given-names:Chad</infon><infon key="name_4">surname:Kaczmar;given-names:Nicholas</infon><infon key="name_5">surname:Lipson;given-names:Hod</infon><infon key="name_6">surname:Gore;given-names:Michael A.</infon><infon key="name_7">surname:Nelson;given-names:Rebecca J.</infon><infon key="section_type">TITLE</infon><infon key="type">front</infon><infon key="volume">10</infon><infon key="year">2019</infon><offset>0</offset><text>Millimeter-Level Plant Disease Detection From Aerial Photographs via Deep Learning and Crowdsourced Data</text></passage><passage><infon key="section_type">ABSTRACT</infon><infon key="type">abstract</infon><offset>105</offset><text>Computer vision models that can recognize plant diseases in the field would be valuable tools for disease management and resistance breeding. Generating enough data to train these models is difficult, however, since only trained experts can accurately identify symptoms. In this study, we describe and implement a two-step method for generating a large amount of high-quality training data with minimal expert input. First, experts located symptoms of northern leaf blight (NLB) in field images taken by unmanned aerial vehicles (UAVs), annotating them quickly at low resolution. Second, non-experts were asked to draw polygons around the identified diseased areas, producing high-resolution ground truths that were automatically screened based on agreement between multiple workers. We then used these crowdsourced data to train a convolutional neural network (CNN), feeding the output into a conditional random field (CRF) to segment images into lesion and non-lesion regions with accuracy of 0.9979 and F1 score of 0.7153. The CNN trained on crowdsourced data showed greatly improved spatial resolution compared to one trained on expert-generated data, despite using only one fifth as many expert annotations. The final model was able to accurately delineate lesions down to the millimeter level from UAV-collected images, the finest scale of aerial plant disease detection achieved to date. The two-step approach to generating training data is a promising method to streamline deep learning approaches for plant disease detection, and for complex plant phenotyping tasks in general.</text></passage><passage><infon key="section_type">INTRO</infon><infon key="type">title_1</infon><offset>1692</offset><text>Introduction</text></passage><passage><infon key="section_type">INTRO</infon><infon key="type">paragraph</infon><offset>1705</offset><text>Machine learning models for object detection require a large amount of training data, typically generated by humans. When the average person can identify the feature or object in question, such as a face, a stop sign, or an apple, these data can be generated through crowdsourcing, as was done for large datasets such as ImageNet and Microsoft COCO. Even if the feature is unfamiliar to most people, crowdsourcing may be viable if the task is simple and the feature obvious. In a recent study on best practices for crowdsourcing plant feature annotation, found that, with minimal instruction, anonymous online workers could accurately identify maize male flowers in images where they were clearly visible. Accurate identification of many plant features requires a certain level of expertise, however. If only a handful of human experts are qualified and willing to generate training data, the process takes much longer than if tasks could be reliably performed by hundreds or thousands of non-experts. This places a burden on those experts and creates a bottleneck in the model training process.</text></passage><passage><infon key="section_type">INTRO</infon><infon key="type">paragraph</infon><offset>2801</offset><text>This dilemma has been addressed by many groups, particularly in the field of human medicine, wherein a model trained on low-quality data could endanger lives, but experts’ time is limited and expensive. Different circumstances allow for distinct solutions to the problem. For some tasks, such as interpreting X-ray radiographs, large amounts of training data are already generated and archived under normal protocols, and these data can be used as is without need for additional annotations. When untrained workers perform moderately well, but not quite on par with experts, their annotations can be used to train a “first pass” model that identifies regions of interest, or one that performs only those tasks that non-experts can do well. Researchers might have access to a community of knowledgeable, enthusiastic amateurs, such as those who enjoy identification of birds or aircraft. If nothing but expert annotations will suffice, data sharing lessens the burden on any one group. Multiple groups have used the International Skin Imaging Collaboration image set of human skin diseases or the PlantVillage image set of plant diseases.</text></passage><passage><infon key="section_type">INTRO</infon><infon key="type">paragraph</infon><offset>3945</offset><text>Identifying plant diseases via machine learning presents two challenges that limit the feasibility of the above solutions. First, qualified expert judgment is needed at some point in the annotation process, since there are often many causes for tissue death (e.g., disease, abiotic stress, physical damage, natural senescence) and the average person has no experience distinguishing among these. Second, there are hundreds of economically important plant diseases, each with unique considerations of host tissue appearance, plant architecture, symptomatology, etc. A group aiming to implement machine learning detection of a given disease for the first time will likely have to generate novel training data.</text></passage><passage><infon key="section_type">INTRO</infon><infon key="type">paragraph</infon><offset>4653</offset><text>The identification of plant disease symptoms in an image might belong to one of three classes of tasks, per: classification, detection, or segmentation. Object classification methods detect the presence or absence of features within an image on the whole, e.g., “this is an image of wheat stem rust.” Object detection methods identify the location and extent of symptoms within an image on a coarse spatial level, most commonly delineating them with bounding boxes. Semantic segmentation methods delineate the boundaries of features, assigning each pixel of an image to a given class, e.g., leaf, soil, or disease symptom. In this paper, we undertake this last task-identifying and outlining every diseased region in an image.</text></passage><passage><infon key="section_type">INTRO</infon><infon key="type">paragraph</infon><offset>5384</offset><text>Aerial plant disease detection via machine learning has aroused much interest in the past few years, as evidenced in many reviews, letters, and prospectives. Compared to the level of interest, relatively few examples have been published. Machine learning classification has been used to classify entire plants as virus-infected or not. Object detection methods have been used to identify diseased regions of grape plants and diseased leaves of soybean. Semantic segmentation of unmanned aerial vehicle (UAV) images, the task we undertake here, has been implemented in soybean, tea plants, and maize.</text></passage><passage><infon key="section_type">INTRO</infon><infon key="type">paragraph</infon><offset>5984</offset><text>In the course of our previous work, we labeled over 100,000 examples of northern leaf blight (NLB), a fungal foliar disease of maize that causes gray-brown necrotic lesions. Each of these annotations consisted of a line drawn down the principal axis of a lesion. With these line annotations, we trained convolutional neural networks (CNNs) to recognize NLB lesions in images taken by hand with 96.7% accuracy and in aerial field images with 95.0% accuracy. Delineating lesion boundaries with polygons would be ideal, as such annotations can ultimately yield much more precise image segmentation than lower-resolution annotations. Drawing such polygons is prohibitively time-consuming to do with only a small number of trained experts, however.</text></passage><passage><infon key="section_type">INTRO</infon><infon key="type">paragraph</infon><offset>6728</offset><text>In this study we describe and implement a two-step approach for generating large amounts of high-resolution training data that has been vetted by qualified experts. First, experts identify disease symptoms, annotating them quickly at low resolution. Second, the more time-consuming task of annotating the lesion boundaries is outsourced to anonymous online workers through Amazon’s Mechanical Turk platform. This two-step approach allows us to maintain the reliability of expert diagnosis while also exploiting the speed and scale of crowdsourcing, producing a model with high accuracy and spatial resolution (Figure 1) with only one fifth as many expert-generated annotations.</text></passage><passage><infon key="file">fpls-10-01550-g001.jpg</infon><infon key="id">f1</infon><infon key="section_type">FIG</infon><infon key="type">fig_caption</infon><offset>7408</offset><text>Examples of lesion segmentation on original images taken in the field by unmanned aerial vehicle. Regions classified as disease lesions by model outlined in magenta.</text></passage><passage><infon key="section_type">METHODS</infon><infon key="type">title_1</infon><offset>7574</offset><text>Materials and Methods</text></passage><passage><infon key="section_type">METHODS</infon><infon key="type">title_2</infon><offset>7596</offset><text>Image Annotation</text></passage><passage><infon key="section_type">METHODS</infon><infon key="type">paragraph</infon><offset>7613</offset><text>All Mechanical Turk human intelligence tasks (HITs) consisted of one or more prompts to draw a single bounding polygon delineating the boundaries of a single lesion (Figure 2, top right), previously annotated with a line down the major axis by one of two human experts. All images and annotations used, generated, or described herein are available in an Open Science Framework repository ().</text></passage><passage><infon key="file">fpls-10-01550-g002.jpg</infon><infon key="id">f2</infon><infon key="section_type">FIG</infon><infon key="type">fig_caption</infon><offset>8005</offset><text>Comparison of annotations used and results of expert-drawn-lines model (left) and crowdsourced-polygon model described here (right). Top row: original image with annotations overlaid. Middle row: heatmap created by applying convolutional neural network in sliding window across image, brightness indicating probability of lesion at a given point (white = lesion, black = non-lesion). Bottom row: binary mask output of conditional random field segmentation using original image and heatmap.</text></passage><passage><infon key="section_type">METHODS</infon><infon key="type">paragraph</infon><offset>8495</offset><text>For each annotated lesion, a subimage was taken of the same width and height of the annotation line, plus 150 pixels padding on all four sides, so that workers had some context to the image. The annotation lines mostly spanned 400–1200 pixels in the x- and y-dimensions (depending on orientation), so this padding usually expanded the field of view by 25–75%. Workers were given basic instructions asking them to draw a polygon delineating the edges of the necrotic lesion with between 10 and 15 vertices, along with an example lesion thereof (Supplemental text, Supplemental Figure 1). The annotation lines drawn by experts were included in these subimages in red to make clear which lesion to annotate, as there was often more than one lesion in a single subimage.</text></passage><passage><infon key="section_type">METHODS</infon><infon key="type">paragraph</infon><offset>9266</offset><text>HITs were deployed in three batches over the course of 2 months. Three unique workers were assigned to complete each HIT. Each worker was paid $0.03/HIT, an amount chosen to be similar to payment for comparable tasks deployed on Mechanical Turk at that time, adjusting for the fact that different HITs involve a different number of tasks. An additional $0.01 was paid to Amazon each time a worker completed a HIT, resulting in a total cost of $0.12/lesion (three workers per lesion, $0.03 per worker, $0.01 to Amazon per worker).</text></passage><passage><infon key="section_type">METHODS</infon><infon key="type">paragraph</infon><offset>9796</offset><text>Annotations drawn by Amazon Mechanical Turk (MTurk) workers were first screened to see how much they agreed with the other annotations drawn on the same lesion. If a given worker drew polygons that rarely agreed with those drawn by other workers, their annotations were potentially suspect. After a batch was completed, the Intersection over Union (IoU), also called the Jaccard similarity, was calculated for each pair of polygons drawn on the same lesion by taking the area in pixels of their intersection divided by the area in pixels of their union. Each polygon was thus compared to the two other polygons drawn by other workers on the same lesion. If the mean Jaccard similarity between all annotations drawn by a given worker and those drawn by other workers was &lt;0.5, the worker was flagged for manual review. This threshold was set at 0.5 because the vast majority of workers had overall mean IoUs in the 0.5–0.8 range, while a small number, who mostly completed only a handful of HITs each, had mean IoUs in the 0–0.5 range (Supplemental Figure 2). Manual review was deemed necessary, since a worker may have drawn their high-quality annotations compared to low-quality annotations. If their work was found to be unacceptable, all of their annotations were rejected and lesion subimages were redeployed as needed until three unique workers had acceptably annotated each. In all cases, workers whose annotations were rejected appeared to be drawing polygons at random.</text></passage><passage><infon key="section_type">METHODS</infon><infon key="type">paragraph</infon><offset>11278</offset><text>The IoU was also used to filter out low-quality lesions. Entire UAV images were filtered automatically prior to annotation and manually during annotation, as described previously, but individual lesions in an image could still vary in how clear and defined the visible symptoms were. Preliminary manual inspection of MTurk annotations revealed that lesions on which otherwise well-performing workers drew lesions with low overlap with one another were often blurry, ambiguous, or otherwise unacceptable. Only lesions for which all three polygon annotations had an IoU &gt;0.6 with one another (a threshold chosen to filter out roughly the bottom 25% of lesions) were used to generate images for model training as described below. The mean and standard deviation of pixel red, green, and blue (RGB) values, used for later normalization of images, were calculated on these whole images.</text></passage><passage><infon key="section_type">METHODS</infon><infon key="type">paragraph</infon><offset>12160</offset><text>Training, validation, and test data were generated based on the method used with polygon annotations in the OpenSurface dataset. Multiple square subimages, hereafter referred to as “patches,” were cropped from the entire UAV image and classified as “lesion” or “non-lesion” based on whether the exact center point of the image lay within a lesion. To generate positive patches (the “lesion” class), pixels lying within at least two of three annotation polygons were used as a search space. From these, random points were sampled via Poisson-disk subsampling (scipython.com/blog/poisson-disc-sampling-in-python/), with minimum distance of 200 pixels between each point. Negative patches (the “non-lesion” category), were chosen by randomly sampling points from the pixels in each image that were not included in any of the annotation polygons. Negative training images thus could contain a lesion, so long as they were not centered on one.</text></passage><passage><infon key="section_type">METHODS</infon><infon key="type">paragraph</infon><offset>13119</offset><text>Because the original UAV images consisted mostly of non-lesion area, many more non-lesion patches could be extracted from the images than lesion patches. Preliminary model testing with sample images suggested that using a balanced dataset with an equal number of lesion and non-lesion patches biased model predictions toward false positives, i.e., detecting lesions where there were none (data not shown). We thus used a moderately unbalanced dataset and accounted for the class imbalance using weights in the loss function, as described below.</text></passage><passage><infon key="section_type">METHODS</infon><infon key="type">paragraph</infon><offset>13664</offset><text>In order to make the model more generalizable, training images were augmented via random transformations that preserved the image class, i.e., the location of the central pixel in a lesion or not. Images were horizontally and/or vertically flipped, rotated by 0 to 90° either clockwise or counterclockwise, and scaled between 0.75x and 1.33x. As these images were taken from directly overhead, there was no need to preserve image orientation.</text></passage><passage><infon key="section_type">METHODS</infon><infon key="type">title_2</infon><offset>14108</offset><text>Network Construction</text></passage><passage><infon key="section_type">METHODS</infon><infon key="type">paragraph</infon><offset>14129</offset><text>We used a ResNet34 model that had been pre-trained on the ImageNet dataset of several million labeled images as a generalized feature extractor, replacing the final fully connected layer with a fully connected layer of output dimension 2. The output tensor for each input image was a two-dimensional vector of scores for the two classes: centered on a lesion or not centered on a lesion (note that images containing a lesion but not exactly centered on it belong to this second class). A weighted cross-entropy loss function was used, which normalizes the scores into estimated probabilities via the softmax function, then takes the negative log of these probabilities and multiplied by the class weights to account for class imbalance. Class weights of 0.36 and 1.0 were used for lesion and non-lesion images, proportional to the number of images in each class.</text></passage><passage><infon key="section_type">METHODS</infon><infon key="type">paragraph</infon><offset>14992</offset><text>In order to determine which patch size and learning rate was most appropriate, we analyzed performance on a smaller sample set of images. For both image classes (lesion and no lesion), 5% of the training and validation sets were randomly sampled. The above network was trained and validated on this 5% subsample with six patch sizes (square patches of size 200, 400, 500, 600, 800, or 1,000 pixels, using the same centerpoints for each size) and seven learning rates (1e−5, 3e−5, 1e−4, 3e−4, 1e−3, 3e−3, and 1e−2). With each combination of patch size and learning rate, the network was trained for 10 epochs with a step size of 10 and gamma of 0.1, corresponding to a 10-fold decrease in the initial learning rate every 10 epochs.</text></passage><passage><infon key="section_type">METHODS</infon><infon key="type">paragraph</infon><offset>15737</offset><text>The best-performing parameters were then used to train the network on the entire training and validation set for 20 epochs with a step size of 10 and gamma of 0.1. Patches were resized to 224 by 224 pixels and treated with a random horizontal flip, then normalized using the previously calculated mean and standard deviation of pixel RGB values. To compare learning rate dropouts, the model was also trained using step sizes of 5 and 20, maintaining a gamma of 0.1. Weights were optimized using stochastic gradient descent with weights of 1.0 and 0.36 for the non-lesion and lesion labels, respectively, proportional to the number of images in each category. All training was done on an Nvidia GTX 1070 Ti GPU with batch size 120, randomizing image input order.</text></passage><passage><infon key="section_type">METHODS</infon><infon key="type">paragraph</infon><offset>16499</offset><text>To visualize the model-estimated probability of a given region containing a lesion or not, heatmaps were generated by applying the final CNN on a sliding window across whole UAV images, then applying softmax transformation to generate probabilities for the two classes (centered on a lesion or not). To account for varying lesion sizes, we used the resizing approach of. The image was resized by three separate scaling factors: the original scale r used in model training (such that a 500x500 window was resized to 224x224 pixels), r*sqrt(2), and r/sqrt(2). At these scales, a window of size 500x500, 690x690, or 345x345 pixels, respectively, mapped to 224x224 pixels. Images were padded on all sides via reflectance padding, and the trained model was applied via a sliding window approach across the entire image with a stride of 50 pixels in both dimensions. The resultant output was then resized to the original 4,000x6,000 pixels via bilinear interpolation. The three resultant heatmaps were then averaged, and this averaged heatmap was used for downstream analyses. For comparison, the trained model described by was applied in an identical manner. As the scaling used for training purposes was identical between these two models, the same scales were used for heatmap generation.</text></passage><passage><infon key="section_type">METHODS</infon><infon key="type">title_2</infon><offset>17785</offset><text>Image Segmentation</text></passage><passage><infon key="section_type">METHODS</infon><infon key="type">paragraph</infon><offset>17804</offset><text>Pixel-wise classification was performed using the fully connected conditional random field (CRF) method of, implemented in Python via pydensecrf. CRF optimization was performed using three separate color spaces: the original, untransformed RGB values, RGB values transformed to maximize contrast between lesion and non-lesion pixel values, and L*a*b* color space. For the second method, the pixels surrounding each polygon annotation were found by dilating the polygon mask (expanding the mask along its edges to include pixels for which a kernel overlaps with the mask) for five iterations using a 20 pixel by 20 pixel square kernel, then subtracting the area created by performing only one dilation of the mask. The RGB values of pixels within these regions and those lying within polygon annotations were then downsampled by a factor of 10 and analyzed via linear discriminant analysis (LDA) to obtain a transformation maximizing between-group differences in Euclidean distance between values in the two regions. RGB to L*a*b* transformation was performed using OpenCV, producing 0–255 integer-valued L*a*b* coordinates.</text></passage><passage><infon key="section_type">METHODS</infon><infon key="type">paragraph</infon><offset>18930</offset><text>CRF performance is controlled the θ parameters, which determine how strongly pixel classification is influenced by proximity (is it close to many pixels believed to be NLB lesions)? and color (is it the same color as pixels believed to be NLB lesions)?. Because optimizing these is difficult, we used a simple grid search to find suitable parameters, evaluating CRF performance for all combinations of θ values on a set of 118 training images. These were selected from the entire set of training images by choosing images in which the annotation polygons of all three workers agreed fairly well (each one having IoU &gt; 0.8 with the union of all three, a cutoff chosen to be fairly stringent) for all lesions in the image. CRF performance on each image was evaluated under each color space with slightly different parameters, as appropriate for each. For the RGB and LDA-transformed color spaces, the kernel width θα, corresponding to the spatial dimension of pixel correlation and deviation, was evaluated at values ranging from 10 to 600 by a step size of 10. For the untransformed RGB color space, θβ, corresponding to the color-space correlation and deviation of pixels, was evaluated at values ranging from 1 to 40, step size 1. For the LDA-transformed RGB values, θβ was evaluated at values ranging from 0.1 to 0.4, step size 0.1. For the L*a*b* color space, separate kernel widths were used for the distance along the L dimensions and distance in a–b dimensions. CRF performance was analyzed for θα (still the spatial kernel width, unrelated to the a* color dimension) ranging from 10 to 500 with step size 10, θL ranging from 1 to 25 with step size 1, and θab from 1 to 20 with step size 1. CRF performance on the model of was tested only in the RGB color space.</text></passage><passage><infon key="section_type">RESULTS</infon><infon key="type">title_1</infon><offset>20745</offset><text>Results</text></passage><passage><infon key="section_type">RESULTS</infon><infon key="type">title_2</infon><offset>20753</offset><text>Mechanical Turk Annotations</text></passage><passage><infon key="section_type">RESULTS</infon><infon key="type">paragraph</infon><offset>20781</offset><text>MTurk workers drew 15,240 polygon annotations on 5,080 lesions, cropped from 752 parent images collected by the UAV. Training data for the CNN were generated only from those images in which, for all lesions in the image, all three polygon annotations had an IoU of at least 0.6 with one another, leaving us with 588 UAV images containing 3,834 annotated lesions. Poisson-disk subsampling of the lesion polygon annotations yielded 22,193 centerpoints that were used to generate 22,193 positive images (Table 1). From the same 588 UAV images, we sampled 58,800 negative images, 100 from each image. Both positive (centered on a lesion) and negative (not centered on a lesion) images were divided into training, validation, and test sets in a 70:15:15 ratio.</text></passage><passage><infon key="file">T1.xml</infon><infon key="id">T1</infon><infon key="section_type">TABLE</infon><infon key="type">table_caption</infon><offset>21537</offset><text>Number of images sampled of each label (lesion vs. no lesion) and their division into training, validation, and test sets.</text></passage><passage><infon key="file">T1.xml</infon><infon key="id">T1</infon><infon key="section_type">TABLE</infon><infon key="type">table</infon><infon key="xml">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
&lt;table frame=&quot;hsides&quot; rules=&quot;groups&quot;&gt;&lt;thead&gt;&lt;tr&gt;&lt;th valign=&quot;top&quot; rowspan=&quot;2&quot; colspan=&quot;1&quot;&gt;Phase&lt;/th&gt;&lt;th valign=&quot;top&quot; colspan=&quot;2&quot; rowspan=&quot;1&quot;&gt;Number of images&lt;/th&gt;&lt;/tr&gt;&lt;tr&gt;&lt;th valign=&quot;top&quot; rowspan=&quot;1&quot; colspan=&quot;1&quot;&gt;Lesion&lt;/th&gt;&lt;th valign=&quot;top&quot; rowspan=&quot;1&quot; colspan=&quot;1&quot;&gt;No lesion&lt;/th&gt;&lt;/tr&gt;&lt;/thead&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td valign=&quot;top&quot; rowspan=&quot;1&quot; colspan=&quot;1&quot;&gt;Training&lt;/td&gt;&lt;td valign=&quot;top&quot; rowspan=&quot;1&quot; colspan=&quot;1&quot;&gt;14,783&lt;/td&gt;&lt;td valign=&quot;top&quot; rowspan=&quot;1&quot; colspan=&quot;1&quot;&gt;41,160&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign=&quot;top&quot; rowspan=&quot;1&quot; colspan=&quot;1&quot;&gt;Validation&lt;/td&gt;&lt;td valign=&quot;top&quot; rowspan=&quot;1&quot; colspan=&quot;1&quot;&gt;3,168&lt;/td&gt;&lt;td valign=&quot;top&quot; rowspan=&quot;1&quot; colspan=&quot;1&quot;&gt;8,820&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign=&quot;top&quot; rowspan=&quot;1&quot; colspan=&quot;1&quot;&gt;Test&lt;/td&gt;&lt;td valign=&quot;top&quot; rowspan=&quot;1&quot; colspan=&quot;1&quot;&gt;3,168&lt;/td&gt;&lt;td valign=&quot;top&quot; rowspan=&quot;1&quot; colspan=&quot;1&quot;&gt;8,820&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;
</infon><offset>21660</offset><text>Phase	Number of images	 	Lesion	No lesion	 	Training	14,783	41,160	 	Validation	3,168	8,820	 	Test	3,168	8,820	 	</text></passage><passage><infon key="section_type">RESULTS</infon><infon key="type">paragraph</infon><offset>21774</offset><text>Most workers annotated only a few images, with a small number of workers annotating several hundred (Supplemental Figure 3). On average, it took an MTurk worker 32 s to annotate a single lesion (median 27 s, standard deviation 19 s). All sets of deployed HITs were fully annotated in under 2 h. Workers generally performed fairly well, as shown by the fact that any two annotations drawn on the same lesion tended to overlap (Figure 3). Most pairs of polygons (83.2%) had an IoU of at least 50%. Manual examination found that many of the annotations with low IoU were on images that were blurry, ambiguous, or otherwise undesirable. Workers were paid $0.03/lesion, resulting in an average payment of only $3.75/h for annotation.</text></passage><passage><infon key="file">fpls-10-01550-g003.jpg</infon><infon key="id">f3</infon><infon key="section_type">FIG</infon><infon key="type">fig_caption</infon><offset>22503</offset><text>Histogram of Intersection over Union (IoU) between all pairs of polygon annotations drawn by Amazon Mechanical Turk workers, calculated as the area in pixels of intersection divided by the area in pixels of the union. Median IoU (0.7265) indicated by solid line, mean IoU (0.6832) indicated by dotted line.</text></passage><passage><infon key="section_type">RESULTS</infon><infon key="type">title_2</infon><offset>22810</offset><text>Model Performance</text></passage><passage><infon key="section_type">RESULTS</infon><infon key="type">paragraph</infon><offset>22828</offset><text>Testing classification accuracy of the crowdsourced CNN on a subsample of training and validation images, we found a learning rate of 3e−3 and a patch size of either 500 or 800 to be best (Figure 4). Though classification accuracy was slightly higher when using a patch size of 800 compared to a patch size of 500, we chose a patch size of 500 to be consistent with that used in the model trained on expert-drawn-lines (Wu et al. in press) to facilitate comparisons between the two.</text></passage><passage><infon key="file">fpls-10-01550-g004.jpg</infon><infon key="id">f4</infon><infon key="section_type">FIG</infon><infon key="type">fig_caption</infon><offset>23313</offset><text>Comparison of crowdsourced convolutional neural network accuracy on 5% subsample of training/validation images across various parameters of learning rate (LR) and patch size in pixels.</text></passage><passage><infon key="section_type">RESULTS</infon><infon key="type">paragraph</infon><offset>23498</offset><text>The accuracy of the crowdsourced CNN on the validation set of image crops converged by 15 epochs (Figure 5). One concern with any machine learning model is the possibility of overfitting: training a model that performs well on the specific data set being used, but that is not generalizable and performs poorly on new data. Loss on the validation set did not tend to increase after reaching a global minimum, suggesting that overfitting was not a major concern, though the gap between training loss and validation loss suggested some overfitting (Figure 5). On the final held-out test set of image crops, the crowdsourced CNN performed well, achieving an overall classification accuracy of 0.9741, precision [TP/(TP+FP)] of 0.9351, recall [TP/(TP+FN)] of 0.9694, and F1 (harmonic mean of precision and recall) of 0.9520 (Table 2).</text></passage><passage><infon key="file">fpls-10-01550-g005.jpg</infon><infon key="id">f5</infon><infon key="section_type">FIG</infon><infon key="type">fig_caption</infon><offset>24329</offset><text>Accuracy (blue) and loss (red) of convolutional neural network on training images (dashed lines) and validation images (solid lines) converged by 15 epochs. Gray area shows standard deviation of accuracy over five replications of training on the same training/validation sets.</text></passage><passage><infon key="file">T2.xml</infon><infon key="id">T2</infon><infon key="section_type">TABLE</infon><infon key="type">table_caption</infon><offset>24606</offset><text>Predictions of the final network on the held-out test set.</text></passage><passage><infon key="file">T2.xml</infon><infon key="id">T2</infon><infon key="section_type">TABLE</infon><infon key="type">table</infon><infon key="xml">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
&lt;table frame=&quot;hsides&quot; rules=&quot;groups&quot;&gt;&lt;thead&gt;&lt;tr&gt;&lt;th valign=&quot;top&quot; rowspan=&quot;2&quot; colspan=&quot;1&quot;&gt;Prediction&lt;/th&gt;&lt;th valign=&quot;top&quot; colspan=&quot;2&quot; rowspan=&quot;1&quot;&gt;Image&lt;/th&gt;&lt;/tr&gt;&lt;tr&gt;&lt;th valign=&quot;top&quot; rowspan=&quot;1&quot; colspan=&quot;1&quot;&gt;Lesion&lt;/th&gt;&lt;th valign=&quot;top&quot; rowspan=&quot;1&quot; colspan=&quot;1&quot;&gt;No lesion&lt;/th&gt;&lt;/tr&gt;&lt;/thead&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td valign=&quot;top&quot; rowspan=&quot;1&quot; colspan=&quot;1&quot;&gt;Lesion&lt;/td&gt;&lt;td valign=&quot;top&quot; rowspan=&quot;1&quot; colspan=&quot;1&quot;&gt;3,071&lt;/td&gt;&lt;td valign=&quot;top&quot; rowspan=&quot;1&quot; colspan=&quot;1&quot;&gt;213&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign=&quot;top&quot; rowspan=&quot;1&quot; colspan=&quot;1&quot;&gt;No lesion&lt;/td&gt;&lt;td valign=&quot;top&quot; rowspan=&quot;1&quot; colspan=&quot;1&quot;&gt;97&lt;/td&gt;&lt;td valign=&quot;top&quot; rowspan=&quot;1&quot; colspan=&quot;1&quot;&gt;8,607&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;
</infon><offset>24665</offset><text>Prediction	Image	 	Lesion	No lesion	 	Lesion	3,071	213	 	No lesion	97	8,607	 	</text></passage><passage><infon key="section_type">RESULTS</infon><infon key="type">title_2</infon><offset>24744</offset><text>Image Segmentation</text></passage><passage><infon key="section_type">RESULTS</infon><infon key="type">paragraph</infon><offset>24763</offset><text>Applying a fully connected CRF to the heatmaps generated by the crowdsourced CNN and the held-out test images, we were able to accurately classify each pixel of an image as lesion or non-lesion with high spatial resolution (Figure 2, bottom row). Pixel-wise classification accuracy was high even when heatmaps were clearly not suitable, as the vast majority of most images is non-lesion, so a model that classified all pixels as non-lesion would still achieve an accuracy of 0.9940. For this reason, F1 was taken to be a more suitable metric for image segmentation performance than accuracy.</text></passage><passage><infon key="section_type">RESULTS</infon><infon key="type">paragraph</infon><offset>25355</offset><text>Exhaustive grid search found the best-performing θ parameters for each color space to be θα = 50, θβ = 5 for the standard RGB color space, θα = 110, θL = 25, and θab = 1 for the L*a*b* color space, and θα = 70 and θβ = 0.7 for the LDA-transformed color space (Figure 6). Transforming images into the L*a*b* color space moderately increased segmentation accuracy. The best-performing CRF parameters segmented images with an accuracy of 0.9957 and F1 of 0.6695 in the RGB color space, compared to peak accuracy of 0.9977 and F1 of 0.6777 in the L*a*b* color space. Transforming the RGB values using the matrices obtained via LDA was the most effective, yielding a peak accuracy of 0.9981 and F1 of 0.7153. The parameters that segmented LDA-transformed images with the highest F1 score also did so with near-maximum accuracy (Figure 7).</text></passage><passage><infon key="file">fpls-10-01550-g006.jpg</infon><infon key="id">f6</infon><infon key="section_type">FIG</infon><infon key="type">fig_caption</infon><offset>26239</offset><text>Heatmap of pixel-wise F1 score of conditional random field (CRF) segmentation across different levels of θα, corresponding to the spatial scale of correlations between pixel color values, and θβ, corresponding to the color space scale of correlations. Values were determined using images transformed with red, green, and blue values transformed via linear discriminant analysis-derived differentiation transformation, as this was the color space in which CRF segmentation performed best.</text></passage><passage><infon key="file">fpls-10-01550-g007.jpg</infon><infon key="id">f7</infon><infon key="section_type">FIG</infon><infon key="type">fig_caption</infon><offset>26742</offset><text>Pixel-wise F1 score of lesion/non-lesion segmentation vs. accuracy thereof across different levels of θα and θβ. The conditional random field parameters that yielded the highest F1 score (red point) also yielded near-maximum accuracy of segmentation. Each point represents a single combination of θα and θβ tested in the grid search (Figure 5).</text></passage><passage><infon key="section_type">RESULTS</infon><infon key="type">paragraph</infon><offset>27117</offset><text>CRF segmentations could be used to accurately estimate the proportion of an image covered by lesions (Figure 8). The proportional lesion coverage estimated by CRF was highly correlated to ground truth estimates. The heatmaps themselves could also be used to estimate proportional lesion coverage in an image, bypassing the CRF step. Thresholding probability heatmaps at 0.5 produced binary images, in which pixels had a value of 1 if the interpolated predicted softmax probability of the “lesion” prediction was higher and a value of 0 if that of “non-lesion” was higher. However, the lesion coverages estimated by CRF segmentation were proportional to the ground truth areas in an approximately 1:1 manner, while the areas generated from thresholding probability heatmaps were artificially inflated (Figure 8).</text></passage><passage><infon key="file">fpls-10-01550-g008.jpg</infon><infon key="id">f8</infon><infon key="section_type">FIG</infon><infon key="type">fig_caption</infon><offset>27937</offset><text>Correlation between the proportion of a test image classified as lesion in ground truth (consensus polygons of three high-quality Amazon Mechanical Turk annotations), conditional random field segmentation, and heatmap thresholded at 0.5. Red lines depict 1:1 ratio.</text></passage><passage><infon key="section_type">RESULTS</infon><infon key="type">paragraph</infon><offset>28203</offset><text>Image segmentation using the crowdsourced CNN and CRF tended to outperform human experts. There were seven instances in which the proportion of a test image classified as “lesion” diverged highly between CRF segmentation and ground truth (Figure 8, outliers lying off of the red 1:1 line). This was surprising, as precision of CRF segmentation was higher than recall (0.7388 vs. 0.6937) on a pixel-wise basis. Examining these seven cases more closely, we found that five of them were due to the model correctly locating lesions missed by the experts, while only two were due to the model misidentifying senescent leaves as lesions (Figure 9). Excluding the five images in which the CRF outperformed human experts, the Pearson’s correlation between the proportion of pixels in an image labeled as lesions in the ground truth masks and the proportion classified as lesions by the CRF segmentation rose from 0.8893 to 0.9428. Thus, while there is room to improve the model by addressing false positives, it was more often than not outperforming trained human experts.</text></passage><passage><infon key="file">fpls-10-01550-g009.jpg</infon><infon key="id">f9</infon><infon key="section_type">FIG</infon><infon key="type">fig_caption</infon><offset>29274</offset><text>Original image (top row), ground truth annotations drawn by Amazon Mechanical Turk workers (middle row), and conditional random field (CRF) segmentation (bottom row) for all seven test images in which CRF segmentation and ground truth diverged highly. In left five images, crowdsourced-polygon model outperformed humans by identifying lesionated areas where human experts had missed them. In the right two images, the model falsely classified senescent leaf tissue as lesions. White = lesion, black = non-lesion.</text></passage><passage><infon key="section_type">RESULTS</infon><infon key="type">paragraph</infon><offset>29787</offset><text>The two-step image segmentation process was fairly slow, however. Heatmap construction by the sliding-window approach using three different scales took a mean of 38.1 s on a 4,000x6,000 image: 10.8 s at original scale r, 6.2 s at scale r/sqrt(2), and 21.1 s at scale r*sqrt(2). CRF segmentation of a 4,000x6,000 image took 2.8 s on average. Newer end-to-end segmentation methods should be able to improve on this, as discussed below.</text></passage><passage><infon key="section_type">RESULTS</infon><infon key="type">title_2</infon><offset>30221</offset><text>Benefits of Crowdsourcing</text></passage><passage><infon key="section_type">RESULTS</infon><infon key="type">paragraph</infon><offset>30247</offset><text>Using crowdsourced polygon annotations greatly improved the spatial resolution of the final model with far less time investment from experts. We compared two CNNs of similar structure and implementation: one trained on lines drawn by experts and the one trained on crowdsourced polygons, described here. These models were used to perform semantic segmentation using the same approach, via applying the CNN on a sliding window across images to generate probability heatmaps, then feeding these heatmaps into an optimized CRF to perform the final segmentation. Using the same approach with both model outputs isolated the effects of using the more information-rich crowdsourced polygons, rather than differences in segmentation methods.</text></passage><passage><infon key="section_type">RESULTS</infon><infon key="type">paragraph</infon><offset>30982</offset><text>Using the crowdsourced annotations provided three key benefits. First, the greater spatial resolution of polygon annotations allowed us to reliably delineate individual lesions with millimeter-level accuracy (Figure 10), which could not be done with line annotations alone. CRF segmentation using the crowdsourced CNN output was able to segment images into lesion and non-lesion pixels with a maximum F1 of 0.76 on the validation image set, while segmentation using expert-drawn lines achieved a maximum F1 of only 0.21.</text></passage><passage><infon key="file">fpls-10-01550-g010.jpg</infon><infon key="id">f10</infon><infon key="section_type">FIG</infon><infon key="type">fig_caption</infon><offset>31503</offset><text>Close-up view of image segmentations performed by conditional random field using heatmaps generated by the crowdsourced convolutional neural network. Magenta outline shows lesion boundaries from 12 randomly selected images in the test set.</text></passage><passage><infon key="section_type">RESULTS</infon><infon key="type">paragraph</infon><offset>31743</offset><text>Second, the crowdsourced-polygon model was able to achieve this higher spatial resolution using only one-fifth as many annotations. The crowdsourced CNN was trained, validated, and tested on only 5,080 expert-drawn lesions, compared to the 25,508 used for the expert-drawn-lines model.</text></passage><passage><infon key="section_type">RESULTS</infon><infon key="type">paragraph</infon><offset>32029</offset><text>Third, crowdsourcing allowed us to generate these polygons more quickly than would be possible using only a handful of experts. Drawing a line took far less time than drawing a polygon. Examining the timestamps of the annotations, we found that experts took 4.38 s on average to annotate a lesion with a line, while it took an MTurk worker a mean of 32 s to draw a polygon. An expert could thus annotate 1,000 lesions with lines in 73 min on average, while a non-expert would take 533 min to annotate 1,000 lesions with polygons. The more complex non-expert task thus took 7.3x more time than the simpler expert task. Due to the parallel nature of crowdsourcing, however, all 5,080 lesions were annotated by MTurk workers in less than 15 h.</text></passage><passage><infon key="section_type">RESULTS</infon><infon key="type">paragraph</infon><offset>32770</offset><text>A comparison of the total time needed to generate training data at the scale used in this study shows the benefits of a two-step crowdsourcing approach. A single human expert can annotate 5,000 lesions in roughly 6 h, which could then be completely annotated with polygons by MTurk workers in one to 2 days. Assuming this expert worked as fast as the average MTurk worker (including locating lesions, which MTurk workers were not required to do), drawing these polygons would take them roughly 44 h. Crowdsourcing the more laborious part of the task as described here is a more efficient use of plant scientists’ time and expertise.</text></passage><passage><infon key="section_type">DISCUSS</infon><infon key="type">title_1</infon><offset>33405</offset><text>Discussion</text></passage><passage><infon key="section_type">DISCUSS</infon><infon key="type">paragraph</infon><offset>33416</offset><text>Our full method, combining a CNN applied across a sliding window and image segmentation via a fully connected CRF, was able to identify and delineate disease lesions at the millimeter level, the smallest spatial scale reported so far for aerial plant disease detection. The two-step approach for generating training data, in which experts annotate symptoms in low detail and non-experts annotate them further in high detail, was critical to achieve high spatial resolution. Without the non-expert polygon annotations, our previous effort was able to identify lesions with high accuracy at a sub-leaf scale, but not at sufficient resolution to accurately segment an image and delineate individual lesions. With them, we were able to segment images down to the millimeter with sensitivity surpassing that of human experts: in five out of seven cases in which human ground truth and model predictions diverged, the model had correctly identified disease symptoms where experts had missed them (Figure 9).</text></passage><passage><infon key="section_type">DISCUSS</infon><infon key="type">paragraph</infon><offset>34418</offset><text>Using Mechanical Turk, thousands of images could be annotated in only a few hours, reducing what was until then a major bottleneck in the model training process. Despite the fact that these workers (presumably) have no experience in plant disease diagnosis, their annotations were generally of high quality and could be used to train the model without the need for an expert to look over each one. With three annotations for each image, we were able to identify and filter both low-performing workers, whose annotations tended not to agree with others, and low-quality images, on which multiple (otherwise well-performing) workers drew annotations that did not agree. There are several possibilities for improving the MTurk annotation process. Increasing the number of workers per image could increase the quality of annotation polygons or the ease of identifying low-quality images.</text></passage><passage><infon key="section_type">DISCUSS</infon><infon key="type">paragraph</infon><offset>35302</offset><text>The cost of crowdsourcing via MTurk was quite low, at $0.03/lesion, implying a wage of $3.75/h based on the average time to annotate a lesion. Future studies would ideally compare different payment structures in order to maximize worker payment, minimize overhead, and maintain or increase annotation quality. Restructuring the HIT so that each consists of annotating multiple lesions, rather than just a single lesion, would decrease the payment to Amazon per image while paying workers the same per HIT. Many HITs posted on MTurk require a short qualification test to vet workers. In our case, workers could be asked to annotate three lesions adequately in order to be approved to complete HITs. Increasing worker payment in tandem with this could attract and retain better-performing annotators, providing workers with a higher wage while decreasing the amount of post-processing needed to filter out low-confidence annotations.</text></passage><passage><infon key="section_type">DISCUSS</infon><infon key="type">paragraph</infon><offset>36234</offset><text>We used a two-step method for semantic segmentation, first training a model to classify lesions, then using a sliding window approach and CRF to turn these classifications into semantic segmentation of a full image. This allowed us to make a useful comparison to a model trained on coarse, expert-generated annotations, since the same segmentation method could be used with both models’ output, isolating the impact of the annotation data rather than the segmentation approach used. However, newer methods for semantic segmentation, such as region proposal networks or atrous convolution might well perform the task better and faster.</text></passage><passage><infon key="section_type">DISCUSS</infon><infon key="type">paragraph</infon><offset>36871</offset><text>A chief limitation of this method is the difficulty of acquiring field images at high enough resolution and clarity such that individual lesions can be discerned. Capturing images in which each pixel represented a millimeter or less at canopy level required slow flights at low altitude with a high-zoom lens, not ideal for comprehensively imaging a large area. This challenge would be even greater when working with a disease with small or inconspicuous symptoms—chlorosis, leaf curling, lesions only a few millimeters in diameter—as opposed to the large, obvious lesions of NLB. Targeted sampling of a field, rather than attempting to image every plant, can still give growers a large amount of information with which to make decisions regarding disease management. Acquiring images and diagnosing lesions every 10 m or so would only analyze a very small proportion of a field’s total area, but it would provide much more information compared to the zig-zag walking paths commonly used when scouting for pests and diseases.</text></passage><passage><infon key="section_type">DISCUSS</infon><infon key="type">paragraph</infon><offset>37903</offset><text>UAVs are now a common part of many US growers’ field operations, and interest continues to grow. The use of UAVs for disease diagnosis is still in its infancy, however. We predict that UAV-based disease phenotyping will be most readily adopted in crops with a high value per acre where fungicide usage is common, such as grapes or almonds. In such crops, the added benefit of fast, frequent, reliable disease screening is most likely to outweigh the time and monetary costs needed to develop the diagnostic platform. As UAV and imaging technology progress, and more and more image datasets are generated and freely shared among researchers, we believe that UAV-based deep learning will become simpler to implement and will soon be a useful tool for growers and geneticists across many crops and pathosystems.</text></passage><passage><infon key="section_type">SUPPL</infon><infon key="type">title_1</infon><offset>38714</offset><text>Data Availability Statement</text></passage><passage><infon key="section_type">SUPPL</infon><infon key="type">paragraph</infon><offset>38742</offset><text>All images and annotations used, generated, or described herein are available in an Open Science Framework repository ().</text></passage><passage><infon key="section_type">AUTH_CONT</infon><infon key="type">title_1</infon><offset>38864</offset><text>Author Contributions</text></passage><passage><infon key="section_type">AUTH_CONT</infon><infon key="type">paragraph</infon><offset>38885</offset><text>Author TW-H planned and executed the crowdsourcing project, developed the models used to process the crowdsourced data, and wrote the manuscript. Authors ES and NK developed the UAV platform and captured the images. Authors TW-H and ES created the expert annotations. Authors HW and CD advised on CNN development and implementation. Authors HL, MG, and RN were PIs on the grant that funded this work and provided top-level project planning. All authors contributed to project design and editing of the manuscript.</text></passage><passage><infon key="section_type">ACK_FUND</infon><infon key="type">title_1</infon><offset>39399</offset><text>Funding</text></passage><passage><infon key="section_type">ACK_FUND</infon><infon key="type">paragraph</infon><offset>39407</offset><text>This research was funded by the U.S. National Science Foundation National Robotics Initiative (grant number 1527232).</text></passage><passage><infon key="section_type">COMP_INT</infon><infon key="type">title_1</infon><offset>39525</offset><text>Conflict of Interest</text></passage><passage><infon key="section_type">COMP_INT</infon><infon key="type">paragraph</infon><offset>39546</offset><text>Author TW-H was employed by company PepsiCo during preparation of this manuscript.</text></passage><passage><infon key="section_type">COMP_INT</infon><infon key="type">paragraph</infon><offset>39629</offset><text>The remaining authors declare that the research was conducted in the absence of any commercial or financial relationships that could be construed as a potential conflict of interest.</text></passage><passage><infon key="section_type">SUPPL</infon><infon key="type">title_1</infon><offset>39812</offset><text>Supplementary Material</text></passage><passage><infon key="section_type">SUPPL</infon><infon key="type">paragraph</infon><offset>39835</offset><text>The Supplementary Material for this article can be found online at: https://www.frontiersin.org/articles/10.3389/fpls.2019.01550/full#supplementary-material</text></passage><passage><infon key="section_type">REF</infon><infon key="type">title</infon><offset>39992</offset><text>References</text></passage><passage><infon key="fpage">52</infon><infon key="issue">1</infon><infon key="lpage">61</infon><infon key="name_0">surname:Araus;given-names:J. L.</infon><infon key="name_1">surname:Cairns;given-names:J. E.</infon><infon key="pub-id_doi">10.1016/j.tplants.2013.09.00</infon><infon key="pub-id_pmid">24139902</infon><infon key="section_type">REF</infon><infon key="source">Trends Plant Sci.</infon><infon key="type">ref</infon><infon key="volume">19</infon><infon key="year">2014</infon><offset>40003</offset><text>Field high-throughput phenotyping: the new crop breeding frontier</text></passage><passage><infon key="fpage">3479</infon><infon key="lpage">3487</infon><infon key="name_0">surname:Bell;given-names:S.</infon><infon key="name_1">surname:Upchurch;given-names:P.</infon><infon key="name_2">surname:Snavely;given-names:N.</infon><infon key="name_3">surname:Bala;given-names:K.</infon><infon key="pub-id_doi">10.1109/CVPR.2015.7298970</infon><infon key="section_type">REF</infon><infon key="source">Proc. IEEE Conf. On Comput. Vision And Pattern Recogni.</infon><infon key="type">ref</infon><infon key="year">2015</infon><offset>40069</offset><text>Material recognition in the wild with the materials in context database</text></passage><passage><infon key="name_0">surname:Chen;given-names:L.-C.</infon><infon key="name_1">surname:Papandreou;given-names:G.</infon><infon key="name_2">surname:Schroff;given-names:F.</infon><infon key="name_3">surname:Hartwig;given-names:A.</infon><infon key="section_type">REF</infon><infon key="type">ref</infon><infon key="year">2017</infon><offset>40141</offset><text>Rethinking atrous convolution for semantic image segmentation</text></passage><passage><infon key="name_0">surname:Chouhan;given-names:S. S.</infon><infon key="name_1">surname:Singh;given-names:U. P.</infon><infon key="name_2">surname:Jain;given-names:S.</infon><infon key="pub-id_doi">10.1007/s11831-019-09324-0</infon><infon key="section_type">REF</infon><infon key="source">Archives of computational methods in engineering.</infon><infon key="type">ref</infon><infon key="year">2019</infon><offset>40203</offset><text>Applications of computer vision in plant pathology: a survey</text></passage><passage><infon key="fpage">118</infon><infon key="lpage">226</infon><infon key="name_0">surname:Codella;given-names:N.</infon><infon key="name_1">surname:Cai;given-names:J.</infon><infon key="name_2">surname:Abedini;given-names:M.</infon><infon key="name_3">surname:Garnavi;given-names:R.</infon><infon key="name_4">surname:Halpern;given-names:A.</infon><infon key="name_5">surname:Smith;given-names:J. R.</infon><infon key="pub-id_doi">10.1007/978-3-319-24888-2_15</infon><infon key="section_type">REF</infon><infon key="source">Mach. Learn. Med. Imaging</infon><infon key="type">ref</infon><infon key="year">2015</infon><offset>40264</offset><text>Deep learning, sparse coding, and SVM for melanoma recognition in dermoscopy images</text></passage><passage><infon key="fpage">1426</infon><infon key="issue">11</infon><infon key="lpage">1432</infon><infon key="name_0">surname:DeChant;given-names:C.</infon><infon key="name_1">surname:Wiesner-Hanks;given-names:T.</infon><infon key="name_2">surname:Chen;given-names:S.</infon><infon key="name_3">surname:Stewart;given-names:E. L.</infon><infon key="name_4">surname:Yosinski;given-names:J.</infon><infon key="name_5">surname:Gore;given-names:M. A.</infon><infon key="pub-id_doi">10.1094/PHYTO-11-16-0417-R</infon><infon key="section_type">REF</infon><infon key="source">Phytopathol</infon><infon key="type">ref</infon><infon key="volume">107</infon><infon key="year">2017</infon><offset>40348</offset><text>Automated identification of northern leaf blight-infected maize plants from field imagery using deep learning</text></passage><passage><infon key="fpage">248</infon><infon key="lpage">255</infon><infon key="name_0">surname:Deng;given-names:J.</infon><infon key="name_1">surname:Dong;given-names:W.</infon><infon key="name_2">surname:Socher;given-names:R.</infon><infon key="name_3">surname:Li;given-names:L. J.</infon><infon key="name_4">surname:Li;given-names:K.</infon><infon key="name_5">surname:Fei-Fei;given-names:L.</infon><infon key="pub-id_doi">10.1109/CVPR.2009.5206848</infon><infon key="section_type">REF</infon><infon key="source">Proc. IEEE Conf. On Comput. Vision And Pattern Recogni.</infon><infon key="type">ref</infon><infon key="year">2009</infon><offset>40458</offset><text>Imagenet: a large-scale hierarchical image database</text></passage><passage><infon key="fpage">A3547</infon><infon key="name_0">surname:Doll;given-names:J.</infon><infon key="name_1">surname:Grau;given-names:C.</infon><infon key="name_2">surname:Jensen;given-names:B.</infon><infon key="name_3">surname:Wedberg;given-names:J.</infon><infon key="name_4">surname:Meyer;given-names:J.</infon><infon key="section_type">REF</infon><infon key="source">Scouting corn: A guide to efficient pest scouting.</infon><infon key="type">ref</infon><infon key="year">2016</infon><offset>40510</offset></passage><passage><infon key="name_0">surname:Gale;given-names:W.</infon><infon key="name_1">surname:Carneiro;given-names:G.</infon><infon key="name_2">surname:Oakden-Rayner;given-names:L.</infon><infon key="name_3">surname:Palmer;given-names:L. J.</infon><infon key="name_4">surname:Bradley;given-names:A. P.</infon><infon key="section_type">REF</infon><infon key="source">Detecting hip fractures with radiologist-level performance using deep neural networks.</infon><infon key="type">ref</infon><infon key="year">2017</infon><offset>40511</offset></passage><passage><infon key="elocation-id">104852</infon><infon key="name_0">surname:Gensheng;given-names:H.</infon><infon key="name_1">surname:Haoyu;given-names:W.</infon><infon key="name_2">surname:Yan;given-names:Z.</infon><infon key="name_3">surname:Mingzhu;given-names:W.</infon><infon key="pub-id_doi">10.1016/j.compag.2019.104852</infon><infon key="section_type">REF</infon><infon key="source">Comp. Elec. Agric.</infon><infon key="type">ref</infon><infon key="volume">163</infon><infon key="year">2019</infon><offset>40512</offset><text>A low shot learning method for tea leaf's disease identification</text></passage><passage><infon key="fpage">4613</infon><infon key="issue">18</infon><infon key="lpage">4618</infon><infon key="name_0">surname:Ghosal;given-names:S.</infon><infon key="name_1">surname:Blystone;given-names:D.</infon><infon key="name_2">surname:Singh;given-names:A. K.</infon><infon key="name_3">surname:Ganapathysubramanian;given-names:B.</infon><infon key="name_4">surname:Singh;given-names:A.</infon><infon key="name_5">surname:Sarkar;given-names:S.</infon><infon key="pub-id_doi">10.1073/pnas.1716999115</infon><infon key="pub-id_pmid">29666265</infon><infon key="section_type">REF</infon><infon key="source">Proc. Nat. Acad. Sci.</infon><infon key="type">ref</infon><infon key="volume">115</infon><infon key="year">2018</infon><offset>40577</offset><text>An explainable deep machine vision framework for plant stress phenotyping</text></passage><passage><infon key="elocation-id">042621</infon><infon key="issue">4</infon><infon key="name_0">surname:Ha;given-names:J. G.</infon><infon key="name_1">surname:Moon;given-names:H.</infon><infon key="name_2">surname:Kwak;given-names:J. T.</infon><infon key="name_3">surname:Hassan;given-names:S. I.</infon><infon key="name_4">surname:Dang;given-names:M.</infon><infon key="name_5">surname:Lee;given-names:O. N.</infon><infon key="pub-id_doi">10.1117/1.JRS.11.042621</infon><infon key="section_type">REF</infon><infon key="source">J. Appl. Remote Sens.</infon><infon key="type">ref</infon><infon key="volume">11</infon><infon key="year">2017</infon><offset>40651</offset><text>Deep convolutional neural network for classifying Fusarium wilt of radish from unmanned aerial vehicles</text></passage><passage><infon key="fpage">1836</infon><infon key="issue">8</infon><infon key="lpage">1842</infon><infon key="name_0">surname:Haenssle;given-names:H. A.</infon><infon key="name_1">surname:Fink;given-names:C.</infon><infon key="name_2">surname:Schneiderbauer;given-names:R.</infon><infon key="name_3">surname:Toberer;given-names:F.</infon><infon key="name_4">surname:Buhl;given-names:T.</infon><infon key="name_5">surname:Blum;given-names:A.</infon><infon key="pub-id_doi">10.1093/annonc/mdy166</infon><infon key="pub-id_pmid">29846502</infon><infon key="section_type">REF</infon><infon key="source">Ann. Oncol.</infon><infon key="type">ref</infon><infon key="volume">29</infon><infon key="year">2018</infon><offset>40755</offset><text>Man against machine: diagnostic performance of a deep learning convolutional neural network for dermoscopic melanoma recognition in comparison to 58 dermatologists</text></passage><passage><infon key="fpage">770</infon><infon key="lpage">778</infon><infon key="name_0">surname:He;given-names:K.</infon><infon key="name_1">surname:Zhang;given-names:X.</infon><infon key="name_2">surname:Ren;given-names:S.</infon><infon key="name_3">surname:Sun;given-names:J.</infon><infon key="pub-id_doi">10.1109/CVPR.2016.90</infon><infon key="section_type">REF</infon><infon key="source">In Proc. IEEE Conf. On Comput. Vision And Pattern Recogni.</infon><infon key="type">ref</infon><infon key="year">2016</infon><offset>40919</offset><text>Deep residual learning for image recognition</text></passage><passage><infon key="elocation-id">034002</infon><infon key="issue">3</infon><infon key="name_0">surname:Heim;given-names:E.</infon><infon key="name_1">surname:Roß;given-names:T.</infon><infon key="name_2">surname:Seitel;given-names:A.</infon><infon key="name_3">surname:März;given-names:K.</infon><infon key="name_4">surname:Stieltjes;given-names:B.</infon><infon key="name_5">surname:Eisenmann;given-names:M.</infon><infon key="pub-id_doi">10.1117/1.JMI.5.3.034002</infon><infon key="section_type">REF</infon><infon key="source">J. Med. Imag.</infon><infon key="type">ref</infon><infon key="volume">5</infon><infon key="year">2018</infon><offset>40964</offset><text>Large-scale medical image annotation with crowd-powered algorithms</text></passage><passage><infon key="name_0">surname:James;given-names:G.</infon><infon key="name_1">surname:Witten;given-names:D.</infon><infon key="name_2">surname:Hastie;given-names:T.</infon><infon key="name_3">surname:Tibshirani;given-names:R.</infon><infon key="section_type">REF</infon><infon key="source">An introduction to statistical learning with applications in R.</infon><infon key="type">ref</infon><infon key="year">2017</infon><offset>41031</offset></passage><passage><infon key="fpage">237</infon><infon key="lpage">243</infon><infon key="name_0">surname:Kerkech;given-names:M.</infon><infon key="name_1">surname:Hafiane;given-names:A.</infon><infon key="name_2">surname:Canals;given-names:R.</infon><infon key="pub-id_doi">10.1016/j.compag.2018.10.006</infon><infon key="section_type">REF</infon><infon key="source">Comp. Elec. Agr.</infon><infon key="type">ref</infon><infon key="volume">155</infon><infon key="year">2018</infon><offset>41032</offset><text>Deep learning approach with colorimetric spaces and vegetation indices for vine diseases detection in UAV images</text></passage><passage><infon key="fpage">109</infon><infon key="lpage">117</infon><infon key="name_0">surname:Krähenbühl;given-names:P.</infon><infon key="name_1">surname:Koltun;given-names:V.</infon><infon key="section_type">REF</infon><infon key="source">Adv. Neural Inf. Proc. Syst.</infon><infon key="type">ref</infon><infon key="year">2011</infon><offset>41145</offset><text>Efficient inference in fully connected CRFs with gaussian edge potentials</text></passage><passage><infon key="fpage">740</infon><infon key="lpage">755</infon><infon key="name_0">surname:Lin;given-names:T. Y.</infon><infon key="name_1">surname:Maire;given-names:M.</infon><infon key="name_2">surname:Belongie;given-names:S.</infon><infon key="name_3">surname:Hays;given-names:J.</infon><infon key="name_4">surname:Perona;given-names:P.</infon><infon key="name_5">surname:Ramanan;given-names:D.</infon><infon key="pub-id_doi">10.1007/978-3-319-10602-1_48</infon><infon key="section_type">REF</infon><infon key="source">Eur. Conf. Comput. Vision</infon><infon key="type">ref</infon><infon key="year">2014</infon><offset>41219</offset><text>Microsoft COCO: Common objects in context</text></passage><passage><infon key="name_0">surname:Liu;given-names:L.</infon><infon key="name_1">surname:Ouyang;given-names:W.</infon><infon key="name_2">surname:Wang.;given-names:X.</infon><infon key="name_3">surname:Fieguth;given-names:P.</infon><infon key="name_4">surname:Chen;given-names:J.</infon><infon key="name_5">surname:Liu;given-names:X.</infon><infon key="section_type">REF</infon><infon key="type">ref</infon><infon key="year">2018</infon><offset>41261</offset><text>Deep learning for generic object detection: a survey</text></passage><passage><infon key="name_0">surname:Luck;given-names:B.</infon><infon key="name_1">surname:Drewry;given-names:J.</infon><infon key="name_2">surname:Nelson;given-names:J.</infon><infon key="section_type">REF</infon><infon key="type">ref</infon><infon key="year">2018</infon><offset>41314</offset><text>Unmanned aerial vehicles: What you need to know for use in production agriculture</text></passage><passage><infon key="fpage">152</infon><infon key="issue">2</infon><infon key="lpage">164</infon><infon key="name_0">surname:Maes;given-names:W. H.</infon><infon key="name_1">surname:Steppe;given-names:K.</infon><infon key="pub-id_doi">10.1016/j.tplants.2018.11.007</infon><infon key="pub-id_pmid">30558964</infon><infon key="section_type">REF</infon><infon key="source">Trends Plant Sci.</infon><infon key="type">ref</infon><infon key="volume">24</infon><infon key="year">2019</infon><offset>41396</offset><text>Perspectives for remote sensing with unmanned aerial vehicles in precision agriculture</text></passage><passage><infon key="name_0">surname:Maji;given-names:S.</infon><infon key="name_1">surname:Rahtu;given-names:E.</infon><infon key="name_2">surname:Kannala;given-names:J.</infon><infon key="name_3">surname:Blaschko;given-names:M.</infon><infon key="name_4">surname:Vedaldi;given-names:A.</infon><infon key="section_type">REF</infon><infon key="type">ref</infon><infon key="year">2013</infon><offset>41483</offset><text>Fine-grained visual classification of aircraft</text></passage><passage><infon key="name_0">surname:Miller;given-names:J. O.</infon><infon key="name_1">surname:Adkins;given-names:J.</infon><infon key="section_type">REF</infon><infon key="type">ref</infon><infon key="year">2018</infon><offset>41530</offset><text>Types of drones for field crop production</text></passage><passage><infon key="elocation-id">1419</infon><infon key="name_0">surname:Mohanty;given-names:S. P.</infon><infon key="name_1">surname:Hughes;given-names:D. P.</infon><infon key="name_2">surname:Salathé;given-names:M.</infon><infon key="pub-id_doi">10.3389/fpls.2016.01419</infon><infon key="pub-id_pmid">27713752</infon><infon key="section_type">REF</infon><infon key="source">Front. Plant Sci.</infon><infon key="type">ref</infon><infon key="volume">7</infon><infon key="year">2016</infon><offset>41572</offset><text>Using deep learning for image-based plant disease detection</text></passage><passage><infon key="name_0">surname:Park;given-names:J. H.</infon><infon key="name_1">surname:Mirhosseini;given-names:S.</infon><infon key="name_2">surname:Nadeem;given-names:S.</infon><infon key="name_3">surname:Marino;given-names:J.</infon><infon key="name_4">surname:Kaufman;given-names:A.</infon><infon key="name_5">surname:Baker;given-names:K.</infon><infon key="pub-id_doi">10.1117/12.2252281</infon><infon key="section_type">REF</infon><infon key="source">Imaging Inf. Healthcare Res. Appl.</infon><infon key="type">ref</infon><infon key="year">2017</infon><offset>41632</offset><text>Crowdsourcing for identification of polyp-free segments in virtual colonoscopy videos. In Medical Imaging 2017</text></passage><passage><infon key="fpage">280</infon><infon key="lpage">290</infon><infon key="name_0">surname:Picon;given-names:A.</infon><infon key="name_1">surname:Alvarez-Gila;given-names:A.</infon><infon key="name_2">surname:Seitz;given-names:M.</infon><infon key="name_3">surname:Ortiz-Barredo;given-names:A.</infon><infon key="name_4">surname:Echazarra;given-names:J.</infon><infon key="name_5">surname:Johannes;given-names:A.</infon><infon key="pub-id_doi">10.1016/j.compag.2018.04.002</infon><infon key="section_type">REF</infon><infon key="source">Comp. Elec. Agr.</infon><infon key="type">ref</infon><infon key="volume">161</infon><infon key="year">2019</infon><offset>41743</offset><text>Deep convolutional neural networks for mobile capture device-based crop disease classification in the wild</text></passage><passage><infon key="section_type">REF</infon><infon key="type">ref</infon><infon key="year">2018</infon><offset>41850</offset><text>UAVs for field diagnosis</text></passage><passage><infon key="name_0">surname:Ren;given-names:S.</infon><infon key="name_1">surname:He;given-names:K.</infon><infon key="name_2">surname:Girschick;given-names:R.</infon><infon key="name_3">surname:Sun;given-names:J.</infon><infon key="section_type">REF</infon><infon key="source">Faster R-CNN: Towards real-time object detection with region proposal networks.</infon><infon key="type">ref</infon><infon key="year">2016</infon><offset>41875</offset></passage><passage><infon key="fpage">211</infon><infon key="issue">3</infon><infon key="lpage">252</infon><infon key="name_0">surname:Russakovsky;given-names:O.</infon><infon key="name_1">surname:Deng;given-names:J.</infon><infon key="name_2">surname:Su;given-names:H.</infon><infon key="name_3">surname:Krause;given-names:J.</infon><infon key="name_4">surname:Satheesh;given-names:S.</infon><infon key="name_5">surname:Ma;given-names:S.</infon><infon key="pub-id_doi">10.1007/s11263-015-0816-y</infon><infon key="section_type">REF</infon><infon key="source">Int. J. Comp. Vis.</infon><infon key="type">ref</infon><infon key="volume">115</infon><infon key="year">2015</infon><offset>41876</offset><text>Imagenet large scale visual recognition challenge</text></passage><passage><infon key="fpage">184</infon><infon key="lpage">192</infon><infon key="name_0">surname:Shakoor;given-names:N.</infon><infon key="name_1">surname:Lee;given-names:S.</infon><infon key="name_2">surname:Mocker;given-names:T. C.</infon><infon key="pub-id_doi">10.1016/j.pbi.2017.05.006</infon><infon key="section_type">REF</infon><infon key="source">Curr. Op. Plant Biol.</infon><infon key="type">ref</infon><infon key="volume">38</infon><infon key="year">2017</infon><offset>41926</offset><text>High throughput phenotyping to accelerate crop breeding and monitoring of diseases in the field</text></passage><passage><infon key="fpage">110</infon><infon key="issue">2</infon><infon key="lpage">124</infon><infon key="name_0">surname:Singh;given-names:A.</infon><infon key="name_1">surname:Ganapathysubramanian;given-names:B.</infon><infon key="name_2">surname:Singh;given-names:A. K.</infon><infon key="name_3">surname:Sarkar;given-names:S.</infon><infon key="pub-id_doi">10.1016/j.tplants.2015.10.015</infon><infon key="pub-id_pmid">26651918</infon><infon key="section_type">REF</infon><infon key="source">Trends Plant Sci.</infon><infon key="type">ref</infon><infon key="volume">21</infon><infon key="year">2016</infon><offset>42022</offset><text>Machine learning for high-throughput stress phenotyping in plants</text></passage><passage><infon key="elocation-id">2209</infon><infon key="issue">19</infon><infon key="name_0">surname:Stewart;given-names:E. L.</infon><infon key="name_1">surname:Wiesner-Hanks;given-names:T.</infon><infon key="name_2">surname:Kaczmar;given-names:N.</infon><infon key="name_3">surname:DeChant;given-names:C.</infon><infon key="name_4">surname:Wu;given-names:C.</infon><infon key="name_5">surname:Lipson;given-names:L.</infon><infon key="pub-id_doi">10.3390/rs11192209</infon><infon key="section_type">REF</infon><infon key="source">Remote Sens.</infon><infon key="type">ref</infon><infon key="volume">11</infon><infon key="year">2019</infon><offset>42088</offset><text>Quantitative phenotyping of Northern Leaf Blight in UAV images using deep learning</text></passage><passage><infon key="fpage">1800594</infon><infon key="name_0">surname:Sugiura;given-names:R.</infon><infon key="name_1">surname:Tsuda;given-names:S.</infon><infon key="name_2">surname:Tsuji;given-names:H.</infon><infon key="name_3">surname:Murakami;given-names:N.</infon><infon key="pub-id_doi">10.13031/aim.201800594</infon><infon key="section_type">REF</infon><infon key="source">2018 ASABE Ann. Int. Meeting.</infon><infon key="type">ref</infon><infon key="year">2018</infon><offset>42171</offset><text>Virus-infected plant detection in potato seed production field by UAV imagery</text></passage><passage><infon key="fpage">2190</infon><infon key="issue">12</infon><infon key="lpage">2194</infon><infon key="name_0">surname:Tetila;given-names:E. C.</infon><infon key="name_1">surname:Machado;given-names:B. B.</infon><infon key="name_2">surname:Belete;given-names:N.A.d.S.</infon><infon key="name_3">surname:Guimarães;given-names:D. A.</infon><infon key="name_4">surname:Pistori;given-names:H.</infon><infon key="pub-id_doi">10.1109/LGRS.2017.2743715</infon><infon key="section_type">REF</infon><infon key="source">IEEE Geosci. Remote Sens. Let.</infon><infon key="type">ref</infon><infon key="volume">14</infon><infon key="year">2017</infon><offset>42249</offset><text>Identification of soybean foliar diseases using unmanned aerial vehicle images</text></passage><passage><infon key="name_0">surname:Tetila;given-names:E. C.</infon><infon key="name_1">surname:Machado;given-names:B. B.</infon><infon key="name_2">surname:Menezes;given-names:G. K.</infon><infon key="name_3">surname:Oliveira</infon><infon key="name_4">surname:Alvarez;given-names:M.</infon><infon key="name_5">surname:Amorim;given-names:W. P.</infon><infon key="pub-id_doi">10.1109/LGRS.2019.2932385</infon><infon key="section_type">REF</infon><infon key="source">IEEE Geosci. Remote Sens. Let.</infon><infon key="type">ref</infon><infon key="year">2019</infon><offset>42328</offset><text>Automatic recognition of soybean leaf diseases using UAV images and deep convolutional neural networks</text></passage><passage><infon key="fpage">989</infon><infon key="issue">12</infon><infon key="lpage">991</infon><infon key="name_0">surname:Tsaftaris;given-names:S. A.</infon><infon key="name_1">surname:Minervini;given-names:M.</infon><infon key="name_2">surname:Scharr;given-names:H.</infon><infon key="pub-id_doi">10.1016/j.tplants.2016.10.002</infon><infon key="pub-id_pmid">27810146</infon><infon key="section_type">REF</infon><infon key="source">Trends Plant Sci.</infon><infon key="type">ref</infon><infon key="volume">21</infon><infon key="year">2016</infon><offset>42431</offset><text>Machine learning for plant phenotyping needs image processing</text></passage><passage><infon key="elocation-id">1190</infon><infon key="name_0">surname:Ubbens;given-names:J. R.</infon><infon key="name_1">surname:Stavness;given-names:I.</infon><infon key="pub-id_doi">10.3389/fpls.2017.01190</infon><infon key="pub-id_pmid">28736569</infon><infon key="section_type">REF</infon><infon key="source">Front. Plant Sci.</infon><infon key="type">ref</infon><infon key="volume">8</infon><infon key="year">2017</infon><offset>42493</offset><text>Deep plant phenomics: a deep learning platform for complex plant phenotyping tasks</text></passage><passage><infon key="fpage">595</infon><infon key="lpage">604</infon><infon key="name_0">surname:Van Horn;given-names:G.</infon><infon key="name_1">surname:Branson;given-names:S.</infon><infon key="name_2">surname:Farrell;given-names:R.</infon><infon key="name_3">surname:Haber;given-names:S.</infon><infon key="name_4">surname:Barry;given-names:J.</infon><infon key="name_5">surname:Ipeirotis;given-names:P.</infon><infon key="pub-id_doi">10.1109/CVPR.2015.7298658</infon><infon key="section_type">REF</infon><infon key="source">Proc. IEEE Conf. Comput. Vision Pattern Recogni.</infon><infon key="type">ref</infon><infon key="year">2015</infon><offset>42576</offset><text>Building a bird recognition app and large scale dataset with citizen scientists: The fine print in fine-grained dataset collection</text></passage><passage><infon key="fpage">440</infon><infon key="issue">1</infon><infon key="name_0">surname:Wiesner-Hanks;given-names:T.</infon><infon key="name_1">surname:Stewart;given-names:E. L.</infon><infon key="name_2">surname:Kaczmar;given-names:N.</infon><infon key="name_3">surname:DeChant;given-names:C.</infon><infon key="name_4">surname:Wu;given-names:H.</infon><infon key="name_5">surname:Nelson;given-names:R. J.</infon><infon key="pub-id_doi">10.1186/s13104-018-3548-6</infon><infon key="pub-id_pmid">29970178</infon><infon key="section_type">REF</infon><infon key="source">BMC Res. Notes</infon><infon key="type">ref</infon><infon key="volume">11</infon><infon key="year">2018</infon><offset>42707</offset><text>Image set for deep learning: field images of maize annotated with disease symptoms</text></passage><passage><infon key="issue">1</infon><infon key="name_0">surname:Wu;given-names:H.</infon><infon key="name_1">surname:Wiesner-Hanks;given-names:T.</infon><infon key="name_2">surname:Stewart;given-names:E. L.</infon><infon key="name_3">surname:DeChant;given-names:C.</infon><infon key="name_4">surname:Kaczmar;given-names:N.</infon><infon key="name_5">surname:Gore;given-names:M. A.</infon><infon key="pub-id_doi">10.2135/tppj2019.03.0006</infon><infon key="section_type">REF</infon><infon key="source">Plant Phenome J.</infon><infon key="type">ref</infon><infon key="volume">2</infon><infon key="year">2019</infon><offset>42790</offset><text>Autonomous detection of plant disease symptoms directly from aerial imagery</text></passage><passage><infon key="elocation-id">1111</infon><infon key="name_0">surname:Yang;given-names:G.</infon><infon key="name_1">surname:Liu;given-names:J.</infon><infon key="name_2">surname:Zhao;given-names:C.</infon><infon key="name_3">surname:Li;given-names:Z.</infon><infon key="name_4">surname:Huang;given-names:Y.</infon><infon key="name_5">surname:Yu;given-names:H.</infon><infon key="pub-id_doi">10.3389/fpls.2017.01111</infon><infon key="pub-id_pmid">28713402</infon><infon key="section_type">REF</infon><infon key="source">Front. Plant Sci.</infon><infon key="type">ref</infon><infon key="volume">8</infon><infon key="year">2017</infon><offset>42866</offset><text>Unmanned aerial vehicle remote sensing for field-based crop phenotyping: current status and perspectives</text></passage><passage><infon key="elocation-id">e1006337</infon><infon key="issue">7</infon><infon key="name_0">surname:Zhou;given-names:N.</infon><infon key="name_1">surname:Siegel;given-names:Z. D.</infon><infon key="name_2">surname:Zarecor;given-names:S.</infon><infon key="name_3">surname:Lee;given-names:N.</infon><infon key="name_4">surname:Campbell;given-names:D. A.</infon><infon key="name_5">surname:Andorf;given-names:C. A.</infon><infon key="pub-id_doi">10.1371/journal.pcbi.1006337</infon><infon key="section_type">REF</infon><infon key="source">PLoS Comp. Biol.</infon><infon key="type">ref</infon><infon key="volume">14</infon><infon key="year">2018</infon><offset>42971</offset><text>Crowdsourcing image analysis for plant phenomics to generate ground truth data for machine learning</text></passage></document></collection>
