<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE collection SYSTEM "BioC.dtd">
<collection><source>PMC</source><date>20201222</date><key>pmc.key</key><document><id>6219177</id><infon key="license">CC BY</infon><passage><infon key="article-id_doi">10.1186/s13059-018-1539-5</infon><infon key="article-id_pmc">6219177</infon><infon key="article-id_pmid">30400818</infon><infon key="article-id_publisher-id">1539</infon><infon key="elocation-id">188</infon><infon key="kwd">Somatic mutations Simulation Structural variants Benchmarking Cancer genomics Whole-genome sequencing Crowdsourcing</infon><infon key="license">Open AccessThis article is distributed under the terms of the Creative Commons Attribution 4.0 International License (http://creativecommons.org/licenses/by/4.0/), which permits unrestricted use, distribution, and reproduction in any medium, provided you give appropriate credit to the original author(s) and the source, provide a link to the Creative Commons license, and indicate if changes were made. The Creative Commons Public Domain Dedication waiver (http://creativecommons.org/publicdomain/zero/1.0/) applies to the data made available in this article, unless otherwise stated.</infon><infon key="name_0">surname:Lee;given-names:Anna Y.</infon><infon key="name_1">surname:Ewing;given-names:Adam D.</infon><infon key="name_10">surname:Caloian;given-names:Cristian</infon><infon key="name_11">surname:Yamaguchi;given-names:Takafumi N.</infon><infon key="name_12">surname:Barnes;given-names:Bret D</infon><infon key="name_13">surname:Birol;given-names:Inanc</infon><infon key="name_14">surname:Chen;given-names:Xiaoyu</infon><infon key="name_15">surname:Chiu;given-names:Readman</infon><infon key="name_16">surname:Cox;given-names:Anthony J</infon><infon key="name_17">surname:Ding;given-names:Li</infon><infon key="name_18">surname:Fritz;given-names:Markus H-Y</infon><infon key="name_19">surname:Grigoriev;given-names:Andrey</infon><infon key="name_2">surname:Ellrott;given-names:Kyle</infon><infon key="name_20">surname:Hach;given-names:Faraz</infon><infon key="name_21">surname:Kawash;given-names:Joseph K</infon><infon key="name_22">surname:Korbel;given-names:Jan O</infon><infon key="name_23">surname:Kruglyak;given-names:Semyon</infon><infon key="name_24">surname:Liao;given-names:Yang</infon><infon key="name_25">surname:McPherson;given-names:Andrew</infon><infon key="name_26">surname:Nip;given-names:Ka Ming</infon><infon key="name_27">surname:Rausch;given-names:Tobias</infon><infon key="name_28">surname:Sahinalp;given-names:S Cenk</infon><infon key="name_29">surname:Sarrafi;given-names:Iman</infon><infon key="name_3">surname:Hu;given-names:Yin</infon><infon key="name_30">surname:Saunders;given-names:Christopher T</infon><infon key="name_31">surname:Schulz-Trieglaff;given-names:Ole</infon><infon key="name_32">surname:Shaw;given-names:Richard</infon><infon key="name_33">surname:Shi;given-names:Wei</infon><infon key="name_34">surname:Smith;given-names:Sean D</infon><infon key="name_35">surname:Song;given-names:Lei</infon><infon key="name_36">surname:Wang;given-names:Difei</infon><infon key="name_37">surname:Ye;given-names:Kai</infon><infon key="name_38">surname:Kellen;given-names:Michael R.</infon><infon key="name_39">surname:Chen;given-names:Ken</infon><infon key="name_4">surname:Houlahan;given-names:Kathleen E.</infon><infon key="name_40">surname:Norman;given-names:Thea C.</infon><infon key="name_41">surname:Friend;given-names:Stephen H.</infon><infon key="name_42">surname:Guinney;given-names:Justin</infon><infon key="name_43">surname:Stolovitzky;given-names:Gustavo</infon><infon key="name_44">surname:Haussler;given-names:David</infon><infon key="name_45">surname:Margolin;given-names:Adam A.</infon><infon key="name_46">surname:Stuart;given-names:Joshua M.</infon><infon key="name_47">surname:Boutros;given-names:Paul C.</infon><infon key="name_5">surname:Bare;given-names:J. Christopher</infon><infon key="name_6">surname:Espiritu;given-names:Shadrielle Melijah G.</infon><infon key="name_7">surname:Huang;given-names:Vincent</infon><infon key="name_8">surname:Dang;given-names:Kristen</infon><infon key="name_9">surname:Chong;given-names:Zechen</infon><infon key="section_type">TITLE</infon><infon key="title">Keywords</infon><infon key="type">front</infon><infon key="volume">19</infon><infon key="year">2018</infon><offset>0</offset><text>Combining accurate tumor genome simulation with crowdsourcing to benchmark somatic structural variant detection</text></passage><passage><infon key="section_type">ABSTRACT</infon><infon key="type">abstract_title_1</infon><offset>112</offset><text>Background</text></passage><passage><infon key="section_type">ABSTRACT</infon><infon key="type">abstract</infon><offset>123</offset><text>The phenotypes of cancer cells are driven in part by somatic structural variants. Structural variants can initiate tumors, enhance their aggressiveness, and provide unique therapeutic opportunities. Whole-genome sequencing of tumors can allow exhaustive identification of the specific structural variants present in an individual cancer, facilitating both clinical diagnostics and the discovery of novel mutagenic mechanisms. A plethora of somatic structural variant detection algorithms have been created to enable these discoveries; however, there are no systematic benchmarks of them. Rigorous performance evaluation of somatic structural variant detection methods has been challenged by the lack of gold standards, extensive resource requirements, and difficulties arising from the need to share personal genomic information.</text></passage><passage><infon key="section_type">ABSTRACT</infon><infon key="type">abstract_title_1</infon><offset>953</offset><text>Results</text></passage><passage><infon key="section_type">ABSTRACT</infon><infon key="type">abstract</infon><offset>961</offset><text>To facilitate structural variant detection algorithm evaluations, we create a robust simulation framework for somatic structural variants by extending the BAMSurgeon algorithm. We then organize and enable a crowdsourced benchmarking within the ICGC-TCGA DREAM Somatic Mutation Calling Challenge (SMC-DNA). We report here the results of structural variant benchmarking on three different tumors, comprising 204 submissions from 15 teams. In addition to ranking methods, we identify characteristic error profiles of individual algorithms and general trends across them. Surprisingly, we find that ensembles of analysis pipelines do not always outperform the best individual method, indicating a need for new ways to aggregate somatic structural variant detection approaches.</text></passage><passage><infon key="section_type">ABSTRACT</infon><infon key="type">abstract_title_1</infon><offset>1734</offset><text>Conclusions</text></passage><passage><infon key="section_type">ABSTRACT</infon><infon key="type">abstract</infon><offset>1746</offset><text>The synthetic tumors and somatic structural variant detection leaderboards remain available as a community benchmarking resource, and BAMSurgeon is available at https://github.com/adamewing/bamsurgeon.</text></passage><passage><infon key="section_type">ABSTRACT</infon><infon key="type">abstract_title_1</infon><offset>1948</offset><text>Electronic supplementary material</text></passage><passage><infon key="section_type">ABSTRACT</infon><infon key="type">abstract</infon><offset>1982</offset><text>The online version of this article (10.1186/s13059-018-1539-5) contains supplementary material, which is available to authorized users.</text></passage><passage><infon key="section_type">INTRO</infon><infon key="type">title_1</infon><offset>2118</offset><text>Background</text></passage><passage><infon key="section_type">INTRO</infon><infon key="type">paragraph</infon><offset>2129</offset><text>Somatic structural variants (SVs) are mutations that arise in tumors involving rearrangements, duplications, or deletions of large segments of DNA. SVs are often defined to be events larger than 100Â bp in size, although with significant variability in this definition. Somatic SVs are critical in driving and regulating tumor biology. They can initiate tumors and, because they are unique to the cancer, can serve as highly selective avenues for therapeutic intervention. The overall mutation load of somatic SVs serves as a proxy for genomic instability and can robustly predict tumor aggressiveness in multiple tumor types.</text></passage><passage><infon key="section_type">INTRO</infon><infon key="type">paragraph</infon><offset>2756</offset><text>While somatic SVs that alter copy number can be detected using microarray assays, the resolution of such studies is limited, and many other important types of SVs cannot be detected. As a result, high-throughput DNA sequencing is now a standard approach for detecting SVs in cancer genomes. Although RNA-based assays are useful for detecting SVs that alter protein structure, DNA-based assays are required for most others. As a result, a broad range of algorithms has been developed to detect SVs from short-read sequencing data using read depth analysis, split read (i.e., a read that maps to multiple different parts of the reference sequence) alignment, paired-end mapping, and de novo assembly techniques. However, the accuracy of existing methods is poorly described. There are no comprehensive benchmarks of somatic SV detection approaches. Most comparison results are reported by the developers of newly published methods. These developer-run benchmarks are potentially subject to several types of selection biases. For example, the developers of one tool may be experts in parameterizing and tuning it, but may lack the same skill in tuning methods developed by others. Further, evaluating the accuracy of somatic SV detection is more challenging than evaluating the accuracy of somatic single nucleotide variant (SNV) detection as validation data is more difficult to generate for SVs. Even the metrics of measuring accuracy are not agreed upon, with no community-accepted standards on how SV prediction accuracy should be assessed, especially when predictions are close to, but not exactly at, the actual sequence breakpoints. As a result, there are no robust estimates of the false positive and false negative rates of somatic SV prediction tools on tumors of different characteristics.</text></passage><passage><infon key="section_type">INTRO</infon><infon key="type">paragraph</infon><offset>4554</offset><text>To fill this gap, we created an open challenge-based assessment of somatic SV prediction tools as part of the ICGC-TCGA DREAM Somatic Mutation Calling Challenge (the Challenge). The lack of fully characterized tumor genomes for building gold standard sets of SVs motivated our simulation approach. Specifically, we first extended BAMSurgeon, a tool for adding simulated mutations to existing reads, to generate somatic SVs. This approach is advantageous because it permits flexibility with the added mutations while also capturing sequencing technology biases through the use of existing reads. We created and distributed in silico tumors (IS1-IS3), on which 204 submissions were made by 15 teams.</text></passage><passage><infon key="section_type">RESULTS</infon><infon key="type">title_1</infon><offset>5252</offset><text>Results</text></passage><passage><infon key="section_type">RESULTS</infon><infon key="type">title_2</infon><offset>5260</offset><text>Simulation of SVs with BAMSurgeon</text></passage><passage><infon key="file">13059_2018_1539_Fig1_HTML.jpg</infon><infon key="id">Fig1</infon><infon key="section_type">FIG</infon><infon key="type">fig_caption</infon><offset>5294</offset><text>BAMSurgeon simulates SVs in genome sequences. Method for adding SVs to existing BAM alignments. a Overview of SV (e.g., deletion) spike-in: Starting with an original BAM (i), a region (ii) is selected where a deletion is desired. (iii) Contigs are assembled from reads in the selected region, and the contig is rearranged by deleting the middle. The amount of contig deleted is a user-definable parameter. Read coverage is generated over the contig using wgsim to match the number of reads per base in the original BAM. Since the deletion contig is shorter than the original, fewer reads will be required to achieve the equivalent coverage. (iv) Generated read pairs include discordant pairs (i.e., paired reads that do not align to the reference genome with the expected relative orientation and inner distance) spanning the deletion and clipped reads (i.e., reads that are only partially aligned to the reference). Reads mapping to the deleted region of the contig are not included in the final BAM. b, c To test the robustness of BAMSurgeon with respect to changes in (b) aligner and (c) cell line, we compared the ranks of CREST, Delly, Manta, and novoBreak on two new tumor-normal datasets: one with an alternative aligner, NovoAlign, and the other on an alternative cell line, HCC1954 BL. Callers were scored with fâ=â100Â bp (AdditionalÂ fileÂ 1: Figure S2b); Manta retained the top position, independent of aligner and cell line. d Summary of the three in silico (IS) tumors described here. Abbreviations: DEL, deletion; DUP, duplication; INV, inversion; INS, insertion</text></passage><passage><infon key="section_type">RESULTS</infon><infon key="type">paragraph</infon><offset>6876</offset><text>In addition to point mutations [SNVs and short insertions or deletions (INDELs)], BAMSurgeon is capable of creating simple SVs through read selection, local sequence assembly, manipulation of assembled contigs, and simulation of sequence coverage over the altered contigs (Fig.Â 1a, AdditionalÂ fileÂ 1: Figure S1). This, combined with careful tracking of read depth, yields approximations of SVs including insertions, deletions, duplication, and inversions into pre-existing backgrounds of real sequence data. Here, we present results based on simulations of those SV types. Subsequent to the Challenge, BAMSurgeon was extended to support translocations and more complex rearrangements. The BAMSurgeon manual, available online, contains a full description of input formatting and available parameters. The input regions define where local assembly will be attempted via Velvet. For each region, the largest assembled contig is selected and re-aligned to the reference genome using Exonerate. The contig is then trimmed to the length of its longest contiguous alignment, and the alignment is used to accurately track breakpoint locations within the contig in terms of reference coordinate space. The location and identity of reads from the original BAM file in the assembled contig are tracked via parsing of the AMOS file output by Velvet, which also enables tracking of reads included or excluded after contig trimming. If a suitable contig (i.e., sufficiently long, with a sufficiently low number of discordant read pairs) is not available for a given input region, no mutation is made for that region. For each segment where contig assembly succeeds, the contig is rearranged according to the user specification (e.g., insertion, deletion, duplication, or inversion of sequence). Then, paired reads are simulated from the rearranged contig using wgsim, with specific parameters controllable by the user. Because reads are simulated using the rearranged contig, breakpoint-spanning reads and reads that will be discordant versus the reference genome assembly will be created. The number of reads simulated (final coverage, Cf) depends on the original coverage Co, the difference in length between the original contig Lo and the rearranged contig Lf, and a user-specified parameter controlling variant allele fraction (VAF). Thus, Cfâ=âVAF*Co*(Lf/Lo). Duplications and insertions result in larger contigs and require new reads to be added to the final BAM, and deletions yielding a smaller contig require reads to be removed from the final BAM. In the latter case, a list of reads to be deleted is maintained, which correspond to reads covering the deleted region in the original BAM. BAMSurgeon requires approximately 4Â GB of memory per thread if using the Burrows-Wheeler Aligner (BWA). Its runtime varies depending on the number, variety, and locations of the mutations, as well as the depth of the original BAM. On average, runtime is about 2â3Â min per SV per thread followed by several hours to integrate all mutations into the output BAM, for a deeply sequenced (e.g., 60Ã) genome. These are wallclock times, with the majority being spent in writing reads into the BAM file.</text></passage><passage><infon key="section_type">RESULTS</infon><infon key="type">title_2</infon><offset>10068</offset><text>Validation of simulated somatic SVs</text></passage><passage><infon key="section_type">RESULTS</infon><infon key="type">paragraph</infon><offset>10104</offset><text>To validate SVs simulated by BAMSurgeon, we performed a series of quality-control experiments analogous to those performed to validate simulated SNVs. Briefly, we used BAMSurgeon to generate synthetic tumor-normal pairs, with the same set of target mutations, that differ by the division of reads into tumor and normal sequence sets, aligner, or cell line. The target mutation set was designed to generate a synthetic tumor with a baseline level of complexity and thus did not include insertions. We ran four SV callers using default parameters on each pair: two widely used callers, CREST and Delly, and two callers developed over the course of the Challenge, Manta, and novoBreak. We did not optimize parameters for the callers since the goal of this validation was not to identify the best caller, but instead to verify that the caller ranking is maintained across analogous datasets.</text></passage><passage><infon key="file">Tab1.xml</infon><infon key="id">Tab1</infon><infon key="section_type">TABLE</infon><infon key="type">table_caption</infon><offset>10992</offset><text>Caller scoring schemes</text></passage><passage><infon key="file">Tab1.xml</infon><infon key="id">Tab1</infon><infon key="section_type">TABLE</infon><infon key="type">table</infon><infon key="xml">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
&lt;table frame=&quot;hsides&quot; rules=&quot;groups&quot;&gt;&lt;thead&gt;&lt;tr&gt;&lt;th&gt;Basis of comparison&lt;/th&gt;&lt;th&gt;Region overlap&lt;break/&gt;(AdditionalÂ fileÂ &lt;xref rid=&quot;MOESM1&quot; ref-type=&quot;media&quot;&gt;1&lt;/xref&gt;: Figure S2a)&lt;/th&gt;&lt;th&gt;Breakpoint closeness&lt;break/&gt;(AdditionalÂ fileÂ &lt;xref rid=&quot;MOESM1&quot; ref-type=&quot;media&quot;&gt;1&lt;/xref&gt;: Figure S2b)&lt;/th&gt;&lt;/tr&gt;&lt;/thead&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td&gt;Description&lt;/td&gt;&lt;td&gt;SVs match if there is sufficient overlap, determined with a Jaccard threshold parameter, between the genomic region associated with the called SV and that of the known SV&lt;/td&gt;&lt;td&gt;SVs match if the breakpoints of the called SV are sufficiently close to the those of the known SV, i.e. breakpoints are within &lt;italic&gt;f&lt;/italic&gt; bp of one another where &lt;italic&gt;f&lt;/italic&gt; is a flank parameter&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;Strengths&lt;/td&gt;&lt;td&gt;â Identifies genomic regions affected by the known SVs&lt;/td&gt;&lt;td&gt;â Suited to all types of SVs&lt;break/&gt;â Evaluates precision of breakpoint predictions, facilitating subsequent breakpoint validation&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;Weaknesses&lt;/td&gt;&lt;td&gt;â Some SVs are not accurately defined by genomic regions, e.g., an insertion may be characterized by a single breakpoint&lt;break/&gt;â Need criteria to define sufficient overlap&lt;/td&gt;&lt;td&gt;â Need criteria to define sufficient closeness&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;
</infon><offset>11015</offset><text>Basis of comparison	Region overlap(AdditionalÂ fileÂ 1: Figure S2a)	Breakpoint closeness(AdditionalÂ fileÂ 1: Figure S2b)	 	Description	SVs match if there is sufficient overlap, determined with a Jaccard threshold parameter, between the genomic region associated with the called SV and that of the known SV	SVs match if the breakpoints of the called SV are sufficiently close to the those of the known SV, i.e. breakpoints are within f bp of one another where f is a flank parameter	 	Strengths	â Identifies genomic regions affected by the known SVs	â Suited to all types of SVsâ Evaluates precision of breakpoint predictions, facilitating subsequent breakpoint validation	 	Weaknesses	â Some SVs are not accurately defined by genomic regions, e.g., an insertion may be characterized by a single breakpointâ Need criteria to define sufficient overlap	â Need criteria to define sufficient closeness	 	</text></passage><passage><infon key="section_type">RESULTS</infon><infon key="type">paragraph</infon><offset>11928</offset><text>The definition of a SV suggests different scoring schemes for measuring the performance of a caller. All SVs can be defined by at least one breakpoint; deletions, duplications, and inversions are SVs defined by a pair of breakpoints that in turn defines a genomic region. Thus, we compared called SVs to gold-standard SVs based on (i) region overlap or (ii) breakpoint closeness (TableÂ 1, AdditionalÂ fileÂ 1: Figure S2). The Challenge initially used a scoring scheme based on region overlap (at least one or more bases in common; AdditionalÂ fileÂ 1: Figure S2a). Here, we focus on the breakpoint closeness scheme since it is well suited for all types of SVs. A called SV that is sufficiently similar to a known SV based on such criteria was considered a true positive; otherwise, a false positive. We used such annotations to assess the performance of a caller in terms of precision (fraction of calls that are true), recall (fraction of known SVs called), and F-score (harmonic mean of precision and recall).</text></passage><passage><infon key="section_type">RESULTS</infon><infon key="type">paragraph</infon><offset>12941</offset><text>We performed several quality-control experiments. First, the caller ranking (by F-score) was independent of the random division of reads: Manta &gt; novoBreak &gt; CREST &gt; Delly (AdditionalÂ fileÂ 1: Figure S3a,b). Second, the same ranking was observed when alignments were generated either using the BWA or NovoAlign with and without INDEL realignment (i.e., local realignment to minimize mismatches across reads due to INDELs relative to the reference genome), indicating that the ranking was independent of the aligner used (Fig.Â 1b, AdditionalÂ fileÂ 1: Figure S3c). Lastly, when the genomic background was varied by using HCC1143 BL or HCC1954 BL sequence data, the caller ranking was largely independent of the cell line: Manta and novoBreak retained first and second place, respectively, while CREST and Delly swapped places, although their F-scores were very similar to each other when HCC1954 BL was used (Fig.Â 1c, AdditionalÂ fileÂ 1: Figure S3d). Overall, these results show that simulated SVs are robust to changes in the read division, aligner, and genomic background.</text></passage><passage><infon key="section_type">RESULTS</infon><infon key="type">title_2</infon><offset>14019</offset><text>Crowdsourced benchmarking of somatic SV calling</text></passage><passage><infon key="section_type">RESULTS</infon><infon key="type">paragraph</infon><offset>14067</offset><text>The SV component of the Challenge consisted of the same three synthetic tumor-normal datasets used in the SNV component. Briefly, the datasets were derived from existing cell line sequence data (thus minimizing data access restrictions) and in silico tumors 1â3 (IS1-IS3) were generated with increasing complexity (Fig.Â 1d). In terms of SVs, breakpoint locations were randomly selected and the tumors had increasing mutation rates (371 vs. 2886 somatic SVs in IS1 and IS3, respectively). Moreover, IS1 contained deletions, duplications, and inversions while IS2 and IS3 additionally contained insertions. Like the SNV component, the SV component of the Challenge was implemented using the Dialogue for Reverse Engineering Assessments and Methods (DREAM) framework. Briefly, information about the Challenge was shared on its website; participants registered online, downloaded a dataset, applied their SV calling pipelines to the dataset, and submitted the results in Variant Call Format (VCF) v4.1. IS1-IS3 were released sequentially; each dataset had its own competition phase; and participants could make multiple submissions for each dataset. Each tumor genome was divided into a training set and a testing set by holding out a portion of the genome. During the competition phase, leaderboards showed performance measures on the training set. After the competition closed, leaderboards also showed performance measures on the whole genome (training + testing sets).</text></passage><passage><infon key="file">Tab2.xml</infon><infon key="id">Tab2</infon><infon key="section_type">TABLE</infon><infon key="type">table_caption</infon><offset>15539</offset><text>Teams</text></passage><passage><infon key="file">Tab2.xml</infon><infon key="id">Tab2</infon><infon key="section_type">TABLE</infon><infon key="type">table</infon><infon key="xml">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
&lt;table frame=&quot;hsides&quot; rules=&quot;groups&quot;&gt;&lt;thead&gt;&lt;tr&gt;&lt;th&gt;Team ID&lt;/th&gt;&lt;th&gt;Method name&lt;/th&gt;&lt;th&gt;Institute&lt;/th&gt;&lt;/tr&gt;&lt;/thead&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td&gt;Standard&lt;/td&gt;&lt;td&gt;BreakDancer&lt;/td&gt;&lt;td&gt;Challenge Administrators&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;Team 1&lt;/td&gt;&lt;td&gt;Delly&lt;sup&gt;1&lt;/sup&gt;&lt;/td&gt;&lt;td&gt;European Molecular Biology Laboratory (EMBL)&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;Team 2&lt;/td&gt;&lt;td&gt;Manta&lt;/td&gt;&lt;td&gt;Illumina, Inc.&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;Team 3&lt;/td&gt;&lt;td&gt;Meerkat&lt;/td&gt;&lt;td&gt;Harvard Medical School&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;Team 4&lt;/td&gt;&lt;td&gt;novoBreak&lt;/td&gt;&lt;td&gt;MD Anderson Cancer Center&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;Team 5&lt;/td&gt;&lt;td&gt;deStruct&lt;sup&gt;2&lt;/sup&gt;&lt;/td&gt;&lt;td&gt;BC Cancer Agency Research Centre&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;Team 6&lt;/td&gt;&lt;td&gt;SWAN&lt;/td&gt;&lt;td&gt;Wharton School&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;Team 7&lt;/td&gt;&lt;td&gt;SmuFin&lt;/td&gt;&lt;td&gt;Barcelona Supercomputing Center&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;Team 8&lt;/td&gt;&lt;td&gt;not available&lt;/td&gt;&lt;td&gt;Peking University&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;Team 9&lt;/td&gt;&lt;td&gt;deStruct&lt;sup&gt;2&lt;/sup&gt;&lt;/td&gt;&lt;td&gt;Simon Fraser University&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;Team 10&lt;/td&gt;&lt;td&gt;GROM&lt;/td&gt;&lt;td&gt;Rutgers University&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;Team 11&lt;/td&gt;&lt;td&gt;Pindel&lt;/td&gt;&lt;td&gt;McDonnell Genome Institute&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;Team 12&lt;/td&gt;&lt;td&gt;PAVFinder&lt;/td&gt;&lt;td&gt;Canadaâs Michael Smith Genome Sciences Centre&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;Team 13&lt;/td&gt;&lt;td&gt;Delly&lt;sup&gt;1&lt;/sup&gt;&lt;/td&gt;&lt;td&gt;Georgetown University Medical Center,&lt;break/&gt;National Cancer Institute&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;Team 14&lt;/td&gt;&lt;td&gt;Subread&lt;/td&gt;&lt;td&gt;Walter and Eliza Hall Institute of Medical Research&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;Team 15&lt;/td&gt;&lt;td&gt;CX&lt;/td&gt;&lt;td&gt;Wharton School&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;
</infon><offset>15545</offset><text>Team ID	Method name	Institute	 	Standard	BreakDancer	Challenge Administrators	 	Team 1	Delly1	European Molecular Biology Laboratory (EMBL)	 	Team 2	Manta	Illumina, Inc.	 	Team 3	Meerkat	Harvard Medical School	 	Team 4	novoBreak	MD Anderson Cancer Center	 	Team 5	deStruct2	BC Cancer Agency Research Centre	 	Team 6	SWAN	Wharton School	 	Team 7	SmuFin	Barcelona Supercomputing Center	 	Team 8	not available	Peking University	 	Team 9	deStruct2	Simon Fraser University	 	Team 10	GROM	Rutgers University	 	Team 11	Pindel	McDonnell Genome Institute	 	Team 12	PAVFinder	Canadaâs Michael Smith Genome Sciences Centre	 	Team 13	Delly1	Georgetown University Medical Center,National Cancer Institute	 	Team 14	Subread	Walter and Eliza Hall Institute of Medical Research	 	Team 15	CX	Wharton School	 	</text></passage><passage><infon key="file">Tab2.xml</infon><infon key="id">Tab2</infon><infon key="section_type">TABLE</infon><infon key="type">table_foot</infon><offset>16339</offset><text>Teams that made submissions for IS1, IS2, and/or IS3, the names of the SV detection methods they used, and the institutes to which they belong</text></passage><passage><infon key="file">Tab2.xml</infon><infon key="id">Tab2</infon><infon key="section_type">TABLE</infon><infon key="type">table_foot</infon><offset>16482</offset><text>1Delly was developed by Team 1 and also used by Team 13</text></passage><passage><infon key="file">Tab2.xml</infon><infon key="id">Tab2</infon><infon key="section_type">TABLE</infon><infon key="type">table_foot</infon><offset>16538</offset><text>2deStruct was developed by Team 9 and also used by Team 5</text></passage><passage><infon key="file">13059_2018_1539_Fig2_HTML.jpg</infon><infon key="id">Fig2</infon><infon key="section_type">FIG</infon><infon key="type">fig_caption</infon><offset>16596</offset><text>Overview of the SV Calling Challenge submissions. a Precision-recall plot of IS1 submissions. Each point represents a submission, each color represents a team and the best submission from each team (top F-score) is circled. The âStandardâ point corresponds to the reference point submission provided by Challenge organizers. b The F-scores of submissions on the training and testing sets are highly correlated for IS1 (Spearmanâs Ïâ=â0.98), falling near the plotted yâ=âx line</text></passage><passage><infon key="section_type">RESULTS</infon><infon key="type">paragraph</infon><offset>17088</offset><text>The Challenge administration team prepopulated the leaderboards with two submissions, and the community provided 204 submissions from 15 teams (TableÂ 2, AdditionalÂ fileÂ 2). A list of all submissions, and descriptions of pipelines used to generate them, can be found in AdditionalÂ filesÂ 3 and 4, respectively. The submissions were surprisingly discordant in format. For example, between 5.5% and 11% of all submissions specified SV types that are not in the VCF controlled vocabulary for types (AdditionalÂ fileÂ 5). For this reason and the ambiguity of specifying SV types (i.e., the same SV can be specified with a specific type, or by specifying the breakpoints and break-end adjacencies), type specifications were ignored when scoring submissions. Team ranking varied with the stringency of the scoring (AdditionalÂ fileÂ 1: Figure S2d-i). For simplicity, we focused on scoring with fâ=â100Â bp due to the balance between the median and variance of the resulting F-scores (AdditionalÂ fileÂ 1: Figure S4). While the top-performing teams achieved near maximal precision on the simplest tumor, IS1, their recall remained less than 0.9 (Fig.Â 2a) and decreased further on the other tumors (AdditionalÂ fileÂ 1: Figure S5a,b). On all three tumors, F-scores on the training and testing sets were highly correlated [Spearmanâs rank correlation coefficient (Ï) â¥â0.98; Fig.Â 2b, AdditionalÂ fileÂ 1: Figure S5c,d]. However, the slightly elevated F-scores in the training sets observed for IS1 and IS2 may reflect minor overfitting; overfitting occurs when a statistical model is tuned to the training set, limiting generalizability. Notably, the total number of somatic SV mutations in IS3 is &gt;â4Ã that for IS1 and IS2 (Fig.Â 1d). Conversely, the percentage of mutations used for training is greater for IS1 (93%) and IS2 (92%) vs. IS3 (89%). Sampling from the IS3 mutations, we simulated training and testing sets of different sizes and computed the differences between the F-scores on the training sets and the F-scores on the testing sets. We found that that the differences tend to be greater when the percentage of mutations used for training is greater (AdditionalÂ fileÂ 1: Figure S5e). This suggests that the F-score differences observed for IS1 and IS2 are at least in part an artifact of training set size.</text></passage><passage><infon key="section_type">RESULTS</infon><infon key="type">title_2</infon><offset>19420</offset><text>Pipeline optimization</text></passage><passage><infon key="file">13059_2018_1539_Fig3_HTML.jpg</infon><infon key="id">Fig3</infon><infon key="section_type">FIG</infon><infon key="type">fig_caption</infon><offset>19442</offset><text>Performance optimization by parameterization and ensembles. a Recall, precision, and F-score of all IS1 submissions plotted by team, then submission order. Teams were ranked by the F-score of their best submission, color coding (top bar) as in Fig.Â 2. The âStandardââ lines correspond to the reference point submission provided by Challenge organizers. b For each tumor, the improvement in F-score from the initial (ânaiveâ) to the best (âoptimizedâ) submissions of each team. Darker shades of blue indicate greater improvement. c For each tumor, team rankings based on their naive or optimized submissions. Larger dot sizes indicate better ranks by F-score. b, c An âXâ indicates that the team did not make a submission for the specific tumor (or changed team name). d Recall, precision, and F-score of ensembles versus individual submissions for IS1. At the kth rank, the triangles indicate performance of the ensemble of the top k submissions, and the circles indicate performance of the kth ranked submission. The ensemble analysis focused on the best submission from each team</text></passage><passage><infon key="section_type">RESULTS</infon><infon key="type">paragraph</infon><offset>20543</offset><text>The within-team variability in F-scores accounts for 21â43% of the total per-tumor variance in F-scores. The large variability in submissions by certain teams highlights the impact of tuning parameters during the Challenge (Fig.Â 3a, AdditionalÂ fileÂ 1: Figure S6a,b). In comparing the initial (ânaiveâ) and best (âoptimizedâ) submissions of each team, for each tumor, the maximum F-score improvement was 0.75 (from 0.12 to 0.87 by Team 5 for IS1), and the median improvements were 0.20, 0.01, and 0.07 for IS1, IS2, and IS3, respectively (Fig.Â 3b). At least 33% of teams improved their F-score by at least 0.05, and at least 25% of teams improved it by more than 0.20, depending on the tumor. Despite these improvements by parameterization, team rankings were only moderately changed: if a teamâs naive submission ranked in the top three, their optimized submission remained in the top three 66% of the time (Fig.Â 3c).</text></passage><passage><infon key="section_type">RESULTS</infon><infon key="type">paragraph</infon><offset>21478</offset><text>Given the crowdsourced nature of the Challenge, we explored âwisdom of the crowdsâ as an approach to optimize performance. Specifically, we aggregated SV calls into an ensemble by first identifying sufficiently similar calls in the majority of the top k submissions. Pairwise distances between calls from different submissions were computed (i.e., a breakpoint-length distance that incorporates distances between breakpoints and differences in SV length, AdditionalÂ fileÂ 1: Figure S2c), and those calls with distances less than a selected threshold (equal to f, for consistency) were considered to represent an equivalent called SV event. The chromosome together with the median start and end positions of a set of similar calls would then define a single ensemble SV prediction. We considered two variations of this approach: (i) a baseline approach with ensembles of the best submission from each team and (ii) a conservative approach with ensembles of all submissions (where the top k may include multiple submissions from the same team) and more stringent aggregation of called SVs (see the âMethodsâ section). The baseline ensembles were found to have F-scores comparable to that of the best submission (e.g., for IS1, the best ensemble and submission have F-scores of 0.92 and 0.91, respectively; Fig.Â 3d, AdditionalÂ fileÂ 1: Figure S7b). However, the ensembles had lower F-scores than the best submission for IS2 (AdditionalÂ fileÂ 1: Figure S7a). When kâ&gt;â15, we found that the conservative ensemble F-scores drop further below that of the best submission (AdditionalÂ fileÂ 1: Figure S7c-e; e.g., for IS1, the best ensemble with kâ&gt;â15 and the best submission have F-scores of 0.83 and 0.91, respectively); these ensembles incorporate submissions from the top three teams, at least. In contrast, the precision of all ensembles (range 0.993â1.00) was similar or slightly improved compared to that of the best submission. Thus, any changes in the ensemble F-scores were mostly influenced by the changes in recall as k varied.</text></passage><passage><infon key="section_type">RESULTS</infon><infon key="type">title_2</infon><offset>23533</offset><text>Error characteristics</text></passage><passage><infon key="section_type">RESULTS</infon><infon key="type">paragraph</infon><offset>23555</offset><text>We next exploited the large number of independent analyses to identify characteristics associated with false negatives (FNs) and false positives (FPs). For example, error profiles differed significantly between subclonal populations in IS3, with greater FN rates for mutations present at lower VAFs (AdditionalÂ fileÂ 1: Figure S8; one-sided Wilcoxon signed rank Pâ=Â 0.02 for VAFâ=â0.2 vs. 0.33, Pâ=Â 0.04 for VAFâ=â0.33 vs. 0.5, nâ=â7). We also selected the best submission from each team (by F-score) and focused on 14 variables associated with breakpoint positions, representing factors like coverage and mapping quality (AdditionalÂ fileÂ 6). Several of these variables were associated with false-positive rates; in particular, tumor coverage (Râ&gt;â0.24), bridging reads count (the number of reads that bridge a putative breakpoint, Râ&gt;â0.21), and mapping quality (Râ&lt;âââ0.29) have stronger associations with FPs for both IS2 and IS3, compared to other variables (AdditionalÂ fileÂ 1: Figure S9a, S10-S25). By contrast, few were associated directly with false-negative rates (0ââ¤â|R|Â â¤â0.15; AdditionalÂ fileÂ 1: Figure S9b, S10-S25).</text></passage><passage><infon key="file">13059_2018_1539_Fig4_HTML.jpg</infon><infon key="id">Fig4</infon><infon key="section_type">FIG</infon><infon key="type">fig_caption</infon><offset>24737</offset><text>Characteristics of prediction errors. Random forests assess the importance of 16 sequence-based variables for each callerâs FN (a, c, e, g, i) and FP (b, d, f, h, j) breakpoints. Each panel shows variable importance on the left, where each row represents the best performing set of predictions by the given team/caller (on the given in silico tumor), and each column represents the indicated variable. Dot size reflects variable importance, i.e., the mean change in accuracy caused by removing the variable from the model (generated to predict erroneous breakpoints). Color reflects the directional effect of each variable (red and blue for greater and lower variable values, respectively, associated with erroneous breakpoints; black for categorical variables or insignificant directional associations, two-sided Mann-Whitney Pâ&gt;â0.01). Background shading indicates the accuracy of the model (see the color bar). Variable importance for FN and FP breakpoints in each of the three tumors is shown for the following SV callers: CREST (a, b), Delly (c, d), and Manta (e, f). Manta only called two FPs in IS1; thus, variable importance for FP breakpoints could not be computed (indicated by Xs in the plot). Variable importance for FN and FP breakpoints in IS2 (g, h) and IS3 (i, j) is shown for each team. In the right plot (gâj), the first four columns indicate usage of the indicated algorithmic approaches by each team, and the last column indicates the aligner used. Gray indicates that algorithmic approaches and aligner are unknown for the given team. Abbreviations: Algm, algorithm; SNP, single-nucleotide polymorphism; INDEL, short insertion or deletion</text></passage><passage><infon key="section_type">RESULTS</infon><infon key="type">paragraph</infon><offset>26405</offset><text>To evaluate whether these variables, and additional categorical variables, contribute simultaneously to somatic SV prediction error, we generated two random forests (non-parametric learning models that can trivially merge multiple data types) for each team to assess variable importance for FN and FP breakpoints separately. FN breakpoints are associated with variables such as high bridging reads count and strand bias (Fig.Â 4a, c, e, g, i; AdditionalÂ fileÂ 1: Figure S26a). FP breakpoints are generally associated with variables such as low mapping quality (Fig.Â 4b, d, f, h, j; AdditionalÂ fileÂ 1: Figure S26b).</text></passage><passage><infon key="section_type">RESULTS</infon><infon key="type">paragraph</infon><offset>27024</offset><text>By executing specific SV callers, CREST (Fig.Â 4a, b), Delly (Fig.Â 4c, d), and Manta (Fig.Â 4e, f), with the same parameters on all three tumors, we identified tumor-specific error profiles. For example, the distance to the nearest germline INDEL tends to have stronger associations with errors in IS2 and IS3 compared to IS1 (Fig.Â 4aâe). Team-specific error profiles are more apparent with the FP breakpoint analysis. For example, Teams 8 and 10 have distinct FP profiles for the same tumor, IS2 (Fig.Â 4h); FPs by Teams 8 and 10 are negatively and positively associated with tumor coverage, respectively. Algorithmic approaches to SV calling from sequencing data include (i) read depth analysis, (ii) paired-end mapping, (iii) split read alignment, and (iv) de novo assembly. Some teams submitted sufficient algorithm details to determine the general approaches used, as well as the choice of aligner (Fig.Â 4gâj). Based on the available annotations, teams using the same aligner do not have error profiles that tightly cluster for all three tumors, suggesting that the aligner is not as strong a driver of those profiles, compared to the caller algorithm.</text></passage><passage><infon key="section_type">DISCUSS</infon><infon key="type">title_1</infon><offset>28189</offset><text>Discussion</text></passage><passage><infon key="section_type">DISCUSS</infon><infon key="type">paragraph</infon><offset>28200</offset><text>Crowdsourced benchmarking challenges are ideal for questions where significant diversity in algorithmic approaches exists, particularly where individual methods are highly parameterized or computationally intensive. The detection of variants from high-throughput sequencing data fits these criteria well: dozens of algorithms are in common use, many with complicated sets of parameters to tune and most requiring tens to hundreds of CPU hours to execute. We have quantified the critical importance of parameterization: it accounts for 21â43% of the variability in performance across the 204 submissions evaluated. This is comparable to the 26% of variability observed in somatic SNV detection benchmarking and highlights the need for algorithm developers to continue to optimize parameters, provide guidance for their tuning, and work toward automating their selection to make their software easier to use.</text></passage><passage><infon key="section_type">DISCUSS</infon><infon key="type">paragraph</infon><offset>29109</offset><text>Scoring SV detection is complicated by the diversity of SVs. While some SV types may be well-characterized by overlap-based scoring methods, others benefit more from breakpoint-based scoring, and the choice of scoring metric and stringency parameters must be tuned to specific biological questions of interest. For example, breakpoint identification is critical when considering translocationsâespecially those generating candidate fusion proteinsâwhile overlap of the called and known regions is much more important for copy-number analyses. Moreover, it may be useful to adapt scoring (e.g., by using a range of stringency parameter values) to identify SVs in certain contexts (e.g., with breakpoints in repetitive regions) that are still detectable by given tools, but with less precision. Taken together, SV diversity is an important consideration for the development of standards for scoring SV detection.</text></passage><passage><infon key="section_type">DISCUSS</infon><infon key="type">paragraph</infon><offset>30024</offset><text>The âwisdom of the crowdsâ is the idea that an ensemble of multiple algorithms can significantly outperform any individual method. Several crowdsourced benchmarking competitions from diverse fields have shown great success in combining submissions from contestants to achieve a high-performing meta-predictor including challenges for somatic SNV detection, gene regulatory network inference, and mRNA-based prognostic signatures for breast cancer. By contrast, in somatic SV detection, we do not have clear evidence that an ensemble improves on the best individual method consistently across different tumors. Specifically, the majority vote approach works very well for somatic SNV detection, yet it appears to fail for somatic SV detection. This may reflect the large diversity in the biases of each individual algorithm (Fig.Â 4). Rather than focus on commonalities through a majority vote, it may be more beneficial to leverage the strengths of individual algorithms. This might be achieved by using machine learning to optimize the weighting of the algorithms for specific input patterns. For example, an aggregating classifier could learn, if there is a sizable difference in coverage in the tumor versus normal samples near given candidate breakpoints, the calling algorithms that use read depth analysis should have more weight. The overall approach could involve the following general steps: (1) apply all algorithms of interest to a given tumor-normal dataset and take the union of all resulting call sets to define a list of candidate SVs; then for each candidate, (2) compute sequence features (e.g., coverage) around the candidate breakpoints, and (3) provide computed features and confidence scores from individual algorithms as input to an aggregating classifier that will indicate whether or not the candidate is likely to be a true SV. In fact, a similar approach is behind the SMC-DNA Meta-pipeline Challenge for benchmarking pipelines that aggregate calls from different SNV detection algorithms. In practice, analogous efforts for SV detection would require additional considerations such as the identification of (i) an optimal method for merging similar yet different calls (due to imprecise breakpoint calling) when compiling the list of candidate SVs, (ii) the most informative sequence features for guiding the relative weighting of individual algorithms (e.g., variables in Fig.Â 4), and (iii) an optimal scoring method (as mentioned above). Thus, there is a need for continued development of new, more complex ways to integrate multiple somatic SV detection methods.</text></passage><passage><infon key="section_type">DISCUSS</infon><infon key="type">paragraph</infon><offset>32622</offset><text>Given the paucity of gold-standard benchmarking data for somatic SVs, the creation of the simulated datasets and the associated leaderboards constitutes a major contribution of this Challenge. Ideally, a simulated dataset depicts realistic mutations through realistic sequence reads. The synthetic tumors generated for the Challenge only represent straightforward SV types (duplication, deletion, insertion, inversion) and cover relatively small regions. Subsequent enhancements to BAMSurgeon have added support for additional SV types including translocations and complex SV combinations, enabling simulations to more completely capture the complexity of tumor genomes and, by extension, challenge SV callers in different ways. For each SV, simulated reads are generated (via wgsim) from a re-arranged contig, where the original contig is constructed from real reads. Despite the basis on real reads, the simulated reads do not necessarily reflect the non-uniform coverage that may arise during preparation of real samples, for example. There are other read simulators that learn biased-coverage trends from real data and use them to generate reads (e.g.,) that could be used by BAMSurgeon; however, it is an on-going challenge to simulate biases of real sequencing data as sample preparation methods and sequencing technologies vary and/or advance. In fact, one could sequence the same ânormalâ sample twice to capture inter-sample variability, with one replicate converted into a synthetic tumor sample using BAMSurgeon. Nevertheless, there are distinct advantages to benchmarking on simulated datasets. It is dramatically easier to simulate large numbers of tumors, or to create tumors with highly divergent mutational properties, leading to well-supported estimates of per-tumor caller accuracy. This enables our strategy of generating synthetic tumors of increasing complexity (e.g., with other SV types and/or haplotype structure by using phased sequence data) whereby the impact of the complexity introduced at each step can be assessed. With the three synthetic tumors described here, we observed that caller ranking varied across tumors and we expect it to vary with a broad range of tumor characteristics including coverage, normal contamination, complexity of the SVs, the number of mutations adjacent to breakpoints, and others, as they each present different challenges. It is possible to identify strengths and weaknesses of an individual caller by comparing its tumor-specific error profiles. Moreover, synthetic tumors can be designed to test the limits of callers. These advantages highlight the usefulness of synthetic datasets for benchmarking callers, and until synthetic datasets are completely realistic, they will serve as important complements to real datasets.</text></passage><passage><infon key="section_type">DISCUSS</infon><infon key="type">paragraph</infon><offset>35413</offset><text>While 15 teams participated in the actual competitive phase of the Challenge, 8 teams have exploited the IS1-3 benchmarking resources since the competition, making 73 submissions to benchmark their methods for pipeline evaluation and development. Evaluations based on the first synthetic tumors, the simplest by design, provide lower bounds on the error rates. As subsequent updates to BAMSurgeon enable the generation of more complex and realistic tumors, the corresponding error rates using these simulations will approach their upper bounds. We hope that journals and developers will begin to plan for benchmarking on these standard datasets, including simulated ones, as a standard part of manuscripts reporting new somatic SV detection algorithms.</text></passage><passage><infon key="section_type">CONCL</infon><infon key="type">title_1</infon><offset>36166</offset><text>Conclusions</text></passage><passage><infon key="section_type">CONCL</infon><infon key="type">paragraph</infon><offset>36178</offset><text>Analysis of the error profiles of the Challenge submissions showed that somatic SV calling is a distinctly harder problem than somatic SNV calling even given a relatively simple set of SVs, with individual pipelines having complex and unique error profiles. Parameterization was a critical factor in determining the performance of teams. Finally, we demonstrate that, unlike almost every past DREAM Challenge, somatic SV prediction does not benefit from the âwisdom of the crowdsââsimple voting of multiple prediction pipelines does not yield improved predictions in this instance. The synthetic tumors and somatic SV detection leaderboards remain available as a community benchmarking resource.</text></passage><passage><infon key="section_type">METHODS</infon><infon key="type">title_1</infon><offset>36880</offset><text>Methods</text></passage><passage><infon key="section_type">METHODS</infon><infon key="type">title_2</infon><offset>36888</offset><text>Simulation of SVs by BAMSurgeon</text></passage><passage><infon key="section_type">METHODS</infon><infon key="type">paragraph</infon><offset>36920</offset><text>SV support in BAMSurgeon has evolved throughout the Challenge, largely as a result of constructive feedback from participants. Our descriptions of BAMSurgeonâs method for simulating SVs are current as of commit (i.e., version) b851573474 of the code available at.</text></passage><passage><infon key="section_type">METHODS</infon><infon key="type">paragraph</infon><offset>37186</offset><text>As input, BAMSurgeon (addsv.py) requires an indexed reference genome, a pre-existing BAM file (AdditionalÂ fileÂ 1: Figure S1a), and a list of intervals (AdditionalÂ fileÂ 1: Figure S1b) along with the SV type and parameters (see manual). The intervals should be wide enough that local sequence assembly is successful in generating a contig that spans at least two times the expected library size in the input BAM file. Intervals for which a sufficiently long contig cannot be generated are rejected, where the exact definition of âsufficiently longâ is an optional parameter. Note that it may be less likely to obtain long contigs from genomic regions that are more difficult to sequence and, by extension, less likely to simulate SVs in such regions. Intervals which contain too many discordant read pairs (again, potentially indicating regions that are difficult to sequence) are also rejected, subject to a parameter. Following local assembly, the contig is re-arranged: the specific rearrangements for each supported SV type are illustrated in Fig.Â 1a (step iii) and AdditionalÂ fileÂ 1: Figure S1c,e,g. The assembled contig is then re-aligned to the target interval in the reference genome (exonerate --bestn 1 -m ungapped) and is trimmed based on the start and end coordinates of this alignment. Read pairs corresponding to trimmed contig sequence are removed from further consideration.</text></passage><passage><infon key="section_type">METHODS</infon><infon key="type">paragraph</infon><offset>38586</offset><text>Read coverage is generated over the rearranged contig using a read simulator (wgsim -e 0 -R 0 -r 0), to achieve the same average depth as the input BAM file, which has the effect of creating split reads relative to the reference genome supporting SV detection. For a deletion, the number of reads required to achieve, for example, 30Ã coverage is fewer than the number of reads required to reach 30Ã coverage prior to the deletion, so reads must be removed from the original BAM (Fig.Â 1a, step iv). Inversely, for duplications and insertions, additional reads need to be added to the original BAM (AdditionalÂ fileÂ 1: Figure S1d,h). Inversions generally do not affect coverage (AdditionalÂ fileÂ 1: Figure S1f). To ensure any reads removed actually correspond to the deleted region of the contig, the locations of reads in the assembled contig are tracked. The number of reads to be replaced, added, or deleted is scaled with the desired allele fraction. Finally, any read pairs in the original BAM corresponding to reads altered in the simulated SV are replaced, any read pairs marked for deletion are removed from the original BAM, and any additional read pairs generated are added. It is recommended that the resulting altered BAM be post-processed (with postprocess.py) to ensure compliance with the SAM format specification (see manual).</text></passage><passage><infon key="section_type">METHODS</infon><infon key="type">title_2</infon><offset>39933</offset><text>Synthetic tumor generation</text></passage><passage><infon key="section_type">METHODS</infon><infon key="type">paragraph</infon><offset>39960</offset><text>Synthetic tumors were prepared by partitioning high-coverage BAMs from ânormalâ cell lines into two groups of reads, picking read pairs at random as described previously. Alternatively, one could sequence the same ânormalâ sample twice to capture inter-sample variability, with one replicate converted into a synthetic tumor sample using BAMSurgeon. For the three in silico challenges, non-overlapping regions were selected at random for SV addition, resulting in 371 variants added for IS1, 655 for IS2, and 2886 for IS3 (Fig.Â 1d). Variant input files are available in AdditionalÂ fileÂ 7. SVs were added using addsv.py with assembly GRCh37/hg19 as the reference genome and default parameters except where noted. For IS3, to simulate subclones, a file specifying CNV fractions over SV regions was input via option -c to specify the variant allele frequency (VAF) of the spiked-in variants at either 0.5, 0.33, or 0.2 (AdditionalÂ fileÂ 7). The output BAMs were post-processed to account for any inconsistencies introduced due to remapping and merging of reads supporting SVs using the script postprocess.py included with BAMSurgeon. The BAMs were further adjusted with RealignerTargetCreator and IndelRealigner from the Genome Analysis Toolkit (v.2.4.9). All tumor-normal pairs generated via BAMSurgeon are verified for adherence to the SAM/BAM format specification using the ValidateSamFile tool included in the Picard tool set. Truth VCF files, i.e., files specifying simulated mutations, for SVs were generated using the script etc/makevcf_sv.py and merged with truth files for SNP and INDEL locations, where applicable. SAMtools was used throughout to split, merge, sort, and index BAMs, and also index FASTA files. Details on the specific BAMSurgeon commits used for generating each tumor, as well as other tumor details, are given at.</text></passage><passage><infon key="section_type">METHODS</infon><infon key="type">title_2</infon><offset>41811</offset><text>Validation of BAMSurgeon</text></passage><passage><infon key="section_type">METHODS</infon><infon key="type">paragraph</infon><offset>41836</offset><text>To validate BAMSurgeonâs ability to simulate somatic SVs, we compared the output of four algorithmsâtwo widely used SV callers, CREST and Delly, and two callers developed over the course of the Challenge, Manta, and novoBreak âon the IS1 tumor-normal dataset, and analogous datasets generated with the same spike-in set of mutations, but with an alternate aligner (NovoAlign v.3.00.05), cell line (HCC1954 BL), or read division. We did not optimize parameters for the callers since the goal of this validation was not to identify the best caller, but instead to verify that the caller ranking is maintained across analogous datasets.</text></passage><passage><infon key="section_type">METHODS</infon><infon key="type">paragraph</infon><offset>42476</offset><text>Each tumor-normal pair was processed by CREST (v1.0) to extract soft clipping positions for each chromosome separately, using default parameters. This data was then used by CREST to call somatic SVs using the default protocol, and we converted the output into VCF v4.1 format. Somatic SVs were called from each tumor-normal pair using Delly (v0.5.5) with default parameters. Calling was performed on each chromosome separately for all supported SV types except for translocations, and we converted the translocation output into VCFv4.1 format. Calls with MAPQ &lt;â20, PE &lt;â5, or labeled as âLowQualâ or âIMPRECISEâ were filtered out. Somatic SVs were called from each tumor-normal pair using Manta (v0.26.3) with the following parameters: -m local -j 4 -g 10. Lastly, somatic SVs were called from each dataset using novoBreak (v1.04) with a modification to ensure that sequence windows around breakpoints never go beyond the start of the chromosome. All sets of SV calls were scored with fâ=â100Â bp and jâ&gt;â0, callers were ranked based on F-score for each tumor-normal pair, and rankings were compared across pairs (Fig.Â 1b, c and AdditionalÂ fileÂ 1: Figure S3).</text></passage><passage><infon key="section_type">METHODS</infon><infon key="type">title_2</infon><offset>43660</offset><text>Preprocessing VCF files</text></passage><passage><infon key="section_type">METHODS</infon><infon key="type">paragraph</infon><offset>43684</offset><text>Add row entries to ensure that each MATEID specification has a corresponding pair of entries, where only a single entry is provided</text></passage><passage><infon key="section_type">METHODS</infon><infon key="type">paragraph</infon><offset>43816</offset><text>Re-assign IDs and MATEIDs to ensure unambiguous references to entries</text></passage><passage><infon key="section_type">METHODS</infon><infon key="type">paragraph</infon><offset>43886</offset><text>Where possible, replace SVTYPE = BND entries with entries specifying SVTYPE = {CNV, DEL, DUP, INS, INV} in accordance with REF, ALT, and EVENT values</text></passage><passage><infon key="section_type">METHODS</infon><infon key="type">paragraph</infon><offset>44036</offset><text>We preprocess VCF files to parse out the SV-relevant details (e.g., the END coordinate in the INFO value or from the length of the REF sequence; if the END coordinate cannot be determined from those values, it is set to the POS coordinate), remove SVs that did not pass filters (as indicated by the FILTER values), and ensure consistent formatting between files. To ensure consistent formatting in accordance with the VCFv4.1 specification, we:</text></passage><passage><infon key="section_type">METHODS</infon><infon key="type">paragraph</infon><offset>44481</offset><text>Testing set SVs are indicated in the truth VCF file with the addition of masked genomic regions specified with CHROM, POS, and END values indicating the chromosome, start and end coordinates, and SVTYPE = MSK. Specifically, a SV where â¥â50% of the corresponding region overlaps a masked region is allocated to the testing set; otherwise, it is in the training set.</text></passage><passage><infon key="section_type">METHODS</infon><infon key="type">title_2</infon><offset>44850</offset><text>Structural variant scoring</text></passage><passage><infon key="section_type">METHODS</infon><infon key="type">paragraph</infon><offset>44877</offset><text>Region overlap: The Jaccard coefficient (j) is computed from the lengths (in bp) of intersection and union regions (AdditionalÂ fileÂ 1: Figure S2a).</text></passage><passage><infon key="section_type">METHODS</infon><infon key="type">paragraph</infon><offset>45027</offset><text>Breakpoint closeness: The distance (Î, in bp) between called and known breakpoints is computed (AdditionalÂ fileÂ 1: Figure S2b). If Îââ¤âf (where f is a flank threshold parameter), a relative closeness is computed, cââ=â1ââÂ Î/f. The overall closeness (c) is defined as the geometric mean of the câ values for the start and end breakpoints. If only one of the start and end breakpoints has Îââ¤âf, the called and known SVs are annotated as partially matching.</text></passage><passage><infon key="section_type">METHODS</infon><infon key="type">paragraph</infon><offset>45514</offset><text>Our scoring approaches evaluate the accuracy of a set of called SVs and require input VCF files specifying: (i) called SVs and (ii) true/known SVs. Generally, a called SV that is sufficiently similar to a known SV based on specific criteria (TableÂ 1) is considered a true positive (TP); otherwise, a false positive (FP). Also, a known SV that is sufficiently similar to a called SV is considered a TP; otherwise, a false negative (FN). Our scoring supports two ways of quantifying similarity:</text></passage><passage><infon key="section_type">METHODS</infon><infon key="type">paragraph</infon><offset>46008</offset><text>Unless otherwise specified, we scored with fâ=â100Â bp. If there is an ambiguous matching of called SVs to known SVs by sufficient similarity, the similarity values (j/c) are used to identify an optimal one-to-one matching. First, we restrict the matching to the best match(es) for each called and known SV. If a SV has multiple best matches by similarity, we attempt to break the tie by favoring SVs with the same SVTYPE and/or test/training set membership. If the best matching is still ambiguous, we then use corresponding similarity values together with the Hungarian algorithm to obtain a one-to-one matching (with the clue v0.3-48 R package). Finally, SVs are annotated based on this matching. SVs that have sufficient similarity but are not in the final matching are annotated as partially matching. Mated breakpoints are initially annotated separately. If one is annotated as partially matching or as a TP, and the other is a FP, the FP annotation is replaced by a partial match annotation. Subsequently, each set of mated breakpoints is treated as a single SV.</text></passage><passage><infon key="section_type">METHODS</infon><infon key="type">paragraph</infon><offset>47082</offset><text>These annotations are used to assess the performance of a SV caller in terms of precisionâ=ânTP/(nTPâ+ânFP), recallâ=ânTP/(nTPâ+ânFN) and F-score (specifically, F1-score)â=â2âÃâprecisionâÃârecall/(precisionâ+ârecall), where nTP, nFP, and nFN represent the numbers of TPs, FPs, and FNs, respectively. Partial matches are not counted in these computations. Unless otherwise specified, the precision, recall, and F-score values presented here were computed on the testing and training sets combined. The best submission of a given team is defined as the teamâs submission with the greatest F-score computed against all known SVs.</text></passage><passage><infon key="section_type">METHODS</infon><infon key="type">title_2</infon><offset>47745</offset><text>Execution of challenge-based benchmarking</text></passage><passage><infon key="section_type">METHODS</infon><infon key="type">paragraph</infon><offset>47787</offset><text>The SV component of the Challenge was executed concurrently with the SNV component, and the procedure has been described previously. It was implemented using the Dialogue for Reverse Engineering Assessments and Methods (DREAM) framework. Briefly, information about the Challenge was shared on its website; participants registered online, downloaded a dataset, applied their SV calling pipelines to the dataset, and submitted the results in VCFv4.1 format. IS1âIS3 were released sequentially, each dataset had its own competition phase, and participants could make multiple submissions for each dataset. Each tumor genome was divided into a training set and a testing set. During the competition phase, leaderboards showed performance measures on the training set. After the competition closed, leaderboards also showed performance measures on the whole genome (training + testing sets), thus benchmarking the SV calling pipelines. The SV leaderboards for IS1 and IS2 were pre-populated with results from BreakDancer (v1.1.2_2013_03_08) run with default parameters; a reference point submission labeled as âStandardâ in figures and tables. Due to our exploration of multiple SV scoring methods in this manuscript, the leaderboard results are not completely consistent with the results presented here, but all raw and leaderboard data are available.</text></passage><passage><infon key="section_type">METHODS</infon><infon key="type">title_2</infon><offset>49141</offset><text>Overfitting artifact analysis</text></passage><passage><infon key="section_type">METHODS</infon><infon key="type">paragraph</infon><offset>49171</offset><text>Due to the order of magnitude greater number of SVs spiked into IS3, we simulated training and testing sets of different sizes by sampling from the IS3 training set. Specifically, we assessed mutation totals of 100 to 1000 (by increments of 100), and training sets that were 80â95% (by increments of 1%) of the total, by sampling each {mutation-total, training-set%} combination 100 times. For each sample, we computed FtrainâââFtest for each IS3 submission where Ftrain and Ftest are F-scores computed on the simulated training and testing sets, respectively. We then computed the median difference across samples to obtain a summary value for each submission, and finally show the median across submissions in AdditionalÂ fileÂ 1: Figure S5e. (FtrainâââFtest)â&gt;â0 suggests overfitting but such values are an artifact of testing set size since no fitting/training was done in this analysis.</text></passage><passage><infon key="section_type">METHODS</infon><infon key="type">title_2</infon><offset>50081</offset><text>Team variation</text></passage><passage><infon key="section_type">METHODS</infon><infon key="type">paragraph</infon><offset>50096</offset><text>For each tumor-normal pair, we computed the percentage of variation in F-score, across all submissions, that is accounted for by within-team variation. Specifically, we computed the within-team sum of squares as a percentage of the total sum of squares.</text></passage><passage><infon key="section_type">METHODS</infon><infon key="type">title_2</infon><offset>50350</offset><text>Definition of ensembles</text></passage><passage><infon key="section_type">METHODS</infon><infon key="type">paragraph</infon><offset>50374</offset><text>BND filter: Calls defined with SVTYPEâ=âBND were excluded for simplicity.</text></passage><passage><infon key="section_type">METHODS</infon><infon key="type">paragraph</infon><offset>50452</offset><text>Compute call distances: Pairwise distances (d, in bp) between remaining predictions were computed (i.e., a breakpoint-length distance that incorporates distances between breakpoints and differences in predicted SV length, AdditionalÂ fileÂ 1: Figure S2c). Distances were only computed between predictions from different submissions.</text></passage><passage><infon key="section_type">METHODS</infon><infon key="type">paragraph</infon><offset>50785</offset><text>Baseline: We defined a graph such that vertices represented calls and edges connected sufficiently similar calls. We identified the connected components to define the sets of similar calls. Sets with median intra-set distances &gt; f were refined. Specifically, the call with the greatest median distance to the other set members was iteratively removed until the median intra-set distance dropped below f, or the set became empty.</text></passage><passage><infon key="section_type">METHODS</infon><infon key="type">paragraph</infon><offset>51214</offset><text>Conservative: We used the added constraint that called SVs overlap by â¥â1Â bp to be treated as sufficiently similar. Sets of similar calls were constructed by iterating over the sufficient similarity pairs from least to most distant. If a pair did not contain a call in an existing call set, the pair was used to define a new call set. Otherwise, one call was already in a set, and the other was a candidate for addition to the same set via guilt-by-association. If the candidate came from a submission that was not already covered by the set and its median distance to the existing set members â¤ f, it was added to the set. Any unprocessed pairs within or between the prediction sets at that stage were excluded from consideration.</text></passage><passage><infon key="section_type">METHODS</infon><infon key="type">paragraph</infon><offset>51953</offset><text>Generate sets of similar calls: A distance less than a selected threshold (100 for consistency with f, see the âStructural variant scoringâ section) indicated sufficiently similar calls. We assessed two variations:</text></passage><passage><infon key="section_type">METHODS</infon><infon key="type">paragraph</infon><offset>52172</offset><text>Majority vote filter: Sets with calls from â¤ k/2 submissions were excluded; each remaining set covered the majority of submissions.</text></passage><passage><infon key="section_type">METHODS</infon><infon key="type">paragraph</infon><offset>52306</offset><text>Aggregate sets to define ensemble calls: The chromosome together with the median start and end positions of each set of calls defined a single ensemble SV call.</text></passage><passage><infon key="section_type">METHODS</infon><infon key="type">paragraph</infon><offset>52467</offset><text>We aggregated SV calls from k submissions into an ensemble set with the following general approach:</text></passage><passage><infon key="section_type">METHODS</infon><infon key="type">paragraph</infon><offset>52567</offset><text>An additional distinction between the baseline and conservative approaches is that the baseline approach only involved the best submission from each team whereas all submissions were used with the conservative approach. To investigate different ensembles of N submissions for the same tumor-normal pair, we first ordered the submissions by overall F-score, computed after excluding calls with SVTYPEâ=âBND. We then generated an ensemble call set with the top k submissions, for kâ=â2,Â ...,Â N. The performance of ensembles was compared to that of the individual submissions, after excluding calls with SVTYPEâ=âBND (e.g., Fig.Â 3d).</text></passage><passage><infon key="section_type">METHODS</infon><infon key="type">title_2</infon><offset>53213</offset><text>Error characterization</text></passage><passage><infon key="section_type">METHODS</infon><infon key="type">paragraph</infon><offset>53236</offset><text>To characterize the errors made by a team, we assessed the teamâs best submission for a given tumor-normal pair. We also assessed errors made by CREST, Delly, and Manta when run, with the same protocols described in the âValidation of BAMSurgeonâ section, on all three tumor-normal pairs. Characterizing FNs and FPs involved comparisons to TPs and true negatives (TNs), respectively. Moreover, we characterized errors at the level of breakpoints.</text></passage><passage><infon key="section_type">METHODS</infon><infon key="type">title_3</infon><offset>53689</offset><text>Sampling true negatives</text></passage><passage><infon key="section_type">METHODS</infon><infon key="type">paragraph</infon><offset>53713</offset><text>Length sampled from a log-normal distribution with mean and standard deviation equal to that of the logged lengths of the known SVs</text></passage><passage><infon key="section_type">METHODS</infon><infon key="type">paragraph</infon><offset>53845</offset><text>Start position is not in known gap and repeat regions</text></passage><passage><infon key="section_type">METHODS</infon><infon key="type">paragraph</infon><offset>53899</offset><text>Region does not overlap with any known SVs</text></passage><passage><infon key="section_type">METHODS</infon><infon key="type">paragraph</infon><offset>53942</offset><text>Region does not overlap with any SVs called in the submission</text></passage><passage><infon key="section_type">METHODS</infon><infon key="type">paragraph</infon><offset>54004</offset><text>Given a set of submissions for the same tumor-normal pair, we identified the maximum number of FPs from a single submission, m. We then sampled â¥ m TNs for each submission, by sampling regions from the reference genome that satisfied these criteria:</text></passage><passage><infon key="section_type">METHODS</infon><infon key="type">paragraph</infon><offset>54256</offset><text>Some sampled regions qualified as TNs for multiple submissions. For IS2, we excluded Team 14âs submission because it had a very large number (17,806) of FPs and thus was computationally problematic for the subsequent random forest analysis.</text></passage><passage><infon key="section_type">METHODS</infon><infon key="type">title_3</infon><offset>54499</offset><text>Breakpoint annotations based on scoring</text></passage><passage><infon key="section_type">METHODS</infon><infon key="type">paragraph</infon><offset>54539</offset><text>A single breakpoint may be associated with multiple (called/known) SVs and therefore may be associated with multiple annotations depending on the scoring approach used, i.e., &gt;â1 of {TP, FN, FP}. To remove ambiguity, we choose a single annotation for each breakpoint by prioritizing as follows: TP &gt; FN &gt; FP. This prioritization favors good performance (i.e., TP has highest priority) and then recall (i.e., FN &gt; FP) since it appears to be a greater challenge than precision for SV calling (Fig.Â 2a, AdditionalÂ fileÂ 1: Figure S5a,b). TN breakpoints should be unambiguous due to the way in which they were sampled (see above).</text></passage><passage><infon key="section_type">METHODS</infon><infon key="type">title_3</infon><offset>55170</offset><text>Genomic variables</text></passage><passage><infon key="section_type">METHODS</infon><infon key="type">paragraph</infon><offset>55188</offset><text>Bridging reads count: We used samtools v0.1.19 to identify reads in the tumor BAM mapped to a genomic region containing the window defined by the breakpoint position Â±â1Â bp. The bridging read count was defined as the number of identified reads. Note that a bridging read does not necessarily have a secondary mapping for part of the read, as one might expect for a split read.</text></passage><passage><infon key="section_type">METHODS</infon><infon key="type">paragraph</infon><offset>55569</offset><text>Distance to nearest germline INDEL: Germline calls were obtained as previously described, and INDELs were parsed out. The distance of a breakpoint to the nearest germline INDEL was computed using BEDTools closest v2.18.2.</text></passage><passage><infon key="section_type">METHODS</infon><infon key="type">paragraph</infon><offset>55791</offset><text>Nucleotide complexity: The sequence for the window defined by the breakpoint position Â±â50Â bp was extracted from the reference fasta file. The nucleotide complexity was defined as the entropy of the sequence: -Î£pxlog2(px) over x â {A, G, C, T} where px is the proportion of the sequence with x (case-insensitive).</text></passage><passage><infon key="section_type">METHODS</infon><infon key="type">paragraph</infon><offset>56112</offset><text>Strand bias: We used samtools v0.1.19 to identify reads in the tumor BAM mapped to a genomic region containing the breakpoint position. The strand bias was defined as the proportion of these reads mapped to the + strand.</text></passage><passage><infon key="section_type">METHODS</infon><infon key="type">paragraph</infon><offset>56333</offset><text>For each breakpoint position, we computed 16 genomic factors, 12 of which were previously described. The additional genomic variables were computed as follows:</text></passage><passage><infon key="section_type">METHODS</infon><infon key="type">title_3</infon><offset>56493</offset><text>Univariate analysis</text></passage><passage><infon key="section_type">METHODS</infon><infon key="type">paragraph</infon><offset>56513</offset><text>To assess the relationship between each non-categorical variable and prediction error rates, we computed the Pearson correlation coefficient between the variable values and the proportion of teams with a FN/FP at the breakpoints, as well as the corresponding P value. Reference and alternative allele counts, base quality, tumor, and normal coverages, bridging reads counts and distances to the germline SNP and INDEL, were logged (base 10) prior to computing correlations (zeros were replaced with ââ1 instead of logged). For the categorical variables, trinucleotide, and genomic location, the P value measured the significance of the variable in a fitted binomial model predicting the FN/FP rate at a breakpoint. A binomial model was fitted because it is a relatively simple model (and thus less prone to overfitting) to test the relationship between a categorical variable and a proportion variable (i.e., an error rate).</text></passage><passage><infon key="section_type">METHODS</infon><infon key="type">title_3</infon><offset>57442</offset><text>Multivariate analysis</text></passage><passage><infon key="section_type">METHODS</infon><infon key="type">paragraph</infon><offset>57464</offset><text>Random forests were generated as previously described with a few alterations. Here, a total of 16 genomic variables (Fig.Â 4) were used to build: (i) a classifier to distinguish FN and TP breakpoints and (ii) a classifier to distinguish FP and TN breakpoints. A FP classifier was not generated for Team 7 with respect to IS1 since the team produced only one FP, and thus, there was insufficient data to generate an accurate model. Conversely, a FP classifier was not generated for Team 14 with respect to IS2 since the team produced a very large number of FPs (17,806) that caused a failure to converge. Computation of the directional effect of variables was also as previously described.</text></passage><passage><infon key="section_type">METHODS</infon><infon key="type">paragraph</infon><offset>58153</offset><text>Non-parametric tests (i.e., Wilcoxon and Mann-Whitney tests) were used throughout to avoid assumptions about the distributions of the tested populations; all tested populations had nââ¥â7. The BEDTools suite (v2.18.2) was used with the bedR R package (v0.5.3) throughout. Plots were generated with the BPG (v5.3.9), lattice (v0.20-33), and latticeExtra (v0.6-26) R packages, and R (v3.2.1) was used throughout.</text></passage><passage><infon key="section_type">METHODS</infon><infon key="type">title_1</infon><offset>58569</offset><text>Additional files</text></passage><passage><infon key="section_type">AUTH_CONT</infon><infon key="type">title</infon><offset>58586</offset><text>Authorsâ contributions</text></passage><passage><infon key="section_type">AUTH_CONT</infon><infon key="type">paragraph</infon><offset>58611</offset><text>AAM, JMS, and PCB initiated the project. ADE created BAMSurgeon. ADE, KE, YH, KEH, JCB, MRK, TCN, SHF, GS, AAM, JMS, and PCB created the ICGC-TCGA DREAM Somatic Mutation Calling Challenge. AYL, ADE, YH, KEH, SMGE, VH, KD, ZC, CC, and TNY created datasets and analyzed sequencing data. AYL, YH, KEH, and PCB were responsible for statistical modeling. Research was supervised by KC, SHF, JG, GS, DH, AAM, JMS, and PCB. The first draft of the manuscript was written by AYL and PCB, extensively edited by ADE, KE, AAM, and JMS, and approved by all authors.</text></passage><passage><infon key="section_type">AUTH_CONT</infon><infon key="type">title_1</infon><offset>59164</offset><text>Ethics approval and consent to participate</text></passage><passage><infon key="section_type">AUTH_CONT</infon><infon key="type">paragraph</infon><offset>59207</offset><text>Not applicable.</text></passage><passage><infon key="section_type">AUTH_CONT</infon><infon key="type">title_1</infon><offset>59223</offset><text>Consent for publication</text></passage><passage><infon key="section_type">AUTH_CONT</infon><infon key="type">paragraph</infon><offset>59247</offset><text>Not applicable.</text></passage><passage><infon key="section_type">COMP_INT</infon><infon key="type">title_1</infon><offset>59263</offset><text>Competing interests</text></passage><passage><infon key="section_type">COMP_INT</infon><infon key="type">paragraph</infon><offset>59283</offset><text>The authors declare that they have no competing interests.</text></passage><passage><infon key="section_type">COMP_INT</infon><infon key="type">title_1</infon><offset>59342</offset><text>Publisherâs Note</text></passage><passage><infon key="section_type">COMP_INT</infon><infon key="type">paragraph</infon><offset>59361</offset><text>Springer Nature remains neutral with regard to jurisdictional claims in published maps and institutional affiliations.</text></passage><passage><infon key="section_type">REF</infon><infon key="type">title</infon><offset>59480</offset><text>References</text></passage><passage><infon key="fpage">428</infon><infon key="lpage">434</infon><infon key="name_0">surname:Northcott;given-names:PA</infon><infon key="name_1">surname:Lee;given-names:C</infon><infon key="name_2">surname:Zichner;given-names:T</infon><infon key="name_3">surname:StÃ¼tz;given-names:AM</infon><infon key="name_4">surname:Erkek;given-names:S</infon><infon key="name_5">surname:Kawauchi;given-names:D</infon><infon key="pub-id_doi">10.1038/nature13379</infon><infon key="pub-id_pmid">25043047</infon><infon key="section_type">REF</infon><infon key="source">Nature</infon><infon key="type">ref</infon><infon key="volume">511</infon><infon key="year">2014</infon><offset>59491</offset><text>Enhancer hijacking activates GFI1 family oncogenes in medulloblastoma</text></passage><passage><infon key="fpage">7837</infon><infon key="lpage">7841</infon><infon key="name_0">surname:Taub;given-names:R</infon><infon key="name_1">surname:Kirsch;given-names:I</infon><infon key="name_2">surname:Morton;given-names:C</infon><infon key="name_3">surname:Lenoir;given-names:G</infon><infon key="name_4">surname:Swan;given-names:D</infon><infon key="name_5">surname:Tronick;given-names:S</infon><infon key="pub-id_doi">10.1073/pnas.79.24.7837</infon><infon key="pub-id_pmid">6818551</infon><infon key="section_type">REF</infon><infon key="source">Proc Natl Acad Sci U S A</infon><infon key="type">ref</infon><infon key="volume">79</infon><infon key="year">1982</infon><offset>59561</offset><text>Translocation of the c-myc gene into the immunoglobulin heavy chain locus in human Burkitt lymphoma and murine plasmacytoma cells</text></passage><passage><infon key="fpage">567</infon><infon key="lpage">572</infon><infon key="name_0">surname:Huang;given-names:M</infon><infon key="name_1">surname:Ye;given-names:Y</infon><infon key="name_2">surname:Chen;given-names:S</infon><infon key="name_3">surname:Chai;given-names:J</infon><infon key="name_4">surname:Lu;given-names:J</infon><infon key="name_5">surname:Zhoa;given-names:L</infon><infon key="pub-id_pmid">3165295</infon><infon key="section_type">REF</infon><infon key="source">Blood</infon><infon key="type">ref</infon><infon key="volume">72</infon><infon key="year">1988</infon><offset>59691</offset><text>Use of all-trans retinoic acid in the treatment of acute promyelocytic leukemia</text></passage><passage><infon key="fpage">1521</infon><infon key="lpage">1532</infon><infon key="name_0">surname:Lalonde;given-names:E</infon><infon key="name_1">surname:Ishkanian;given-names:AS</infon><infon key="name_2">surname:Sykes;given-names:J</infon><infon key="name_3">surname:Fraser;given-names:M</infon><infon key="name_4">surname:Ross-Adams;given-names:H</infon><infon key="name_5">surname:Erho;given-names:N</infon><infon key="pub-id_doi">10.1016/S1470-2045(14)71021-6</infon><infon key="pub-id_pmid">25456371</infon><infon key="section_type">REF</infon><infon key="source">Lancet Oncol</infon><infon key="type">ref</infon><infon key="volume">15</infon><infon key="year">2014</infon><offset>59771</offset><text>Tumour genomic and microenvironmental heterogeneity for integrated prediction of 5-year biochemical recurrence of prostate cancer: a retrospective cohort study</text></passage><passage><infon key="fpage">115</infon><infon key="lpage">127</infon><infon key="name_0">surname:Vollan;given-names:HKM</infon><infon key="name_1">surname:Rueda;given-names:OM</infon><infon key="name_2">surname:Chin;given-names:S-F</infon><infon key="name_3">surname:Curtis;given-names:C</infon><infon key="name_4">surname:Turashvili;given-names:G</infon><infon key="name_5">surname:Shah;given-names:S</infon><infon key="pub-id_doi">10.1016/j.molonc.2014.07.019</infon><infon key="section_type">REF</infon><infon key="source">Mol Oncologia</infon><infon key="type">ref</infon><infon key="volume">9</infon><infon key="year">2015</infon><offset>59931</offset><text>A tumor DNA complex aberration index is an independent predictor of survival in breast and ovarian cancer</text></passage><passage><infon key="fpage">S13</infon><infon key="lpage">S20</infon><infon key="name_0">surname:Medvedev;given-names:P</infon><infon key="name_1">surname:Stanciu;given-names:M</infon><infon key="name_2">surname:Brudno;given-names:M</infon><infon key="pub-id_doi">10.1038/nmeth.1374</infon><infon key="pub-id_pmid">19844226</infon><infon key="section_type">REF</infon><infon key="source">Nat Methods</infon><infon key="type">ref</infon><infon key="volume">6</infon><infon key="year">2009</infon><offset>60037</offset><text>Computational methods for discovering structural variation with next-generation sequencing</text></passage><passage><infon key="fpage">677</infon><infon key="lpage">681</infon><infon key="name_0">surname:Chen;given-names:K</infon><infon key="name_1">surname:Wallis;given-names:JW</infon><infon key="name_2">surname:McLellan;given-names:MD</infon><infon key="name_3">surname:Larson;given-names:DE</infon><infon key="name_4">surname:Kalicki;given-names:JM</infon><infon key="name_5">surname:Pohl;given-names:CS</infon><infon key="pub-id_doi">10.1038/nmeth.1363</infon><infon key="pub-id_pmid">19668202</infon><infon key="section_type">REF</infon><infon key="source">Nat Methods</infon><infon key="type">ref</infon><infon key="volume">6</infon><infon key="year">2009</infon><offset>60128</offset><text>BreakDancer: an algorithm for high-resolution mapping of genomic structural variation</text></passage><passage><infon key="fpage">i350</infon><infon key="lpage">i357</infon><infon key="name_0">surname:Hormozdiari;given-names:F</infon><infon key="name_1">surname:Hajirasouliha;given-names:I</infon><infon key="name_2">surname:Dao;given-names:P</infon><infon key="name_3">surname:Hach;given-names:F</infon><infon key="name_4">surname:Yorukoglu;given-names:D</infon><infon key="name_5">surname:Alkan;given-names:C</infon><infon key="pub-id_doi">10.1093/bioinformatics/btq216</infon><infon key="pub-id_pmid">20529927</infon><infon key="section_type">REF</infon><infon key="source">Bioinformatics</infon><infon key="type">ref</infon><infon key="volume">26</infon><infon key="year">2010</infon><offset>60214</offset><text>Next-generation VariationHunter: combinatorial algorithms for transposon insertion discovery</text></passage><passage><infon key="fpage">i333</infon><infon key="lpage">i339</infon><infon key="name_0">surname:Rausch;given-names:T</infon><infon key="name_1">surname:Zichner;given-names:T</infon><infon key="name_2">surname:Schlattl;given-names:A</infon><infon key="name_3">surname:StÃ¼tz;given-names:AM</infon><infon key="name_4">surname:Benes;given-names:V</infon><infon key="name_5">surname:Korbel;given-names:JO</infon><infon key="pub-id_doi">10.1093/bioinformatics/bts378</infon><infon key="pub-id_pmid">22962449</infon><infon key="section_type">REF</infon><infon key="source">Bioinformatics</infon><infon key="type">ref</infon><infon key="volume">28</infon><infon key="year">2012</infon><offset>60307</offset><text>DELLY: structural variant discovery by integrated paired-end and split-read analysis</text></passage><passage><infon key="fpage">623</infon><infon key="lpage">630</infon><infon key="name_0">surname:Ewing;given-names:AD</infon><infon key="name_1">surname:Houlahan;given-names:KE</infon><infon key="name_2">surname:Hu;given-names:Y</infon><infon key="name_3">surname:Ellrott;given-names:K</infon><infon key="name_4">surname:Caloian;given-names:C</infon><infon key="name_5">surname:Yamaguchi;given-names:TN</infon><infon key="pub-id_doi">10.1038/nmeth.3407</infon><infon key="pub-id_pmid">25984700</infon><infon key="section_type">REF</infon><infon key="source">Nat Methods</infon><infon key="type">ref</infon><infon key="volume">12</infon><infon key="year">2015</infon><offset>60392</offset><text>Combining tumor genome simulation with crowdsourcing to benchmark somatic single-nucleotide-variant detection</text></passage><passage><infon key="fpage">821</infon><infon key="lpage">829</infon><infon key="name_0">surname:Zerbino;given-names:DR</infon><infon key="name_1">surname:Birney;given-names:E</infon><infon key="pub-id_doi">10.1101/gr.074492.107</infon><infon key="pub-id_pmid">18349386</infon><infon key="section_type">REF</infon><infon key="source">Genome Res</infon><infon key="type">ref</infon><infon key="volume">18</infon><infon key="year">2008</infon><offset>60502</offset><text>Velvet: algorithms for de novo short read assembly using de Bruijn graphs</text></passage><passage><infon key="fpage">31</infon><infon key="name_0">surname:Slater;given-names:GSC</infon><infon key="name_1">surname:Birney;given-names:E</infon><infon key="pub-id_doi">10.1186/1471-2105-6-31</infon><infon key="pub-id_pmid">15713233</infon><infon key="section_type">REF</infon><infon key="source">BMC Bioinformatics</infon><infon key="type">ref</infon><infon key="volume">6</infon><infon key="year">2005</infon><offset>60576</offset><text>Automated generation of heuristics for biological sequence comparison</text></passage><passage><infon key="fpage">237</infon><infon key="lpage">248</infon><infon key="name_0">surname:Pop;given-names:M</infon><infon key="name_1">surname:Phillippy;given-names:A</infon><infon key="name_2">surname:Delcher;given-names:AL</infon><infon key="name_3">surname:Salzberg;given-names:SL</infon><infon key="pub-id_doi">10.1093/bib/5.3.237</infon><infon key="pub-id_pmid">15383210</infon><infon key="section_type">REF</infon><infon key="source">Brief Bioinform</infon><infon key="type">ref</infon><infon key="volume">5</infon><infon key="year">2004</infon><offset>60646</offset><text>Comparative genome assembly</text></passage><passage><infon key="fpage">e8407</infon><infon key="name_0">surname:Zerbino;given-names:DR</infon><infon key="name_1">surname:McEwen;given-names:GK</infon><infon key="name_2">surname:Margulies;given-names:EH</infon><infon key="name_3">surname:Birney;given-names:E</infon><infon key="pub-id_doi">10.1371/journal.pone.0008407</infon><infon key="pub-id_pmid">20027311</infon><infon key="section_type">REF</infon><infon key="source">PLoS One</infon><infon key="type">ref</infon><infon key="volume">4</infon><infon key="year">2009</infon><offset>60674</offset><text>Pebble and rock band: heuristic resolution of repeats and scaffolding in the velvet short-read de novo assembler</text></passage><passage><infon key="section_type">REF</infon><infon key="type">ref</infon><offset>60787</offset><text>GitHub Code Repository: wgsim. https://github.com/lh3/wgsim. Accessed 22 Nov 2017.</text></passage><passage><infon key="fpage">652</infon><infon key="lpage">654</infon><infon key="name_0">surname:Wang;given-names:J</infon><infon key="name_1">surname:Mullighan;given-names:CG</infon><infon key="name_2">surname:Easton;given-names:J</infon><infon key="name_3">surname:Roberts;given-names:S</infon><infon key="name_4">surname:Heatley;given-names:SL</infon><infon key="name_5">surname:Ma;given-names:J</infon><infon key="pub-id_doi">10.1038/nmeth.1628</infon><infon key="pub-id_pmid">21666668</infon><infon key="section_type">REF</infon><infon key="source">Nat Methods</infon><infon key="type">ref</infon><infon key="volume">8</infon><infon key="year">2011</infon><offset>60870</offset><text>CREST maps somatic structural variation in cancer genomes with base-pair resolution</text></passage><passage><infon key="fpage">1220</infon><infon key="lpage">1222</infon><infon key="name_0">surname:Chen;given-names:X</infon><infon key="name_1">surname:Schulz-Trieglaff;given-names:O</infon><infon key="name_2">surname:Shaw;given-names:R</infon><infon key="name_3">surname:Barnes;given-names:B</infon><infon key="name_4">surname:Schlesinger;given-names:F</infon><infon key="name_5">surname:KÃ¤llberg;given-names:M</infon><infon key="pub-id_doi">10.1093/bioinformatics/btv710</infon><infon key="pub-id_pmid">26647377</infon><infon key="section_type">REF</infon><infon key="source">Bioinformatics</infon><infon key="type">ref</infon><infon key="volume">32</infon><infon key="year">2016</infon><offset>60954</offset><text>Manta: rapid detection of structural variants and indels for germline and cancer sequencing applications</text></passage><passage><infon key="fpage">65</infon><infon key="lpage">67</infon><infon key="name_0">surname:Chong;given-names:Z</infon><infon key="name_1">surname:Ruan;given-names:J</infon><infon key="name_2">surname:Gao;given-names:M</infon><infon key="name_3">surname:Zhou;given-names:W</infon><infon key="name_4">surname:Chen;given-names:T</infon><infon key="name_5">surname:Fan;given-names:X</infon><infon key="pub-id_doi">10.1038/nmeth.4084</infon><infon key="pub-id_pmid">27892959</infon><infon key="section_type">REF</infon><infon key="source">Nat Methods</infon><infon key="type">ref</infon><infon key="volume">14</infon><infon key="year">2017</infon><offset>61059</offset><text>novoBreak: local assembly for breakpoint detection in cancer genomes</text></passage><passage><infon key="section_type">REF</infon><infon key="type">ref</infon><offset>61128</offset><text>ICGC-TCGA DREAM Mutation Calling challenge. https://www.synapse.org/#!Synapse:syn312572/wiki/58893. Accessed 22 Nov 2017.</text></passage><passage><infon key="fpage">181re1</infon><infon key="name_0">surname:Margolin;given-names:AA</infon><infon key="name_1">surname:Bilal;given-names:E</infon><infon key="name_2">surname:Huang;given-names:E</infon><infon key="name_3">surname:Norman;given-names:TC</infon><infon key="name_4">surname:Ottestad;given-names:L</infon><infon key="name_5">surname:Mecham;given-names:BH</infon><infon key="pub-id_doi">10.1126/scitranslmed.3006112</infon><infon key="section_type">REF</infon><infon key="source">Sci Transl Med</infon><infon key="type">ref</infon><infon key="volume">5</infon><infon key="year">2013</infon><offset>61250</offset><text>Systematic analysis of challenge-driven improvements in molecular prognostic models for breast cancer</text></passage><passage><infon key="fpage">796</infon><infon key="lpage">804</infon><infon key="name_0">surname:Marbach;given-names:D</infon><infon key="name_1">surname:Costello;given-names:JC</infon><infon key="name_2">surname:KÃ¼ffner;given-names:R</infon><infon key="name_3">surname:Vega;given-names:NM</infon><infon key="name_4">surname:Prill;given-names:RJ</infon><infon key="name_5">surname:Camacho;given-names:DM</infon><infon key="pub-id_doi">10.1038/nmeth.2016</infon><infon key="pub-id_pmid">22796662</infon><infon key="section_type">REF</infon><infon key="source">Nat Methods</infon><infon key="type">ref</infon><infon key="volume">9</infon><infon key="year">2012</infon><offset>61352</offset><text>Wisdom of crowds for robust gene network inference</text></passage><passage><infon key="fpage">25</infon><infon key="name_0">surname:Strobl;given-names:C</infon><infon key="name_1">surname:Boulesteix;given-names:A-L</infon><infon key="name_2">surname:Zeileis;given-names:A</infon><infon key="name_3">surname:Hothorn;given-names:T</infon><infon key="pub-id_doi">10.1186/1471-2105-8-25</infon><infon key="pub-id_pmid">17254353</infon><infon key="section_type">REF</infon><infon key="source">BMC Bioinformatics</infon><infon key="type">ref</infon><infon key="volume">8</infon><infon key="year">2007</infon><offset>61403</offset><text>Bias in random forest variable importance measures: illustrations, sources and a solution</text></passage><passage><infon key="fpage">92</infon><infon key="name_0">surname:Tattini;given-names:L</infon><infon key="name_1">surname:DâAurizio;given-names:R</infon><infon key="name_2">surname:Magi;given-names:A</infon><infon key="pub-id_doi">10.3389/fbioe.2015.00092</infon><infon key="pub-id_pmid">26161383</infon><infon key="section_type">REF</infon><infon key="source">Front Bioeng Biotechnol</infon><infon key="type">ref</infon><infon key="volume">3</infon><infon key="year">2015</infon><offset>61493</offset><text>Detection of genomic structural variants from next-generation sequencing data</text></passage><passage><infon key="fpage">462</infon><infon key="name_0">surname:Boutros;given-names:PC</infon><infon key="name_1">surname:Margolin;given-names:AA</infon><infon key="name_2">surname:Stuart;given-names:JM</infon><infon key="name_3">surname:Califano;given-names:A</infon><infon key="name_4">surname:Stolovitzky;given-names:G</infon><infon key="pub-id_doi">10.1186/s13059-014-0462-7</infon><infon key="pub-id_pmid">25314947</infon><infon key="section_type">REF</infon><infon key="source">Genome Biol</infon><infon key="type">ref</infon><infon key="volume">15</infon><infon key="year">2014</infon><offset>61571</offset><text>Toward better benchmarking: challenge-based methods assessment in cancer genomics</text></passage><passage><infon key="fpage">811</infon><infon key="lpage">815</infon><infon key="name_0">surname:Meyer;given-names:P</infon><infon key="name_1">surname:Alexopoulos;given-names:LG</infon><infon key="name_2">surname:Bonk;given-names:T</infon><infon key="name_3">surname:Califano;given-names:A</infon><infon key="name_4">surname:Cho;given-names:CR</infon><infon key="name_5">surname:de la Fuente;given-names:A</infon><infon key="pub-id_doi">10.1038/nbt.1968</infon><infon key="pub-id_pmid">21904331</infon><infon key="section_type">REF</infon><infon key="source">Nat Biotechnol</infon><infon key="type">ref</infon><infon key="volume">29</infon><infon key="year">2011</infon><offset>61653</offset><text>Verification of systems biology research in the age of collaborative competition</text></passage><passage><infon key="section_type">REF</infon><infon key="type">ref</infon><offset>61734</offset><text>ICGC-TCGA SMC-DNA Meta Challenge. https://www.synapse.org/#!Synapse:syn4588939/wiki/233672. Accessed 29 June 2018.</text></passage><passage><infon key="fpage">2741</infon><infon key="lpage">2744</infon><infon key="name_0">surname:Mohiyuddin;given-names:M</infon><infon key="name_1">surname:Mu;given-names:JC</infon><infon key="name_2">surname:Li;given-names:J</infon><infon key="name_3">surname:Bani Asadi;given-names:N</infon><infon key="name_4">surname:Gerstein;given-names:MB</infon><infon key="name_5">surname:Abyzov;given-names:A</infon><infon key="pub-id_doi">10.1093/bioinformatics/btv204</infon><infon key="pub-id_pmid">25861968</infon><infon key="section_type">REF</infon><infon key="source">Bioinformatics</infon><infon key="type">ref</infon><infon key="volume">31</infon><infon key="year">2015</infon><offset>61849</offset><text>MetaSV: an accurate and integrative structural-variant caller for next generation sequencing</text></passage><passage><infon key="fpage">R18</infon><infon key="name_0">surname:Aird;given-names:D</infon><infon key="name_1">surname:Ross;given-names:MG</infon><infon key="name_2">surname:Chen;given-names:W-S</infon><infon key="name_3">surname:Danielsson;given-names:M</infon><infon key="name_4">surname:Fennell;given-names:T</infon><infon key="name_5">surname:Russ;given-names:C</infon><infon key="pub-id_doi">10.1186/gb-2011-12-2-r18</infon><infon key="pub-id_pmid">21338519</infon><infon key="section_type">REF</infon><infon key="source">Genome Biol</infon><infon key="type">ref</infon><infon key="volume">12</infon><infon key="year">2011</infon><offset>61942</offset><text>Analyzing and minimizing PCR amplification bias in Illumina sequencing libraries</text></passage><passage><infon key="fpage">e49110</infon><infon key="name_0">surname:Frampton;given-names:M</infon><infon key="name_1">surname:Houlston;given-names:R</infon><infon key="pub-id_doi">10.1371/journal.pone.0049110</infon><infon key="pub-id_pmid">23152858</infon><infon key="section_type">REF</infon><infon key="source">PLoS One</infon><infon key="type">ref</infon><infon key="volume">7</infon><infon key="year">2012</infon><offset>62023</offset><text>Generation of artificial FASTQ files to evaluate the performance of next-generation sequencing pipelines</text></passage><passage><infon key="section_type">REF</infon><infon key="type">ref</infon><offset>62128</offset><text>GitHub Code Repository: BAMSurgeon. https://github.com/adamewing/bamsurgeon. Accessed 22 Nov 2017.</text></passage><passage><infon key="section_type">REF</infon><infon key="type">ref</infon><offset>62227</offset><text>BAMSurgeon Manual. https://github.com/adamewing/bamsurgeon/blob/master/doc/Manual.pdf. Accessed 22 Nov 2017.</text></passage><passage><infon key="section_type">REF</infon><infon key="type">ref</infon><offset>62336</offset><text>Picard Tools - By Broad Institute. http://broadinstitute.github.io/picard/. Accessed 22 Nov 2017.</text></passage><passage><infon key="section_type">REF</infon><infon key="type">ref</infon><offset>62434</offset><text>ICGC-TCGA DREAM Mutation Calling challenge: Synthetic Tumours. https://www.synapse.org/#!Synapse:syn312572/wiki/62018. Accessed 22 Nov 2017.</text></passage><passage><infon key="section_type">REF</infon><infon key="type">ref</infon><offset>62575</offset><text>Novocraft. http://www.novocraft.com/. Accessed 22 November 2017.</text></passage><passage><infon key="section_type">REF</infon><infon key="type">ref</infon><offset>62640</offset><text>The Variant Call Format (VCF) Version 4.1 Specification. https://samtools.github.io/hts-specs/VCFv4.1.pdf. Accessed 22 Nov 2017.</text></passage><passage><infon key="fpage">83</infon><infon key="lpage">97</infon><infon key="name_0">surname:Kuhn;given-names:HW</infon><infon key="pub-id_doi">10.1002/nav.3800020109</infon><infon key="section_type">REF</infon><infon key="source">Nav Res Logist Q</infon><infon key="type">ref</infon><infon key="volume">2</infon><infon key="year">1955</infon><offset>62769</offset><text>The Hungarian method for the assignment problem</text></passage><passage><infon key="fpage">841</infon><infon key="lpage">842</infon><infon key="name_0">surname:Quinlan;given-names:AR</infon><infon key="name_1">surname:Hall;given-names:IM</infon><infon key="pub-id_doi">10.1093/bioinformatics/btq033</infon><infon key="pub-id_pmid">20110278</infon><infon key="section_type">REF</infon><infon key="source">Bioinformatics</infon><infon key="type">ref</infon><infon key="volume">26</infon><infon key="year">2010</infon><offset>62817</offset><text>BEDTools: a flexible suite of utilities for comparing genomic features</text></passage><passage><infon key="fpage">14</infon><infon key="name_0">surname:Haider;given-names:S</infon><infon key="name_1">surname:Waggott;given-names:D</infon><infon key="name_2">surname:Lalonde;given-names:E</infon><infon key="name_3">surname:Fung;given-names:C</infon><infon key="name_4">surname:Liu;given-names:F-F</infon><infon key="name_5">surname:Boutros;given-names:PC</infon><infon key="pub-id_doi">10.1186/s13029-016-0059-5</infon><infon key="pub-id_pmid">27999613</infon><infon key="section_type">REF</infon><infon key="source">Source Code Biol Med</infon><infon key="type">ref</infon><infon key="volume">11</infon><infon key="year">2016</infon><offset>62888</offset><text>A bedr way of genomic interval processing</text></passage><passage><infon key="section_type">REF</infon><infon key="type">ref</infon><offset>62930</offset><text>BAMSurgeon v1.1. 2018. 10.5281/zenodo.1288359. Accessed 29 June 2018.</text></passage></document></collection>
