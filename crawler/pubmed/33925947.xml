<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE collection SYSTEM "BioC.dtd">
<collection><source>PMC</source><date>20210517</date><key>pmc.key</key><document><id>8123452</id><infon key="license">CC BY</infon><passage><infon key="article-id_doi">10.3390/s21093036</infon><infon key="article-id_pmc">8123452</infon><infon key="article-id_pmid">33925947</infon><infon key="article-id_publisher-id">sensors-21-03036</infon><infon key="elocation-id">3036</infon><infon key="issue">9</infon><infon key="kwd">task-matching anonymous multi-submission detection inner-product encryption zero-knowledge proof</infon><infon key="license">Licensee MDPI, Basel, Switzerland. This article is an open access article distributed under the terms and conditions of the Creative Commons Attribution (CC BY) license (https://creativecommons.org/licenses/by/4.0/).</infon><infon key="name_0">surname:Xu;given-names:Jie</infon><infon key="name_1">surname:Lin;given-names:Zhaowen</infon><infon key="name_2">surname:Wu;given-names:Jun</infon><infon key="name_3">surname:Li;given-names:Wenjuan</infon><infon key="section_type">TITLE</infon><infon key="type">front</infon><infon key="volume">21</infon><infon key="year">2021</infon><offset>0</offset><text>Privacy-Preserving Task-Matching and Multiple-Submissions Detection in Crowdsourcing</text></passage><passage><infon key="section_type">ABSTRACT</infon><infon key="type">abstract</infon><offset>85</offset><text>Crowdsourcing enables requesters to publish tasks to a platform and workers are rewarded for performing tasks of interest. It provides an efficient and low-cost way to aggregate data and solve problems that are difficult for computers but simple for humans. However, the privacy risks and challenges are still widespread. In the real world, the task content may be sensitive and only workers who meet specific requirements or possess certain skills are allowed to acquire and perform it. When these distributed workers submit their task answers, their identity or attribute privacy may also be exposed. If workers are allowed to submit anonymously, they may have the chance to repeat their answers so as to get more rewards. To address these issues, we develop a privacy-preserving task-matching and multiple-submissions detection scheme based on inner-product cryptography and proof of knowledge (PoK) protocol in crowdsourcing. In such a construction, multi-authority inner-product encryption is introduced to protect task confidentiality and achieve fine-grained task-matching based on the attributes of workers. The PoK protocol helps to restrict multiple submissions. For one task, a suitable worker could only submit once without revealing his/her identity. Moreover, different tasks for one worker are unlinkable. Furthermore, the implementation analysis shows that the scheme is effective and feasible.</text></passage><passage><infon key="section_type">INTRO</infon><infon key="type">title_1</infon><offset>1496</offset><text>1. Introduction</text></passage><passage><infon key="section_type">INTRO</infon><infon key="type">paragraph</infon><offset>1512</offset><text>With the development of network technologies and the popularity of smartphones, crowdsourcing has become a popular distributed paradigm for problem-solving, which is applied to address problems that are too complex for computer programs or of high cost for an organization. An early typical example of crowdsourcing is captcha. ReCAPTCHA, a project initiated by Carnegie Mellon University, uses the wisdom of the masses to help the digitization of ancient books in the form of crowdsourcing. This project scans the text, which cannot be recognized by the optical character recognition technology accurately, and displays it in the captcha question, so that a human can recognize it when answering the captcha question.</text></passage><passage><infon key="section_type">INTRO</infon><infon key="type">paragraph</infon><offset>2231</offset><text>In the era of big data, the amount of data is increasing, and the forms of data are more diversified, which leads to increasing demand for crowdsourcing and the increasing forms of tasks. Crowdsourcing platforms such as Amazon Mechanical Turk (AMT), crowdflower and upwork of Amazon came into being. On these platforms, tens of millions of workers from more than 100 countries are involved in solving problems. It has inspired the collective imagination of researchers in numerous fields such as human–computer interaction, machine learning, artificial intelligence, information retrieval, database community, etc.</text></passage><passage><infon key="section_type">INTRO</infon><infon key="type">paragraph</infon><offset>2848</offset><text>The openness and sharing of crowdsourcing make it more vulnerable to various attacks since it allows attackers to join crowdsourcing systems freely as requesters or workers. When task requesters have tasks to crowdsource, they need to set some parameters, including task pricing, answer time, task worker quality, etc. After that, they can publish tasks on the crowdsourcing platform, and then the tasks will be assigned to workers. When a task is answered by a worker, the requester can choose to accept or reject the answer. If the requester accepts the answer, he/she will pay the worker accordingly. In this process, combined with the task constraints, task content and worker authentication information, the attacker may infer the important private information of the participants, including identity, age, occupation, residence, and so on. If such kind of information cannot be properly kept, it will reduce the enthusiasm of users to participate in the task and further affect the completion of the task.</text></passage><passage><infon key="section_type">INTRO</infon><infon key="type">paragraph</infon><offset>3860</offset><text>In the process of task release and matching, since different workers have their own specialties, unsuitable or malicious workers may randomly answer questions to get the reward, or deliberately submit wrong answers to distort the true value. To ensure the quality of answers, the requester should set up task constraints for different tasks so as to match appropriate workers. There are many ways of keyword matching. The flexibility of accurate matching is poor. The matching method that supports multiple policy expressions is more in line with diverse requirements, e.g., ((major = (art ∨ artificial intelligence)) ∧ (age ≥ 30)), etc. Under the premise of privacy protection, how to achieve flexible task-matching has become a thorny issue.</text></passage><passage><infon key="section_type">INTRO</infon><infon key="type">paragraph</infon><offset>4610</offset><text>In most previous mutual privacy-preserving task allocation research, the homomorphism is adopted to realize multiple types of ciphertext policy matching without revealing task constraints and workers’ private attributes, which cause the downgrade of efficiency. Moreover, content confidentiality is closely related to the privacy of participants. For the privacy of the task content, the proxy re-encryption algorithm or other technologies is needed. Then the computation and communication cost is further increased. However, based on inner-product encryption the relevant work considered flexible matching of encrypted keywords and fine-grained access control of task content simultaneously. With the expansion of the network scale, it is difficult for a single authentication center to manage workers’ keys efficiently. The multi-authority model could better adapt to a large-scale distributed network. However, at this time, there are not only collusion problems of workers but also collusion or damage problems of some attribute authorities in the system.</text></passage><passage><infon key="section_type">INTRO</infon><infon key="type">paragraph</infon><offset>5674</offset><text>After the task is assigned, the worker will perform the task and submit task data. At this phase, we should first ensure that it is the right workers who meet the requirements submit the answers. However, similarly, the workers may not wish to be tracked by the server. Since the platform is not completely credible, it may expose the worker’s privacy because of interest-driven. Due to the flexible matching requirements set by the task requester, an attribute-based signature could be used. It allows signers to sign a message under policies that satisfying their attributes. In a crowdsourcing system, the worker obtains the attribute-based private key from the authority. When his/her attributes satisfy the constraint policy set by the requester, the signature can be verified to be valid. With anonymous attribute-based signature authentication, it is possible to prevent inappropriate workers from submitting, while avoiding the leakage of worker’s privacy. However, dishonest qualified workers may submit multiple answers to a task for more rewards. Moreover, if a greedy participant submits similar or identical results with different pseudonyms many times, it will also reduce the diversity and credibility of the data, and further produce bias to the results that should have been perceived by numerous participants. Actually, a privacy-preserving submission detection scheme is needed, which ensures that only qualified workers can participate in answering and cannot submit repeatedly, and the worker’s identity and history of participating in the task will not be disclosed.</text></passage><passage><infon key="section_type">INTRO</infon><infon key="type">paragraph</infon><offset>7269</offset><text>In this paper, we first analyze the potential security threats to the privacy and quality assurance issues of crowdsourcing during the task allocation and task submission phase, and then propose a security and privacy protection model of the system. After that, a scheme based on multi-authority inner-product encryption (MIPE) and zero-knowledge proof protocol, called zk-MIPE, is designed. With MIPE, the scheme can realize secure sharing of task content and the flexible assignment of tasks based on encrypted task constraints and workers’ attributes. With the repeated submission detection algorithm constructed by zero-knowledge proof protocol, it ensures that the requester and platform can only verify that a worker who has submitted an answer about a task meets the corresponding task constraints but cannot judge his/her specific identity or attribute information. Also, if the worker performs multiple tasks, no one can link them. At the same time, when workers submit repeatedly for the same task, they can be identified by association. Under the premise of protecting the participants’ privacy, the scheme selects suitable workers to submit an answer honestly with more professional skills, thus further improve the quality of aggregated task data. In summary, the technical innovation of the proposed system is: we designed a novel MIPE scheme and a one-time anonymous inner-product authentication protocol based on zero-knowledge proof, and proved the confidentiality, one-time authentication, anonymity and unlinkability of the solution. In terms of application, we achieved the innovative features in function and security for crowdsourcing privacy protection: (1). it supports flexible task-matching based on inner-product with mutual privacy; (2). it supports anonymously inner-product-based authentication and duplicate submission detection without revealing identity and attributes privacy.</text></passage><passage><infon key="section_type">INTRO</infon><infon key="type">title_1</infon><offset>9184</offset><text>2. Related Work</text></passage><passage><infon key="section_type">INTRO</infon><infon key="type">paragraph</infon><offset>9200</offset><text> Crowdsourcing Privacy </text></passage><passage><infon key="section_type">INTRO</infon><infon key="type">paragraph</infon><offset>9224</offset><text>Presently, for a variety of data processing and analysis tasks, only relying on machine algorithms cannot achieve desired results. Fortunately, crowdsourcing provides an efficient and low-cost paradigm to solve this problem with the advantage of distributed mode. However, security and privacy issues are still thorny. In past research on privacy-preserving, some researchers analyzed the privacy threats of the whole crowdsourcing process to propose an overall security framework. Meanwhile, blockchain is applied to deal with potential security issues (e.g., single point of failure, sensitive leakage) without a trusted third party, such as SecBCS, MCS-chain, CrowdBC. Also, novel fog-based computing framework is proposed for low latency vehicular crowdsensing networks.</text></passage><passage><infon key="section_type">INTRO</infon><infon key="type">paragraph</infon><offset>9999</offset><text>Still, there are researchers in-depth discussing crowdsourcing security threats at each phase, and designing differentiated privacy protection schemes for specific security objectives using diversified technologies. Among them, location privacy is the first concern of researchers. The methods used to solve location privacy include k-anonymity, differential privacy, game theory, commitment, machine-learning-based obfuscation, encryption, etc. However, most of them focus on protecting the workers’ privacy. To provide mutual privacy for both requesters and workers, Liu proposed a privacy-preserving protocol based on homomorphic encryption with a dual-server setting. After that, Shu constructs a task-matching scheme over the encrypted location with a single server by applying searchable encryption. Actually, in the scenes they mainly concern, the privacy requirements of task content are not high, which are usually public to all participants. However, the need for content privacy protection still exists. For some sensitive task content involving address, occupation and purpose, it can help attackers to further infer participants’ privacy by combining other information. In the privacy-aware task assignment schemes proposed by Liu et al. and Yuan et al., attribute-based encryption is applied to protect content privacy and realize fine-grained access control. Extending to more complex multi-keyword crowdsourcing allocation scenario, our prior work introduced inner-product encryption (IPE) to support flexible matching policies without disclosing task privacy and worker privacy. However, as the worker scale increases, centralized single authority mode has obvious disadvantages in efficiency and security.</text></passage><passage><infon key="section_type">INTRO</infon><infon key="type">paragraph</infon><offset>11727</offset><text>Moreover, most of these schemes mainly discussed privacy protection in the task allocation phase. While in the data submission phase, the platform should verify the identity or attribute information of the participants to evaluate whether the appropriate workers have performed the task. At this time, if we do not provide effective privacy protection, the secure closed-loop still cannot be constructed. Based on signature and other technologies, Ni and Shu presented Sybil detection schemes respectively. Nevertheless, they are concerned about the deduplication of encrypted data content rather than the identity privacy of workers. Though Lu proposed a blockchain-based private and anonymous repetition detection scheme for task submission, the introduction of zk-SNARK increases the computational overhead of the scheme. Compared with the previous scheme, we focus on the privacy protection of task releasing and task submission. In the task releasing stage, the scheme requires privacy of task content and constraint conditions, and should realize flexible ciphertext task-matching. In the task submission phase, workers could submit perceptual data anonymously and cannot submit it repeatedly.</text></passage><passage><infon key="section_type">INTRO</infon><infon key="type">paragraph</infon><offset>12927</offset><text> Inner-Product Cryptosystems </text></passage><passage><infon key="section_type">INTRO</infon><infon key="type">paragraph</infon><offset>12957</offset><text>In 1984, Shamir proposed the concept of ID-based public key cryptography and constructed the first ID-based digital signature scheme based on the large integer decomposition problem. However, it was not until 2001 that Boneh and Franklin presented the first secure and practical ID-based encryption scheme based on elliptic curve bilinear pairings. After that, Sahai and Waters designed a fuzzy identity-based encryption scheme based on key sharing theory in 2005, and further proposed the concept of attribute-based encryption (ABE). Since then, research on ABE has covered privacy protection, richer access policy types, efficiency, security assumptions, attribute revocation, and other directions. To implement policy hiding, Boneh and Waters introduced a hidden vector encryption scheme supporting conjunctive, subset and range queries in 2007. Then Katz raised the concept of IPE for the first time and proved its security under the standard model in 2008. The scheme allows conjunctive disjunction, polynomial and inner-product queries. However, the length of ciphertext increases linearly with the increase of vector dimension. Afterwards, Attrapadung and Libert developed a scheme to reduce the length of ciphertext to a constant. Furthermore, Okamoto realized a scheme with constant key length. On the other hand, to reduce the management cost of a single authentication server, Chase presented an encryption scheme that enables the implementation of the AND access policy in a multi-authority environment. On this basis, to reduce the complexity of user decryption, Li constructed a multi-authority outsourcing attribute encryption system based on linear secret-sharing schemes (LSSS). However, the IPE scheme in multi-authority environment still needs to be proposed. For anonymous authentication, Yuen adopted k times attribute signature (k-ABS) to restrict access times. The data is still stored remotely in plaintext. Ning presented an outsourced -time attribute-based encryption (-ABE) scheme, in which users apply attributes as identity without using real names. Although the server cannot know a user’s identity, it can associate a user’s previous and subsequent access through the proxy key. Moreover, due to the lack of association between the attribute-related private key and the validation tags for times, there is a risk that the attacker will steal the other’s validation tag, and then send his own attribute-related private key to access the data illegally. Inner-product cryptosystems enables the realization of flexible and diverse policies. Compared with cryptosystems supporting LSSS policy, it allows policy hiding. However, presently, neither the IPE encryption for multi-authority nor the k-time inner-product-based authentication scheme has been proposed. Therefore, in this article, we intend to solve this problem and apply the design scheme to crowdsourcing privacy protection.</text></passage><passage><infon key="section_type">INTRO</infon><infon key="type">title_1</infon><offset>15877</offset><text>3. Preliminary</text></passage><passage><infon key="section_type">INTRO</infon><infon key="type">title_2</infon><offset>15892</offset><text>3.1. System Assumption</text></passage><passage><infon key="section_type">INTRO</infon><infon key="type">paragraph</infon><offset>15915</offset><text>As shown in Figure 1, the proposed crowdsourcing system contains the following entities: central authority , multiple attribute authorities , the crowdsourcing server , requesters and workers. As a trusted third party,  initializes the system, generates global parameters and supervises each . Suppose there are m attribute authorities, denoted as ,...,. They are responsible for managing disjoint attribute sets. The requester is an enterprise or individual who publishes the task on the system platform. The worker is a user who performs tasks and submits perception data.  verifies whether workers meet the requirements and submit repeatedly. Let the sets of vectors  and  be the task constraint and the worker’s attribute-based vector. Only if  holds for all , the worker could decrypt the corresponding task ciphertext.</text></passage><passage><infon key="section_type">INTRO</infon><infon key="type">paragraph</infon><offset>16742</offset><text>For system security, we need at least one attribute authority is honest and secure in such a system. The requester is also considered to be honest.  is considered to be honest-but-curious, i.e., it will honestly execute the protocol and screen out suitable workers, but it will also be curious about more information, such as task content and participant identity. The worker is considered to be honest but greedy, i.e., he will execute the protocol honestly but may submit data multiple times to get more rewards.</text></passage><passage><infon key="section_type">INTRO</infon><infon key="type">paragraph</infon><offset>17257</offset><text>The specific security objectives of the zk-MIPE scheme are as follows.</text></passage><passage><infon key="section_type">INTRO</infon><infon key="type">paragraph</infon><offset>17328</offset><text>(1) Content and constraints privacy. Task content and constraints should be released in the form of ciphertext. Only suitable workers could learn the corresponding task plaintext.</text></passage><passage><infon key="section_type">INTRO</infon><infon key="type">paragraph</infon><offset>17508</offset><text>(2) One-time attribute-based authentication. If the worker’s attributes meet the task constraints, he/she can provide a valid proof to the CS. If not, he/she cannot forge a valid proof.</text></passage><passage><infon key="section_type">INTRO</infon><infon key="type">paragraph</infon><offset>17696</offset><text>(3) Identity and attribute privacy. Although the CS enables the filtering out of suitable workers and the restriction of multiple submission, it cannot know the worker’s identity and attributes, or even associate the previous and subsequent tasks that a worker participates in.</text></passage><passage><infon key="section_type">INTRO</infon><infon key="type">title_2</infon><offset>17976</offset><text>3.2. Inner-Product Access Structure</text></passage><passage><infon key="section_type">INTRO</infon><infon key="type">paragraph</infon><offset>18012</offset><text>The inner product is a generalization of the concept of point multiplication. In a vector space, it is a method of multiplying vectors, and the product is a scalar. For a real vector space, let  be vectors and r be a scalar, then the inner product  satisfies the following properties.</text></passage><passage><infon key="section_type">INTRO</infon><infon key="type">paragraph</infon><offset>18297</offset><text>(1) ;</text></passage><passage><infon key="section_type">INTRO</infon><infon key="type">paragraph</infon><offset>18303</offset><text>(2) ;</text></passage><passage><infon key="section_type">INTRO</infon><infon key="type">paragraph</infon><offset>18309</offset><text>(3) ;</text></passage><passage><infon key="section_type">INTRO</infon><infon key="type">paragraph</infon><offset>18315</offset><text>(4) , and only when  the equal sign holds.</text></passage><passage><infon key="section_type">INTRO</infon><infon key="type">title_2</infon><offset>18358</offset><text>3.3. Bilinear Group</text></passage><passage><infon key="section_type">INTRO</infon><infon key="type">paragraph</infon><offset>18378</offset><text> Bilinear Map: A group generator  takes a security parameter λ as input. It outputs a group  of prime order q, where  is an additional group and  is a multiplication group. Let g be a generator of . The bilinear map e has the following properties. </text></passage><passage><infon key="section_type">INTRO</infon><infon key="type">paragraph</infon><offset>18632</offset><text> (1) Bilinearity: For random  and , we have ; </text></passage><passage><infon key="section_type">INTRO</infon><infon key="type">paragraph</infon><offset>18679</offset><text> (2) Nondegeneracy: ; </text></passage><passage><infon key="section_type">INTRO</infon><infon key="type">paragraph</infon><offset>18702</offset><text> (3) Computability: For random , there exists an efficient algorithm to compute . </text></passage><passage><infon key="section_type">INTRO</infon><infon key="type">paragraph</infon><offset>18785</offset><text> Computational Diffie-Hellman (CDH) Problem: A challenger runs  to generate . Then it chooses a random generator g and random . Given a tuple  as input, we say that the CDH assumption holds if there is no polynomial-time algorithm can compute the element . </text></passage><passage><infon key="section_type">INTRO</infon><infon key="type">paragraph</infon><offset>19043</offset><text> Decisional Diffie-Hellman (DDH) Problem: A challenger runs  to generate . Then it chooses a random generator g and random . Given a tuple  as input, we say that the DDH assumption holds if there is no polynomial-time algorithm can distinguish  from a random value with nonnegligible advantage in . </text></passage><passage><infon key="section_type">INTRO</infon><infon key="type">paragraph</infon><offset>19343</offset><text> q-Decisional Diffie-Hellman Inversion (DDHI) Problem: A challenger runs  to generate . Then it chooses a random generator g and a random . Given a tuple  as input, we say that the q-DDHI assumption holds if there is no polynomial-time algorithm can distinguish  from a random value with nonnegligible advantage in . </text></passage><passage><infon key="section_type">INTRO</infon><infon key="type">title_2</infon><offset>19661</offset><text>3.4. Zero-Knowledge Proof Protocol</text></passage><passage><infon key="section_type">INTRO</infon><infon key="type">paragraph</infon><offset>19696</offset><text>The zero-knowledge proof (ZKP) protocols have been applied to numerous fields, including both traditional secure multiparty computation and emerging privacy protection projects in distributed ledger and blockchain, such as Zcash, hawk, and so on.</text></passage><passage><infon key="section_type">INTRO</infon><infon key="type">paragraph</infon><offset>19943</offset><text>A ZKP system is a protocol between a computationally bounded prover and a verifier. Let R be an NP relation. Set  and the language . During the protocol, the verifier is convinced by the prover that x belongs to L, i.e., there exists a witness w such that  for x. However, in proof of knowledge (PoK), the prover cannot only prove the exists of some witness but also be convinced that he/she indeed know a specific witness w.</text></passage><passage><infon key="section_type">INTRO</infon><infon key="type">paragraph</infon><offset>20369</offset><text>The main properties of ZKP for a relation R are as follows.</text></passage><passage><infon key="section_type">INTRO</infon><infon key="type">paragraph</infon><offset>20429</offset><text>Completeness: Given a witness  that satisfies , the prover could convince the verifier of his knowledge. i.e., </text></passage><passage><infon key="section_type">INTRO</infon><infon key="type">paragraph</infon><offset>20541</offset><text>Soundness: Given a witness  that does not satisfy , for any polynomial-time prover, the probability that the verification can be accepted is negligible. i.e.,  </text></passage><passage><infon key="section_type">INTRO</infon><infon key="type">paragraph</infon><offset>20702</offset><text>Zero knowledge: The interaction between a prover and a verifier is called a view. The zero-knowledge property could be captured by the existence of a simulator E that could access to the verifier’s input but not the prover’s: with the assumption , if the simulated view, i.e., the transcript, is indistinguishable from the original view between the honest prover and the verifier, whether honest or cheating. We say the ZKP scheme has the property of zero knowledge. Moreover, in PoK, there exists a knowledge extractor, which has rewindable access to the prover, and could extract the witness with nonnegligible probability.</text></passage><passage><infon key="section_type">INTRO</infon><infon key="type">title_1</infon><offset>21332</offset><text>4. Model of zk-MIPE</text></passage><passage><infon key="section_type">INTRO</infon><infon key="type">paragraph</infon><offset>21352</offset><text> A privacy-preserving task-matching and multi-submission detection scheme zk-MIPE is defined by a tuple of the following algorithms: </text></passage><passage><infon key="section_type">INTRO</infon><infon key="type">paragraph</infon><offset>21486</offset><text>CA Setup. The algorithm is executed by the central authority . It takes a security parameter  and several attribute authorities m as inputs. It then publishes a system public key  and keeps a system master key  secretly.</text></passage><passage><infon key="section_type">INTRO</infon><infon key="type">paragraph</infon><offset>21707</offset><text>AA Setup. Run by the attribute authorities , the algorithm takes a security parameter  and several intra-domain attributes n as inputs. It then outputs a public key  and an attribute-related secret key  for each .</text></passage><passage><infon key="section_type">INTRO</infon><infon key="type">paragraph</infon><offset>21921</offset><text>Task Releasing. Executed by the requester, the algorithm takes the public key, a message and a constraint as inputs. Then it outputs an inner-product ciphertext C.</text></passage><passage><infon key="section_type">INTRO</infon><infon key="type">paragraph</infon><offset>22085</offset><text>Registration. According to the identity u and attributes , the secret key  for the registrant is generated by  and .</text></passage><passage><infon key="section_type">INTRO</infon><infon key="type">paragraph</infon><offset>22202</offset><text>Decryption. Executed by the worker u, the algorithm takes the ciphertext C and the private key  as inputs. It then outputs the message M.</text></passage><passage><infon key="section_type">INTRO</infon><infon key="type">paragraph</infon><offset>22340</offset><text>Matching and Multi-Submission Verification. Executed by  and workers, this algorithm takes as inputs the public parameter , the private key  and the ciphertext C. It then runs a zero-knowledge proof to verify the compliance of attributes and submission times between  and the worker. It then outputs accept or reject.</text></passage><passage><infon key="section_type">INTRO</infon><infon key="type">title_1</infon><offset>22658</offset><text>5. zk-MIPE Scheme</text></passage><passage><infon key="section_type">INTRO</infon><infon key="type">paragraph</infon><offset>22676</offset><text>Based on the difficult problems of bilinear pairings and a specific zero-knowledge proof protocol, we propose a zk-MIPE algorithm to deliver task-matching and multiple data submissions detection services in crowdsourcing. The scheme is roughly described in Figure 2.</text></passage><passage><infon key="section_type">INTRO</infon><infon key="type">paragraph</infon><offset>22943</offset><text>For instance, suppose the task content is to collect some physical indicators, and the task constraint is: male, 48 years old, and suffering from hypertension or arthritis. Let , ,  be three attributes, which represent gender, age and disease. Let , ,  be the specific attribute values for workers. We quantify gender and disease in task constraints, e.g., for attribute , set male = 1 and female = 2, and for attribute , set hypertension = 1, arthritis = 2, gastritis = 3. Then the restriction is  which could be further denoted as  for . The worker’s attribute vector  is defined as . To make the equation  hold if and only if the inner product  is zero, the vector  is defined as .</text></passage><passage><infon key="section_type">INTRO</infon><infon key="type">paragraph</infon><offset>23630</offset><text>Given a task ciphertext encrypted with restriction , if a worker’s attribute is: male, 45 years old, with hypertension, he will be able to decrypt the task ciphertext and be eligible to participate in the task. In the task submission stage, he could generate a proof in the form of zero-knowledge and sends it to the CS together with his collected data. In the process of verification, the CS can verify whether the worker meets the constraints and whether the submission is repeated, but cannot get the explicit attribute information of the worker. Each worker could select a random number  as his identity-based private key. For each task, he sends the calculated , where H is a one-way hash function, and the proof of the attribute private key to the CS. Through a zero-knowledge proof protocol he will prove to the CS that it is the first time to submit, and he is a suitable worker without disclosing , and the private key of . The value of S is unique for one task. If the CS detects the same S, it means duplicate submission. Moreover, if a worker chooses another random number  as his identity-based private key, since the attribute private key, generated by the authorities, is bound with the information of , he will not be able to pass the verification of matching attributes and constraints.</text></passage><passage><infon key="section_type">INTRO</infon><infon key="type">paragraph</infon><offset>24936</offset><text>Furthermore, a crowdsourcing task usually involves multiple workers. IPE just solves the problem of one to many. A ciphertext can be decrypted by many users, which is suitable for multi-user scenarios. Once the crowdsourcing requester encrypts a task, it can be decrypted by any worker who meets the requirements. For the crowdsourcing server with mighty computing power, it is also feasible to handle the task requests issued by multiple requesters in parallel. The introduction of multiple authorities further increases the scalability of the scheme.</text></passage><passage><infon key="section_type">INTRO</infon><infon key="type">paragraph</infon><offset>25489</offset><text>Specifically, the scheme is as follows.</text></passage><passage><infon key="section_type">INTRO</infon><infon key="type">paragraph</infon><offset>25529</offset><text>CA Setup. Executed by , the algorithm takes a security parameter  as input and runs  to output a symmetric group  of prime order q. It picks a random generator , a random  and a one-way hash function . Then it sets the public key as  and the system master key as .</text></passage><passage><infon key="section_type">INTRO</infon><infon key="type">paragraph</infon><offset>25794</offset><text>AA Setup. The attribute authority  randomly picks  and computes  as the public key for each attribute  belonging to . Then  publishes  and sets  as its secret key.</text></passage><passage><infon key="section_type">INTRO</infon><infon key="type">paragraph</infon><offset>25958</offset><text>Task Releasing. The algorithm, executed by the requester, takes the public key ,  (for ), description of constraints  in which  and the message  as input. It randomly chooses  and computes</text></passage><passage><infon key="section_type">INTRO</infon><infon key="type">paragraph</infon><offset>26147</offset><text>Then it outputs the task ciphertext as</text></passage><passage><infon key="section_type">INTRO</infon><infon key="type">paragraph</infon><offset>26186</offset><text>Registration. Users can either register as requesters or workers. Both  and  are responsible for generating private keys for registered users by calling the following algorithms.</text></passage><passage><infon key="section_type">INTRO</infon><infon key="type">paragraph</infon><offset>26365</offset><text>If a user registers as a worker, he/she first selected a random , computes  as the public key, and sends U to . Then  randomly picks , sets  and distributes  to  secretly. In particular,  corresponds uniquely with the worker u. Then  computes</text></passage><passage><infon key="section_type">INTRO</infon><infon key="type">paragraph</infon><offset>26608</offset><text>After that,  sends  to the worker. For each registered requester,  sends the system public key to the requester.</text></passage><passage><infon key="section_type">INTRO</infon><infon key="type">paragraph</infon><offset>26721</offset><text>After receiving  from ,  chooses a random  and computes  for the worker u. Then it creates the secret key about the attribute-based vector  as</text></passage><passage><infon key="section_type">INTRO</infon><infon key="type">paragraph</infon><offset>26864</offset><text>The algorithm outputs the worker secret key as .</text></passage><passage><infon key="section_type">INTRO</infon><infon key="type">paragraph</infon><offset>26913</offset><text>Decryption. The algorithm, executed by the worker, takes the ciphertext C and the secret key  as input. It first computes</text></passage><passage><infon key="section_type">INTRO</infon><infon key="type">paragraph</infon><offset>27035</offset><text>.</text></passage><passage><infon key="section_type">INTRO</infon><infon key="type">paragraph</infon><offset>27037</offset><text>Then it could recover message M by computing .</text></passage><passage><infon key="section_type">INTRO</infon><infon key="type">paragraph</infon><offset>27084</offset><text>When , the computation is correct since</text></passage><passage><infon key="section_type">INTRO</infon><infon key="type">paragraph</infon><offset>27124</offset><text>Thus, .</text></passage><passage><infon key="section_type">INTRO</infon><infon key="type">paragraph</infon><offset>27132</offset><text>Matching and Multi-Submission Verification. The algorithm tasks the system public, the worker secret key  and the task ciphertext C as inputs. In the interaction protocol between the worker and the platform, if  for , the worker u first computes  and sends S to . Then  checks whether S has been used once. If used,  rejects the request. If not,  will allow u to run the following zero-knowledge proof of knowledge protocol  with it to prove the knowledge of : </text></passage><passage><infon key="section_type">INTRO</infon><infon key="type">paragraph</infon><offset>27594</offset><text>To implement the protocol , u will calculate some auxiliary inputs and use some tricks to convert the protocol equivalently. Specifically, u interacts with  as follows.</text></passage><passage><infon key="section_type">INTRO</infon><infon key="type">paragraph</infon><offset>27763</offset><text>(1)  randomly picks two generators  and sends them to u, where the discrete logarithm of  with respect to  is unknown to u. Then u picks random  and computes </text></passage><passage><infon key="section_type">INTRO</infon><infon key="type">paragraph</infon><offset>27922</offset><text>After that, u returns auxiliary values  to . In this case, the protocol can be expressed as the following zero-knowledge proof of knowledge protocol  to prove the knowledge of : </text></passage><passage><infon key="section_type">INTRO</infon><infon key="type">paragraph</infon><offset>28101</offset><text>Assume that the auxiliary value calculated by u has been sent to . Next, we will describe the implementation details of the honest-verifier zero-knowledge protocol  below.</text></passage><passage><infon key="section_type">INTRO</infon><infon key="type">paragraph</infon><offset>28273</offset><text>(1) Commitment. u picks random  and computes </text></passage><passage><infon key="section_type">INTRO</infon><infon key="type">paragraph</infon><offset>28319</offset><text>Then the worker sends these auxiliary values  to .</text></passage><passage><infon key="section_type">INTRO</infon><infon key="type">paragraph</infon><offset>28370</offset><text>(2) Challenge.  picks a random  and sends  to the worker.</text></passage><passage><infon key="section_type">INTRO</infon><infon key="type">paragraph</infon><offset>28428</offset><text>(3) Response. the worker computes the following auxiliary value at first. </text></passage><passage><infon key="section_type">INTRO</infon><infon key="type">paragraph</infon><offset>28503</offset><text>Then u sends the sets of  to .</text></passage><passage><infon key="section_type">INTRO</infon><infon key="type">paragraph</infon><offset>28534</offset><text>(4) Verification.  checks whether the following equation holds: </text></passage><passage><infon key="section_type">INTRO</infon><infon key="type">paragraph</infon><offset>28599</offset><text>Through the above interactive process,  verifies whether the workers meet the constraints and submit repeatedly. If the verification is valid, CS returns the task answer submitted by the worker to the requester. As follows, we discuss the soundness of the protocol.</text></passage><passage><infon key="section_type">INTRO</infon><infon key="type">paragraph</infon><offset>28865</offset><text>Soundness of :  is a 3-move protocol, where the prover sends the commitment, the verifier chooses a random challenge, and the prover response to the challenge based on elliptic curve discrete logs. It is straightforward to show that  is of soundness, i.e., there exists an extractor , which is given rewindable black-box access to the prover, could output some witness  or a halting symbol ⊥ to indicate &quot;failure&quot;. By running  and calling , we can construct an extractor . When  outputs ⊥,  outputs ⊥ and stops. If  outputs the witness , the extractor could further output some valid witness  with the same probability. Based on the outputs of ,  computes </text></passage><passage><infon key="section_type">INTRO</infon><infon key="type">paragraph</infon><offset>29528</offset><text>We show how these values satisfy the equation relation of  as follows.</text></passage><passage><infon key="section_type">INTRO</infon><infon key="type">paragraph</infon><offset>29599</offset><text>Due to soundness of ,</text></passage><passage><infon key="section_type">INTRO</infon><infon key="type">paragraph</infon><offset>29621</offset><text>Rearranging the terms, where :</text></passage><passage><infon key="section_type">INTRO</infon><infon key="type">paragraph</infon><offset>29652</offset><text>That is </text></passage><passage><infon key="section_type">INTRO</infon><infon key="type">paragraph</infon><offset>29661</offset><text>Due to soundness of ,</text></passage><passage><infon key="section_type">INTRO</infon><infon key="type">paragraph</infon><offset>29683</offset><text>Rearranging the terms:</text></passage><passage><infon key="section_type">INTRO</infon><infon key="type">paragraph</infon><offset>29706</offset><text>That is </text></passage><passage><infon key="section_type">INTRO</infon><infon key="type">paragraph</infon><offset>29715</offset><text>Then  could output  as the witnesses satisfying . Therefore  is of soundness.</text></passage><passage><infon key="section_type">INTRO</infon><infon key="type">title_1</infon><offset>29793</offset><text>6. Security Proof</text></passage><passage><infon key="section_type">INTRO</infon><infon key="type">paragraph</infon><offset>29811</offset><text>In this section, we analyze the security of our scheme and show that it has the properties of task confidentiality, one-time authentication and anonymity.</text></passage><passage><infon key="section_type">INTRO</infon><infon key="type">paragraph</infon><offset>29966</offset><text>Assume there exists a PPT adversary  that wins the following games in our scheme, we can construct a PPT simulator  that solves the CDH problem, DDH problem or the q-DDHI problem with nonnegligible advantage.</text></passage><passage><infon key="section_type">INTRO</infon><infon key="type">paragraph</infon><offset>30175</offset><text> Assume the DDH assumption holds, then the proposed zk-MIPE scheme is IND-CPA secure. </text></passage><passage><infon key="section_type">INTRO</infon><infon key="type">paragraph</infon><offset>30262</offset><text>Against an adversary who wants to learn task content, the security algorithms are designed as follows. □</text></passage><passage><infon key="section_type">INTRO</infon><infon key="type">paragraph</infon><offset>30369</offset><text> Algorithm I </text></passage><passage><infon key="section_type">INTRO</infon><infon key="type">paragraph</infon><offset>30383</offset><text>Init. The challenger sets  and randomly chooses . It flips a coin  outside of ’s view and sets T as follows:</text></passage><passage><infon key="section_type">INTRO</infon><infon key="type">paragraph</infon><offset>30494</offset><text>If , it computes ; otherwise, it chooses a random . Then it sends  to . After that,  submits the challenge access structure  to .</text></passage><passage><infon key="section_type">INTRO</infon><infon key="type">paragraph</infon><offset>30624</offset><text>CA Setup. Given the secure parameter ,  randomly chooses  and sets . Then it gives the public key  to .</text></passage><passage><infon key="section_type">INTRO</infon><infon key="type">paragraph</infon><offset>30728</offset><text>AA Setup. randomly chooses  at first. Here, we suppose  is one of the honest attribute authority.</text></passage><passage><infon key="section_type">INTRO</infon><infon key="type">paragraph</infon><offset>30826</offset><text>For ,  sets ,  and lets  for . Then it computes  and sends the public key  to .</text></passage><passage><infon key="section_type">INTRO</infon><infon key="type">paragraph</infon><offset>30906</offset><text>For ,  sets ,  and lets  for . Then it computes  and sends  to .</text></passage><passage><infon key="section_type">INTRO</infon><infon key="type">paragraph</infon><offset>30971</offset><text>Registration Queries I. repeatedly makes registration queries with respect to attribute key value  such that . Notice that for any other honest ,  will also respond the corresponding secret key even if .</text></passage><passage><infon key="section_type">INTRO</infon><infon key="type">paragraph</infon><offset>31175</offset><text> chooses a user u and sets U as his/her public key. It sends U to . Then  chooses random , sets  and computes , . After that  computes the attribute related secret key as follows.</text></passage><passage><infon key="section_type">INTRO</infon><infon key="type">paragraph</infon><offset>31355</offset><text>For ,  chooses a random  and computes</text></passage><passage><infon key="section_type">INTRO</infon><infon key="type">paragraph</infon><offset>31393</offset><text>For ,  randomly chooses a  and computes</text></passage><passage><infon key="section_type">INTRO</infon><infon key="type">paragraph</infon><offset>31433</offset><text>Challenge. submits two challenge messages  to .  flips a coin  and computes the ciphertext as follows.</text></passage><passage><infon key="section_type">INTRO</infon><infon key="type">paragraph</infon><offset>31536</offset><text> chooses a random , sets  and computes</text></passage><passage><infon key="section_type">INTRO</infon><infon key="type">paragraph</infon><offset>31575</offset><text>, , , , , , .</text></passage><passage><infon key="section_type">INTRO</infon><infon key="type">paragraph</infon><offset>31589</offset><text>Then  computes  as follows.</text></passage><passage><infon key="section_type">INTRO</infon><infon key="type">paragraph</infon><offset>31617</offset><text>For ,  chooses a random , sets  and computes</text></passage><passage><infon key="section_type">INTRO</infon><infon key="type">paragraph</infon><offset>31662</offset><text>For ,  chooses a random , sets  and computes</text></passage><passage><infon key="section_type">INTRO</infon><infon key="type">paragraph</infon><offset>31707</offset><text>.</text></passage><passage><infon key="section_type">INTRO</infon><infon key="type">paragraph</infon><offset>31709</offset><text>Registration Queries II. submits a polynomially bounded number of registration queries with respect to attribute sets .  responds as it did in Registration Queries I.</text></passage><passage><infon key="section_type">INTRO</infon><infon key="type">paragraph</infon><offset>31876</offset><text>Guess. outputs a guess  of b. If ,  will guess T is a DDH tuple, i.e., ; otherwise, it guesses T is a random tuple, i.e., . It indicates that if the adversary wins this game with nonnegligible advantage, then the simulator will have obviously advantage in the DDH game.</text></passage><passage><infon key="section_type">INTRO</infon><infon key="type">paragraph</infon><offset>32146</offset><text> Assume the CDH assumption holds, then the proposed zk-MIPE scheme is one-time authenticate. </text></passage><passage><infon key="section_type">INTRO</infon><infon key="type">paragraph</infon><offset>32240</offset><text>Against an adversary who wants to forge a valid proof for the attributes he/she does not possess, the security algorithms are designed as follows.</text></passage><passage><infon key="section_type">INTRO</infon><infon key="type">paragraph</infon><offset>32387</offset><text>In our scheme, for each task, the value of a tag  submitted by a user u is different and unique fixed. If submitting a tag twice will be forbidden. Thus, as follows, we show that it is difficult for unsuitable workers to forge a valid authentication message based on the CDH assumption. □</text></passage><passage><infon key="section_type">INTRO</infon><infon key="type">paragraph</infon><offset>32678</offset><text> Algorithm II </text></passage><passage><infon key="section_type">INTRO</infon><infon key="type">paragraph</infon><offset>32693</offset><text>Init. The challenger sets  and randomly chooses . Then it sends  to . After that,  submits the challenge access structure and message .</text></passage><passage><infon key="section_type">INTRO</infon><infon key="type">paragraph</infon><offset>32829</offset><text>CA Setup. Running the CA setup algorithm,  does as in Algorithm I.</text></passage><passage><infon key="section_type">INTRO</infon><infon key="type">paragraph</infon><offset>32896</offset><text>AA Setup. Running the AA setup algorithm,  does as in Algorithm I.</text></passage><passage><infon key="section_type">INTRO</infon><infon key="type">paragraph</infon><offset>32963</offset><text>Registration Queries I. Running the registration algorithm,  does as in Algorithm I.</text></passage><passage><infon key="section_type">INTRO</infon><infon key="type">paragraph</infon><offset>33048</offset><text>Verification Queries I. submits a series of queries about  to . It requires that ,  and , and if not, it aborts.  runs matching and detection verification algorithm, interacts with , and generates proof transcript for .</text></passage><passage><infon key="section_type">INTRO</infon><infon key="type">paragraph</infon><offset>33268</offset><text>Forgery. For the specified ,  chooses a worker public key  and an attribute vector  such that . In this algorithm, we will not consider the privacy of . Based on ,  computes ciphertext about message . Then  interacts with  to generate a transaction of the protocol , proving that it has the private key about a suitable vector. If  outputs a valid forged proof and the protocol is sound,  could then obtain  from the forgery.</text></passage><passage><infon key="section_type">INTRO</infon><infon key="type">paragraph</infon><offset>33694</offset><text> Suppose that the q-DDHI assumption holds and the protocol  is zero-knowledge, then the proposed scheme is private and unlinkable. </text></passage><passage><infon key="section_type">INTRO</infon><infon key="type">paragraph</infon><offset>33826</offset><text>To prove the privacy of the scheme, we first summarize the zero-knowledge of .</text></passage><passage><infon key="section_type">INTRO</infon><infon key="type">paragraph</infon><offset>33905</offset><text>Zero-knowledgeness of . For the implementation of , we introduced some auxiliary inputs  and protocol . Based on the Logarithm assumption and the DDH assumption, the zero-knowledge property of  is guaranteed for honest verifier, i.e., there exists a simulator  on imputing a random challenge , the simulator could output a transcript for , ,,...,,,...,,,. For any adversary, the distribution of the output is indistinguishable. By invoking  the simulator of protocol , protocol  could further prove its zero-knowledge property. □</text></passage><passage><infon key="section_type">INTRO</infon><infon key="type">paragraph</infon><offset>34437</offset><text>Then we define the game between an adversary  and a simulator  which is given a q-DDHI instance as follows.</text></passage><passage><infon key="section_type">INTRO</infon><infon key="type">paragraph</infon><offset>34545</offset><text> Algorithm III </text></passage><passage><infon key="section_type">INTRO</infon><infon key="type">paragraph</infon><offset>34561</offset><text>Init. The challenger sets  and randomly chooses . It flips a coin . If , it computes ; otherwise, it chooses a random . After that,  submits two challenge users  with attribute vector ,  to .</text></passage><passage><infon key="section_type">INTRO</infon><infon key="type">paragraph</infon><offset>34753</offset><text>CA Setup. Given the secure parameter ,  chooses a random  and sets . Then it gives the public key  to .</text></passage><passage><infon key="section_type">INTRO</infon><infon key="type">paragraph</infon><offset>34857</offset><text>AA Setup. randomly chooses , sets ,  and lets  for . Then it computes  and sends the public key  to .</text></passage><passage><infon key="section_type">INTRO</infon><infon key="type">paragraph</infon><offset>34959</offset><text>Registration Queries I. sets  for a user  and receives the value , which may equal to  or a random element in , from the challenger initially.  issues registration queries repeatedly.  generates the secret key honestly except for . If , it aborts. Moreover, it is required that  does not make secret key queries for both  and .</text></passage><passage><infon key="section_type">INTRO</infon><infon key="type">paragraph</infon><offset>35287</offset><text>Challenge. Without loss of generality,  assumes . It flips a coin  and runs registration queries to obtain the corresponding . Then,  operates Task Releasing with an attribute vector  (with restrictions that  and ) to acquire the ciphertext . After receiving ,  issues Verification and receives a valid proof from  by applying the zero-knowledge protocol .</text></passage><passage><infon key="section_type">INTRO</infon><infon key="type">paragraph</infon><offset>35644</offset><text>Registration Queries II. submits a polynomially bounded number of registration queries repeatedly.  responds as it did in Registration Queries I.</text></passage><passage><infon key="section_type">INTRO</infon><infon key="type">paragraph</infon><offset>35790</offset><text>Guess. outputs a guess  of b. If ,  will guess T is a q-DDHI tuple, i.e., ; otherwise, it guesses T is a random tuple, i.e., . Observe that if H is a one-way pseudo-random hash function and the q-DDHI assumption holds, the adversary will know nothing about . By the zero-knowledge property of protocol , the information about the identity U, the policy  and the attribute  will not be leaked. Thus, the algorithm could protect identity privacy and submission unlinkability.</text></passage><passage><infon key="section_type">INTRO</infon><infon key="type">title_1</infon><offset>36264</offset><text>7. Performance Evaluation</text></passage><passage><infon key="section_type">INTRO</infon><infon key="type">paragraph</infon><offset>36290</offset><text>In reality, we implement the ZK-MIPE scheme on a Linux desktop with 6-core Intel(R) Xeon(R) Platinum 8369HC CPU 3.40 GHz processor and 32 GB of RAM. We use the PBC library to simulate the group operations. The symmetric elliptic curve SS512 is chosen with embedding degree 2 and a 512-bit base field.</text></passage><passage><infon key="section_type">INTRO</infon><infon key="type">paragraph</infon><offset>36591</offset><text>Table 1 and Table 2 show the comparison between our scheme and other solutions in terms of functionality and security. Compared with, zk-MIPE supports more flexible matching poly and supports worker identity privacy. Compared with, zk-MIPE provides privacy for task constraints and worker attributes. As follows, we analyze the computational complexity of each participant in our scheme and test the running time to demonstrate scheme’s effectiveness. The notations applied in the proposed scheme are summarized in Table 3. Ignoring the operations of equality comparison, hash and multiplication, the communication and computation comparison of the schemes is shown in Table 4 and Table 5.</text></passage><passage><infon key="section_type">INTRO</infon><infon key="type">paragraph</infon><offset>37283</offset><text>In our scheme, the main overhead on  and  are from system setup and user registration. In  setup, the computation complexity of  is . In  setup, the computation complexity of  is . In user registration, the computation complexity of  and  are  and , respectively. The total communication complexity of the authorities for distributing a key to a registered user is .</text></passage><passage><infon key="section_type">INTRO</infon><infon key="type">paragraph</infon><offset>37650</offset><text>The main overhead on the requester is from task releasing. In this step, the requester expresses the task requirements with vector  and encrypt the task based on  such that only the suitable worker could decrypt the task content. Meanwhile, the requester is required to blind the vector  for the  to perform matching verification in the matching and submission verification phase. The computation complexity of the requester is . The total communication complexity of the requester for task releasing is . To test the time cost of the requester, we set the number of attribute authorities as , and vary the number of attributes n in Figure 3a. In Figure 3b, we set  and vary the number of attribute authorities m.</text></passage><passage><infon key="section_type">INTRO</infon><infon key="type">paragraph</infon><offset>38364</offset><text>The main overhead on the worker is from registration, decryption and verification. As shown in Figure 4a, we set , and vary the number of attributes to test the time cost on the worker. In Figure 4b, we set  and vary the number of attribute authorities. In user registration and decryption, the computation complexity of the worker is . Although in decryption algorithm, the computing cost for the worker increases linearly with the number of attributes, most of the computing overhead can be transferred to the  by outsourcing computing. In this case, the worker only needs to carry out a small amount of calculation.</text></passage><passage><infon key="section_type">INTRO</infon><infon key="type">paragraph</infon><offset>38983</offset><text>In the stage of submission and verification, the worker and  achieve privacy-preserving matching and multi-submission verification through a zero-knowledge proof protocol. The interactive proof protocol consists of 3 rounds. The total computation and communication complexity of the worker are  and  respectively. In Figure 5, we take , and vary n as well as the number of workers k to test the time cost of verification for . The total computation and communication complexity of  are  and , respectively.</text></passage><passage><infon key="section_type">CONCL</infon><infon key="type">title_1</infon><offset>39490</offset><text>8. Conclusions</text></passage><passage><infon key="section_type">CONCL</infon><infon key="type">paragraph</infon><offset>39505</offset><text>In this paper, we present a novel multi-authorities inner-product encryption and one-time anonymous authentication scheme to realize privacy-preserving task-matching and multi-submission detection. In the system, both the user attributes and the number of submissions will be applied as authorization factors. By combining zero-knowledge proof technology and our anti-collusion multi-authorities inner-product encryption, the task confidentiality, worker attribute and unlinkability between different tasks participated by the same worker are guaranteed simultaneously. Moreover, the security of the scheme is proved based on bilinear difficulty assumptions and zero-knowledge of the protocol. For the sake of completeness, we finally analyze the function and efficiency of the scheme and show that it is practical for crowdsourcing environments. In addition to crowdsourcing privacy protection, our method could also play its role in the fields of searchable encryption, nearest neighbor search, fine-grained access control, electronic voting, electronic payment, and anonymous authentication.</text></passage><passage><infon key="section_type">CONCL</infon><infon key="type">paragraph</infon><offset>40600</offset><text>In future work, we will continue to improve the algorithm itself and try to construct privacy protection schemes in a distributed crowdsourcing scenario without a trusted third party. Furthermore, we will study the integration of cryptography and other technologies, such as machine learning technology, to further improve the flexibility and efficiency of the solution.</text></passage><passage><infon key="section_type">CONCL</infon><infon key="type">footnote</infon><offset>40971</offset><text>Publisher’s Note: MDPI stays neutral with regard to jurisdictional claims in published maps and institutional affiliations.</text></passage><passage><infon key="section_type">AUTH_CONT</infon><infon key="type">title</infon><offset>41097</offset><text>Author Contributions</text></passage><passage><infon key="section_type">AUTH_CONT</infon><infon key="type">paragraph</infon><offset>41118</offset><text>Conceptualization, J.X. and Z.L.; methodology, J.X.; validation, J.W.; formal analysis, J.X.; writing—original draft preparation, J.X. All authors have read and agreed to the published version of the manuscript.</text></passage><passage><infon key="section_type">ACK_FUND</infon><infon key="type">title</infon><offset>41332</offset><text>Funding</text></passage><passage><infon key="section_type">ACK_FUND</infon><infon key="type">paragraph</infon><offset>41340</offset><text>This work is supported by the National Natural Science Foundation of China (Grant No. 61802025), the Beijing Talents Foundation, China (Grant No. 2017000020124G062) and the Natural Science Foundation of Jiangsu Province, China (Grant No. BK20170802).</text></passage><passage><infon key="section_type">COMP_INT</infon><infon key="type">title</infon><offset>41591</offset><text>Conflicts of Interest</text></passage><passage><infon key="section_type">COMP_INT</infon><infon key="type">paragraph</infon><offset>41613</offset><text>The authors declare no conflict of interest.</text></passage><passage><infon key="section_type">REF</infon><infon key="type">title</infon><offset>41658</offset><text>References</text></passage><passage><infon key="fpage">1465</infon><infon key="lpage">1468</infon><infon key="name_0">surname:Von Ahn;given-names:L.</infon><infon key="name_1">surname:Maurer;given-names:B.</infon><infon key="name_2">surname:McMillen;given-names:C.</infon><infon key="name_3">surname:Abraham;given-names:D.</infon><infon key="name_4">surname:Blum;given-names:M.</infon><infon key="pub-id_doi">10.1126/science.1160379</infon><infon key="pub-id_pmid">18703711</infon><infon key="section_type">REF</infon><infon key="source">Science</infon><infon key="type">ref</infon><infon key="volume">321</infon><infon key="year">2008</infon><offset>41669</offset><text>Recaptcha: Human-based character recognition via Web security measures</text></passage><passage><infon key="fpage">2271</infon><infon key="lpage">2282</infon><infon key="name_0">surname:McInnis;given-names:B.</infon><infon key="name_1">surname:Cosley;given-names:D.</infon><infon key="name_2">surname:Nam;given-names:C.</infon><infon key="name_3">surname:Leshed;given-names:G.</infon><infon key="section_type">REF</infon><infon key="source">Proceedings of the CHI ’16: Proceedings of the 2016 CHI Conference on Human Factors in Computing Systems</infon><infon key="type">ref</infon><offset>41740</offset><text>Taking a HIT: Designing around rejection, mistrust, risk, and workers’ experiences in Amazon Mechanical Turk</text></passage><passage><infon key="fpage">335</infon><infon key="lpage">362</infon><infon key="name_0">surname:Liu;given-names:A.</infon><infon key="name_1">surname:Wang;given-names:W.</infon><infon key="name_2">surname:Shang;given-names:S.</infon><infon key="name_3">surname:Li;given-names:Q.</infon><infon key="name_4">surname:Zhang;given-names:X.</infon><infon key="pub-id_doi">10.1007/s10707-017-0305-2</infon><infon key="section_type">REF</infon><infon key="source">Geoinformatica</infon><infon key="type">ref</infon><infon key="volume">22</infon><infon key="year">2018</infon><offset>41851</offset><text>Efficient task assignment in spatial crowdsourcing with worker and task privacy protection</text></passage><passage><infon key="fpage">383</infon><infon key="lpage">393</infon><infon key="name_0">surname:Xu;given-names:J.</infon><infon key="name_1">surname:Cui;given-names:B.</infon><infon key="name_2">surname:Shi;given-names:R.</infon><infon key="name_3">surname:Feng;given-names:Q.</infon><infon key="pub-id_doi">10.1016/j.future.2020.05.043</infon><infon key="section_type">REF</infon><infon key="source">Future Gener. Comput. Syst.</infon><infon key="type">ref</infon><infon key="volume">112</infon><infon key="year">2020</infon><offset>41942</offset><text>Outsourced privacy-aware task allocation with flexible expressions in crowdsourcing</text></passage><passage><infon key="fpage">121</infon><infon key="lpage">130</infon><infon key="name_0">surname:Chase;given-names:M.</infon><infon key="name_1">surname:Chow;given-names:S.S.M.</infon><infon key="section_type">REF</infon><infon key="source">Proceedings of the CCS ’09: 16th ACM Conference on Computer and Communications Security</infon><infon key="type">ref</infon><offset>42026</offset><text>Improving privacy and security in multi-authority attribute-based encryption</text></passage><passage><infon key="fpage">4231</infon><infon key="lpage">4241</infon><infon key="name_0">surname:Xiong;given-names:J.</infon><infon key="name_1">surname:Ma;given-names:R.</infon><infon key="name_2">surname:Chen;given-names:L.</infon><infon key="name_3">surname:Tian;given-names:Y.</infon><infon key="name_4">surname:Li;given-names:Q.</infon><infon key="name_5">surname:Liu;given-names:X.</infon><infon key="name_6">surname:Yao;given-names:Z.</infon><infon key="pub-id_doi">10.1109/TII.2019.2948068</infon><infon key="section_type">REF</infon><infon key="source">IEEE Trans. Ind. Inform.</infon><infon key="type">ref</infon><infon key="volume">16</infon><infon key="year">2020</infon><offset>42103</offset><text>A personalized privacy protection framework for mobile crowdsensing in IIoT</text></passage><passage><infon key="fpage">130102:1</infon><infon key="lpage">130102:14</infon><infon key="name_0">surname:Lin;given-names:C.</infon><infon key="name_1">surname:He;given-names:D.</infon><infon key="name_2">surname:Zeadally;given-names:S.</infon><infon key="name_3">surname:Kumar;given-names:N.</infon><infon key="name_4">surname:Choo;given-names:K.R.</infon><infon key="pub-id_doi">10.1007/s11432-019-9893-2</infon><infon key="section_type">REF</infon><infon key="source">Sci. China Inf. Sci.</infon><infon key="type">ref</infon><infon key="volume">63</infon><infon key="year">2020</infon><offset>42179</offset><text>SecBCS: A secure and privacy-preserving blockchain-based crowdsourcing system</text></passage><passage><infon key="fpage">649</infon><infon key="lpage">666</infon><infon key="name_0">surname:Feng;given-names:W.</infon><infon key="name_1">surname:Yan;given-names:Z.</infon><infon key="pub-id_doi">10.1016/j.future.2019.01.036</infon><infon key="section_type">REF</infon><infon key="source">Future Gener. Comput. Syst.</infon><infon key="type">ref</infon><infon key="volume">95</infon><infon key="year">2019</infon><offset>42257</offset><text>MCS-chain: Decentralized and trustworthy mobile crowdsourcing based on blockchain</text></passage><passage><infon key="fpage">1251</infon><infon key="lpage">1266</infon><infon key="name_0">surname:Li;given-names:M.</infon><infon key="name_1">surname:Weng;given-names:J.</infon><infon key="name_2">surname:Yang;given-names:A.</infon><infon key="name_3">surname:Lu;given-names:W.</infon><infon key="name_4">surname:Zhang;given-names:Y.</infon><infon key="name_5">surname:Hou;given-names:L.</infon><infon key="name_6">surname:Deng;given-names:R.H.</infon><infon key="pub-id_doi">10.1109/TPDS.2018.2881735</infon><infon key="section_type">REF</infon><infon key="source">IEEE Trans. Parallel Distrib. Syst.</infon><infon key="type">ref</infon><infon key="volume">30</infon><infon key="year">2019</infon><offset>42339</offset><text>CrowdBC: A blockchain-based decentralized framework for crowdsourcing</text></passage><passage><infon key="fpage">43776</infon><infon key="lpage">43784</infon><infon key="name_0">surname:Wei;given-names:J.</infon><infon key="name_1">surname:Wang;given-names:X.</infon><infon key="name_2">surname:Li;given-names:N.</infon><infon key="name_3">surname:Yang;given-names:G.</infon><infon key="name_4">surname:Mu;given-names:Y.</infon><infon key="pub-id_doi">10.1109/ACCESS.2018.2861430</infon><infon key="section_type">REF</infon><infon key="source">IEEE Access</infon><infon key="type">ref</infon><infon key="volume">6</infon><infon key="year">2018</infon><offset>42409</offset><text>A Privacy-preserving fog computing framework for vehicular crowdsensing networks</text></passage><passage><infon key="fpage">2399</infon><infon key="lpage">2407</infon><infon key="name_0">surname:Vu;given-names:K.</infon><infon key="name_1">surname:Zheng;given-names:R.</infon><infon key="name_2">surname:Gao;given-names:J.</infon><infon key="section_type">REF</infon><infon key="source">Proceedings of the 2012 Proceedings IEEE INFOCOM</infon><infon key="type">ref</infon><offset>42490</offset><text>Efficient algorithms for k-anonymous location privacy in participatory sensing</text></passage><passage><infon key="fpage">901</infon><infon key="lpage">914</infon><infon key="name_0">surname:Andrés;given-names:M.E.</infon><infon key="name_1">surname:Bordenabe;given-names:N.E.</infon><infon key="name_2">surname:Chatzikokolakis;given-names:K.</infon><infon key="name_3">surname:Palamidessi;given-names:C.</infon><infon key="section_type">REF</infon><infon key="source">Proceedings of the 2013 ACM SIGSAC Conference on Computer &amp; Communications Security CCS’13</infon><infon key="type">ref</infon><offset>42569</offset><text>Geoindistinguishability: Differential privacy for location-based systems</text></passage><passage><infon key="fpage">934</infon><infon key="lpage">949</infon><infon key="name_0">surname:Wei;given-names:J.</infon><infon key="name_1">surname:Lin;given-names:Y.</infon><infon key="name_2">surname:Yao;given-names:X.</infon><infon key="name_3">surname:Zhang;given-names:J.</infon><infon key="pub-id_doi">10.1109/TSC.2019.2920643</infon><infon key="section_type">REF</infon><infon key="source">IEEE Trans. Services Comput.</infon><infon key="type">ref</infon><infon key="volume">16</infon><infon key="year">2019</infon><offset>42642</offset><text>Differential privacy-based location protection in spatial crowdsourcing</text></passage><passage><infon key="fpage">35</infon><infon key="lpage">47</infon><infon key="name_0">surname:Xiao;given-names:L.</infon><infon key="name_1">surname:Li;given-names:Y.</infon><infon key="name_2">surname:Han;given-names:G.</infon><infon key="name_3">surname:Dai;given-names:H.</infon><infon key="name_4">surname:Poor;given-names:H.V.</infon><infon key="pub-id_doi">10.1109/TIFS.2017.2737968</infon><infon key="section_type">REF</infon><infon key="source">IEEE Trans. Inf. Forensics Secur.</infon><infon key="type">ref</infon><infon key="volume">13</infon><infon key="year">2018</infon><offset>42714</offset><text>A secure mobile crowdsensing game with deep reinforcement learning</text></passage><passage><infon key="fpage">71</infon><infon key="lpage">79</infon><infon key="name_0">surname:Knirsch;given-names:F.</infon><infon key="name_1">surname:Unterweger;given-names:A.</infon><infon key="name_2">surname:Engle;given-names:D.</infon><infon key="pub-id_doi">10.1007/s00450-017-0348-5</infon><infon key="section_type">REF</infon><infon key="source">Comput. Sci. Res. Dev.</infon><infon key="type">ref</infon><infon key="volume">33</infon><infon key="year">2018</infon><offset>42781</offset><text>Privacy-preserving blockchain-based electric vehicle charging with dynamic tariff decisions</text></passage><passage><infon key="fpage">507</infon><infon key="lpage">520</infon><infon key="name_0">surname:Yang;given-names:D.</infon><infon key="name_1">surname:Qu;given-names:B.</infon><infon key="name_2">surname:Cudré-Mauroux;given-names:P.</infon><infon key="pub-id_doi">10.1109/TKDE.2018.2840974</infon><infon key="section_type">REF</infon><infon key="source">IEEE Trans. Konwl. Data Eng.</infon><infon key="type">ref</infon><infon key="volume">31</infon><infon key="year">2019</infon><offset>42873</offset><text>Privacy-preserving social media data publishing for personalized ranking-based recommendation</text></passage><passage><infon key="fpage">300</infon><infon key="lpage">313</infon><infon key="name_0">surname:Rantos;given-names:K.</infon><infon key="name_1">surname:Drosatos;given-names:F.</infon><infon key="name_2">surname:Demertzis;given-names:K.</infon><infon key="name_3">surname:Ilioudis;given-names:D.</infon><infon key="name_4">surname:Papanikolaou;given-names:A.</infon><infon key="section_type">REF</infon><infon key="source">Proceedings of the SECITC 2018: Innovative Security Solutions for Information Technology and Communications</infon><infon key="type">ref</infon><offset>42967</offset><text>ADvoCATE: A consent management platform for personal data processing in the IoT using blockchain technology</text></passage><passage><infon key="fpage">1546</infon><infon key="lpage">1559</infon><infon key="name_0">surname:Yi;given-names:X.</infon><infon key="name_1">surname:Paulet;given-names:R.</infon><infon key="name_2">surname:Bertino;given-names:E.</infon><infon key="name_3">surname:Varadharajan;given-names:V.</infon><infon key="pub-id_doi">10.1109/TKDE.2016.2520473</infon><infon key="section_type">REF</infon><infon key="source">IEEE Trans. Knowl. Data Eng.</infon><infon key="type">ref</infon><infon key="volume">28</infon><infon key="year">2016</infon><offset>43075</offset><text>Practical approximate k nearest neighbor queries with location and query privacy</text></passage><passage><infon key="fpage">165</infon><infon key="lpage">191</infon><infon key="name_0">surname:Agir;given-names:B.</infon><infon key="name_1">surname:Papaioannou;given-names:T.G.</infon><infon key="name_2">surname:Narendula;given-names:R.</infon><infon key="name_3">surname:Jean-pierre;given-names:K.A.</infon><infon key="pub-id_doi">10.1007/s10707-013-0193-z</infon><infon key="section_type">REF</infon><infon key="source">Geoinformatica</infon><infon key="type">ref</infon><infon key="volume">18</infon><infon key="year">2014</infon><offset>43156</offset><text>User-side adaptive protection of location privacy in participatory sensing</text></passage><passage><infon key="fpage">235</infon><infon key="lpage">247</infon><infon key="name_0">surname:Shu;given-names:J.</infon><infon key="name_1">surname:Jia;given-names:X.</infon><infon key="name_2">surname:Yang;given-names:K.</infon><infon key="name_3">surname:Wang;given-names:H.</infon><infon key="pub-id_doi">10.1109/TSC.2018.2791601</infon><infon key="section_type">REF</infon><infon key="source">IEEE Trans. Services Comp.</infon><infon key="type">ref</infon><infon key="volume">14</infon><infon key="year">2021</infon><offset>43231</offset><text>Privacy-preserving task recommendation services for crowdsourcing</text></passage><passage><infon key="fpage">62</infon><infon key="lpage">71</infon><infon key="name_0">surname:Liu;given-names:S.S.</infon><infon key="name_1">surname:Liu;given-names:A.</infon><infon key="name_2">surname:Yan;given-names:Z.</infon><infon key="name_3">surname:Feng;given-names:W.</infon><infon key="pub-id_doi">10.1016/j.vehcom.2019.03.001</infon><infon key="section_type">REF</infon><infon key="source">Veh. Commun.</infon><infon key="type">ref</infon><infon key="volume">16</infon><infon key="year">2019</infon><offset>43297</offset><text>Efficient LBS queries with mutual privacy preservation in IoV</text></passage><passage><infon key="fpage">299</infon><infon key="lpage">314</infon><infon key="name_0">surname:Yuan;given-names:D.</infon><infon key="name_1">surname:Li;given-names:Q.</infon><infon key="name_2">surname:Li;given-names:G.</infon><infon key="name_3">surname:Wang;given-names:Q.</infon><infon key="name_4">surname:Ren;given-names:K.</infon><infon key="pub-id_doi">10.1109/TIFS.2019.2913232</infon><infon key="section_type">REF</infon><infon key="source">IEEE Trans. Inform. Forensics Secur.</infon><infon key="type">ref</infon><infon key="volume">15</infon><infon key="year">2020</infon><offset>43359</offset><text>PriRadar: A privacy-preserving framework for spatial crowdsourcing</text></passage><passage><infon key="fpage">581</infon><infon key="lpage">594</infon><infon key="name_0">surname:Ni;given-names:J.</infon><infon key="name_1">surname:Zhang;given-names:K.</infon><infon key="name_2">surname:Yu;given-names:Y.</infon><infon key="name_3">surname:Lin;given-names:X.</infon><infon key="name_4">surname:Shen;given-names:X.S.</infon><infon key="pub-id_doi">10.1109/TDSC.2018.2791432</infon><infon key="section_type">REF</infon><infon key="source">IEEE Trans. Dependable Secur. Comput.</infon><infon key="type">ref</infon><infon key="volume">17</infon><infon key="year">2020</infon><offset>43426</offset><text>Providing task allocation and secure deduplication for mobile crowdsensing via fog computing</text></passage><passage><infon key="fpage">3003</infon><infon key="lpage">3013</infon><infon key="name_0">surname:Shu;given-names:J.</infon><infon key="name_1">surname:Liu;given-names:X.</infon><infon key="name_2">surname:Yang;given-names:K.</infon><infon key="name_3">surname:Zhang;given-names:Y.</infon><infon key="name_4">surname:Jia;given-names:X.</infon><infon key="name_5">surname:Deng;given-names:R.H.</infon><infon key="pub-id_doi">10.1109/JIOT.2018.2877780</infon><infon key="section_type">REF</infon><infon key="source">IEEE Internet Things J.</infon><infon key="type">ref</infon><infon key="volume">6</infon><infon key="year">2019</infon><offset>43519</offset><text>SybSub: Privacy-preserving expressive task subscription with sybil detection in crowdsourcing</text></passage><passage><infon key="fpage">853</infon><infon key="lpage">865</infon><infon key="name_0">surname:Lu;given-names:Y.</infon><infon key="name_1">surname:Tang;given-names:Q.</infon><infon key="name_2">surname:Wang;given-names:G.</infon><infon key="section_type">REF</infon><infon key="source">Proceedings of the 2018 IEEE 38th International Conference on Distributed Computing Systems (ICDCS)</infon><infon key="type">ref</infon><offset>43613</offset><text>ZebraLancer: Private and anonymous crowdsourcing system atop open blockchain</text></passage><passage><infon key="fpage">47</infon><infon key="lpage">53</infon><infon key="name_0">surname:Shamir;given-names:A.</infon><infon key="section_type">REF</infon><infon key="source">Cryptology Proceedings of CRYPTO 84</infon><infon key="type">ref</infon><infon key="year">1985</infon><offset>43690</offset><text>Identity-based cryptosystems and signature schemes</text></passage><passage><infon key="fpage">213</infon><infon key="lpage">229</infon><infon key="name_0">surname:Boneh;given-names:D.</infon><infon key="name_1">surname:Franklin;given-names:M.</infon><infon key="section_type">REF</infon><infon key="source">Proceedings of the CRYPTO 2001—21st Annual International Cryptology Conference</infon><infon key="type">ref</infon><offset>43741</offset><text>Identity-based encryption from the Weil pairing</text></passage><passage><infon key="fpage">457</infon><infon key="lpage">473</infon><infon key="name_0">surname:Sahai;given-names:A.</infon><infon key="name_1">surname:Waters;given-names:B.</infon><infon key="section_type">REF</infon><infon key="source">Proceedings of the EUROCRYPT 2005—24th Annual International Conference on the Theory and Applications of Cryptographic Techniques</infon><infon key="type">ref</infon><offset>43789</offset><text>Fuzzy identity-based encryption</text></passage><passage><infon key="fpage">2150</infon><infon key="lpage">2162</infon><infon key="name_0">surname:Han;given-names:J.</infon><infon key="name_1">surname:Susilo;given-names:W.</infon><infon key="name_2">surname:Mu;given-names:Y.</infon><infon key="name_3">surname:Yan;given-names:J.</infon><infon key="pub-id_doi">10.1109/TPDS.2012.50</infon><infon key="section_type">REF</infon><infon key="source">IEEE Trans. Parallel Distrib. Syst.</infon><infon key="type">ref</infon><infon key="volume">23</infon><infon key="year">2012</infon><offset>43821</offset><text>Privacy-preserving decentralized key-policy attribute-based encryption</text></passage><passage><infon key="fpage">2625</infon><infon key="lpage">2633</infon><infon key="name_0">surname:Jung;given-names:T.</infon><infon key="name_1">surname:Li;given-names:X.Y.</infon><infon key="name_2">surname:Wan;given-names:Z.</infon><infon key="name_3">surname:Wan;given-names:M.</infon><infon key="section_type">REF</infon><infon key="source">Proceedings of the 2013 Proceedings IEEE INFOCOM</infon><infon key="type">ref</infon><offset>43892</offset><text>Privacy preserving cloud data access with multi-authorities</text></passage><passage><infon key="fpage">190</infon><infon key="lpage">199</infon><infon key="name_0">surname:Jung;given-names:T.</infon><infon key="name_1">surname:Li;given-names:X.Y.</infon><infon key="name_2">surname:Wan;given-names:Z.</infon><infon key="name_3">surname:Wan;given-names:M.</infon><infon key="pub-id_doi">10.1109/TIFS.2014.2368352</infon><infon key="section_type">REF</infon><infon key="source">IEEE Trans. Inform. Forensics Secur.</infon><infon key="type">ref</infon><infon key="volume">10</infon><infon key="year">2015</infon><offset>43952</offset><text>Control cloud data access privilege and anonymity with fully anonymous attribute-based encryption</text></passage><passage><infon key="fpage">535</infon><infon key="lpage">554</infon><infon key="name_0">surname:Boneh;given-names:D.</infon><infon key="name_1">surname:Waters;given-names:B.</infon><infon key="section_type">REF</infon><infon key="source">Proceedings of the 4th Theory of Cryptography Conference</infon><infon key="type">ref</infon><offset>44050</offset><text>Conjunctive, subset, and range queries on encrypted Data</text></passage><passage><infon key="fpage">146</infon><infon key="lpage">162</infon><infon key="name_0">surname:Katz;given-names:J.</infon><infon key="name_1">surname:Sahai;given-names:A.</infon><infon key="name_2">surname:Waters;given-names:B.</infon><infon key="section_type">REF</infon><infon key="source">Proceedings of the EUROCRYPT 2008—Annual International Conference on the Theory and Applications of Cryptographic Techniques</infon><infon key="type">ref</infon><offset>44107</offset><text>Predicate encryption supporting disjunctions, polynomial equations, and inner products</text></passage><passage><infon key="fpage">384</infon><infon key="lpage">402</infon><infon key="name_0">surname:Attrapadung;given-names:N.</infon><infon key="name_1">surname:Libert;given-names:B.</infon><infon key="section_type">REF</infon><infon key="source">Proceedings of the PKC 2010—13th International Conference on Practice and Theory in Public Key Cryptography</infon><infon key="type">ref</infon><offset>44194</offset><text>Functional encryption for inner product: Achieving constant-size ciphertexts with adaptive security or support for negation</text></passage><passage><infon key="fpage">725</infon><infon key="lpage">771</infon><infon key="name_0">surname:Okamoto;given-names:T.</infon><infon key="name_1">surname:Takashima;given-names:K.</infon><infon key="pub-id_doi">10.1007/s10623-015-0131-1</infon><infon key="section_type">REF</infon><infon key="source">Des. Codes Cryptogr.</infon><infon key="type">ref</infon><infon key="volume">77</infon><infon key="year">2015</infon><offset>44318</offset><text>Achieving short ciphertexts or short secret-keys for adaptively secure general inner-product encryption</text></passage><passage><infon key="fpage">592</infon><infon key="lpage">609</infon><infon key="name_0">surname:Li;given-names:J.</infon><infon key="name_1">surname:Chen;given-names:X.</infon><infon key="name_2">surname:Li;given-names:J.</infon><infon key="name_3">surname:Jia;given-names:C.</infon><infon key="name_4">surname:Ma;given-names:J.</infon><infon key="name_5">surname:Lou;given-names:W.</infon><infon key="section_type">REF</infon><infon key="source">Proceedings of the ESORICS 2013—18th European Symposium on Research in Computer Security</infon><infon key="type">ref</infon><offset>44422</offset><text>Fine-grained access control system based on outsourced attribute-based encryption</text></passage><passage><infon key="fpage">2595</infon><infon key="lpage">2607</infon><infon key="name_0">surname:Yuen;given-names:T.H.</infon><infon key="name_1">surname:Liu;given-names:J.K.</infon><infon key="name_2">surname:Au;given-names:M.H.</infon><infon key="name_3">surname:Huang;given-names:X.</infon><infon key="name_4">surname:Susilo;given-names:W.</infon><infon key="name_5">surname:Zhou;given-names:J.</infon><infon key="pub-id_doi">10.1109/TC.2014.2366741</infon><infon key="section_type">REF</infon><infon key="source">IEEE Trans. Comput.</infon><infon key="type">ref</infon><infon key="volume">64</infon><infon key="year">2015</infon><offset>44504</offset><text>k-times attribute-based anonymous access control for cloud computing</text></passage><passage><infon key="fpage">94</infon><infon key="lpage">105</infon><infon key="name_0">surname:Ning;given-names:J.</infon><infon key="name_1">surname:Cao;given-names:Z.</infon><infon key="name_2">surname:Dong;given-names:X.</infon><infon key="name_3">surname:Liang;given-names:K.</infon><infon key="name_4">surname:Ma;given-names:H.</infon><infon key="name_5">surname:Wei;given-names:L.</infon><infon key="pub-id_doi">10.1109/TIFS.2017.2738601</infon><infon key="section_type">REF</infon><infon key="source">IEEE Trans. Inform. Forensics Secur.</infon><infon key="type">ref</infon><infon key="volume">13</infon><infon key="year">2018</infon><offset>44573</offset><text>Auditable σ-time outsourced attribute-based encryption for access control in cloud computing</text></passage><passage><infon key="comment">Available online: https://z.cash</infon><infon key="section_type">REF</infon><infon key="type">ref</infon><offset>44670</offset><text>Zcash</text></passage><passage><infon key="fpage">839</infon><infon key="lpage">858</infon><infon key="name_0">surname:Kosba;given-names:A.</infon><infon key="name_1">surname:Miller;given-names:A.</infon><infon key="name_2">surname:Shi;given-names:E.</infon><infon key="name_3">surname:Wen;given-names:Z.</infon><infon key="name_4">surname:Papamanthou;given-names:C.</infon><infon key="section_type">REF</infon><infon key="source">Proceedings of the IEEE Symposium on Secur. and Privacy (SP)</infon><infon key="type">ref</infon><offset>44676</offset><text>Hawk: The blockchain model of cryptography and privacy-preserving smart contracts</text></passage><passage><infon key="file">sensors-21-03036-g001.jpg</infon><infon key="id">sensors-21-03036-f001</infon><infon key="section_type">FIG</infon><infon key="type">fig_caption</infon><offset>44758</offset><text>Framework of the zk-MIPE system.</text></passage><passage><infon key="file">sensors-21-03036-g002.jpg</infon><infon key="id">sensors-21-03036-f002</infon><infon key="section_type">FIG</infon><infon key="type">fig_caption</infon><offset>44791</offset><text>Overview of the zk-MIPE Scheme.</text></passage><passage><infon key="file">sensors-21-03036-g003.jpg</infon><infon key="id">sensors-21-03036-f003</infon><infon key="section_type">FIG</infon><infon key="type">fig_caption</infon><offset>44823</offset><text>Time cost on the requester (a) under different values of n where ; (b) under different values of m where .</text></passage><passage><infon key="file">sensors-21-03036-g004.jpg</infon><infon key="id">sensors-21-03036-f004</infon><infon key="section_type">FIG</infon><infon key="type">fig_caption</infon><offset>44930</offset><text>Time cost on the worker (a) under different values of n where ; (b) under different values of m where .</text></passage><passage><infon key="file">sensors-21-03036-g005.jpg</infon><infon key="id">sensors-21-03036-f005</infon><infon key="section_type">FIG</infon><infon key="type">fig_caption</infon><offset>45034</offset><text>Time cost on  (a) under different values of n where  and ; (b) under different values of k where  and .</text></passage><passage><infon key="file">sensors-21-03036-t001.xml</infon><infon key="id">sensors-21-03036-t001</infon><infon key="section_type">TABLE</infon><infon key="type">table_caption</infon><offset>45138</offset><text>Functional comparison.</text></passage><passage><infon key="file">sensors-21-03036-t001.xml</infon><infon key="id">sensors-21-03036-t001</infon><infon key="section_type">TABLE</infon><infon key="type">table</infon><infon key="xml">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
&lt;table frame=&quot;hsides&quot; rules=&quot;groups&quot;&gt;&lt;thead&gt;&lt;tr&gt;&lt;th align=&quot;center&quot; valign=&quot;middle&quot; style=&quot;border-bottom:solid thin;border-top:solid thin&quot; rowspan=&quot;1&quot; colspan=&quot;1&quot;&gt;Scheme&lt;/th&gt;&lt;th align=&quot;center&quot; valign=&quot;middle&quot; style=&quot;border-bottom:solid thin;border-top:solid thin&quot; rowspan=&quot;1&quot; colspan=&quot;1&quot;&gt;Authority&lt;/th&gt;&lt;th align=&quot;center&quot; valign=&quot;middle&quot; style=&quot;border-bottom:solid thin;border-top:solid thin&quot; rowspan=&quot;1&quot; colspan=&quot;1&quot;&gt;Matching Policy&lt;/th&gt;&lt;th align=&quot;center&quot; valign=&quot;middle&quot; style=&quot;border-bottom:solid thin;border-top:solid thin&quot; rowspan=&quot;1&quot; colspan=&quot;1&quot;&gt;Repetition Detection&lt;/th&gt;&lt;th align=&quot;center&quot; valign=&quot;middle&quot; style=&quot;border-bottom:solid thin;border-top:solid thin&quot; rowspan=&quot;1&quot; colspan=&quot;1&quot;&gt;Multi-Keyword&lt;/th&gt;&lt;/tr&gt;&lt;/thead&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td align=&quot;center&quot; valign=&quot;middle&quot; rowspan=&quot;1&quot; colspan=&quot;1&quot;&gt;Fo-SDD&lt;/td&gt;&lt;td align=&quot;center&quot; valign=&quot;middle&quot; rowspan=&quot;1&quot; colspan=&quot;1&quot;&gt;Single&lt;/td&gt;&lt;td align=&quot;center&quot; valign=&quot;middle&quot; rowspan=&quot;1&quot; colspan=&quot;1&quot;&gt;Unlimited&lt;/td&gt;&lt;td align=&quot;center&quot; valign=&quot;middle&quot; rowspan=&quot;1&quot; colspan=&quot;1&quot;&gt;×&lt;/td&gt;&lt;td align=&quot;center&quot; valign=&quot;middle&quot; rowspan=&quot;1&quot; colspan=&quot;1&quot;&gt;×&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td align=&quot;center&quot; valign=&quot;middle&quot; rowspan=&quot;1&quot; colspan=&quot;1&quot;&gt;SybSub&lt;/td&gt;&lt;td align=&quot;center&quot; valign=&quot;middle&quot; rowspan=&quot;1&quot; colspan=&quot;1&quot;&gt;Single&lt;/td&gt;&lt;td align=&quot;center&quot; valign=&quot;middle&quot; rowspan=&quot;1&quot; colspan=&quot;1&quot;&gt;Range&lt;/td&gt;&lt;td align=&quot;center&quot; valign=&quot;middle&quot; rowspan=&quot;1&quot; colspan=&quot;1&quot;&gt;×&lt;/td&gt;&lt;td align=&quot;center&quot; valign=&quot;middle&quot; rowspan=&quot;1&quot; colspan=&quot;1&quot;&gt;×&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td align=&quot;center&quot; valign=&quot;middle&quot; rowspan=&quot;1&quot; colspan=&quot;1&quot;&gt;ZebraLancer&lt;/td&gt;&lt;td align=&quot;center&quot; valign=&quot;middle&quot; rowspan=&quot;1&quot; colspan=&quot;1&quot;&gt;Distribute&lt;/td&gt;&lt;td align=&quot;center&quot; valign=&quot;middle&quot; rowspan=&quot;1&quot; colspan=&quot;1&quot;&gt;Unlimited&lt;/td&gt;&lt;td align=&quot;center&quot; valign=&quot;middle&quot; rowspan=&quot;1&quot; colspan=&quot;1&quot;&gt;×&lt;/td&gt;&lt;td align=&quot;center&quot; valign=&quot;middle&quot; rowspan=&quot;1&quot; colspan=&quot;1&quot;&gt;×&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td align=&quot;center&quot; valign=&quot;middle&quot; style=&quot;border-bottom:solid thin&quot; rowspan=&quot;1&quot; colspan=&quot;1&quot;&gt;zk-MIPE&lt;/td&gt;&lt;td align=&quot;center&quot; valign=&quot;middle&quot; style=&quot;border-bottom:solid thin&quot; rowspan=&quot;1&quot; colspan=&quot;1&quot;&gt;Multiple&lt;/td&gt;&lt;td align=&quot;center&quot; valign=&quot;middle&quot; style=&quot;border-bottom:solid thin&quot; rowspan=&quot;1&quot; colspan=&quot;1&quot;&gt;Inner-Product&lt;/td&gt;&lt;td align=&quot;center&quot; valign=&quot;middle&quot; style=&quot;border-bottom:solid thin&quot; rowspan=&quot;1&quot; colspan=&quot;1&quot;&gt;×&lt;/td&gt;&lt;td align=&quot;center&quot; valign=&quot;middle&quot; style=&quot;border-bottom:solid thin&quot; rowspan=&quot;1&quot; colspan=&quot;1&quot;&gt;×&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;
</infon><offset>45161</offset><text>Scheme	Authority	Matching Policy	Repetition Detection	Multi-Keyword	 	Fo-SDD	Single	Unlimited	×	×	 	SybSub	Single	Range	×	×	 	ZebraLancer	Distribute	Unlimited	×	×	 	zk-MIPE	Multiple	Inner-Product	×	×	 	</text></passage><passage><infon key="file">sensors-21-03036-t002.xml</infon><infon key="id">sensors-21-03036-t002</infon><infon key="section_type">TABLE</infon><infon key="type">table_caption</infon><offset>45372</offset><text>Security comparison.</text></passage><passage><infon key="file">sensors-21-03036-t002.xml</infon><infon key="id">sensors-21-03036-t002</infon><infon key="section_type">TABLE</infon><infon key="type">table</infon><infon key="xml">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
&lt;table frame=&quot;hsides&quot; rules=&quot;groups&quot;&gt;&lt;thead&gt;&lt;tr&gt;&lt;th align=&quot;center&quot; valign=&quot;middle&quot; style=&quot;border-bottom:solid thin;border-top:solid thin&quot; rowspan=&quot;1&quot; colspan=&quot;1&quot;&gt;Scheme&lt;/th&gt;&lt;th align=&quot;center&quot; valign=&quot;middle&quot; style=&quot;border-bottom:solid thin;border-top:solid thin&quot; rowspan=&quot;1&quot; colspan=&quot;1&quot;&gt;Task Content Privacy&lt;/th&gt;&lt;th align=&quot;center&quot; valign=&quot;middle&quot; style=&quot;border-bottom:solid thin;border-top:solid thin&quot; rowspan=&quot;1&quot; colspan=&quot;1&quot;&gt;Task Constraint Privacy&lt;/th&gt;&lt;th align=&quot;center&quot; valign=&quot;middle&quot; style=&quot;border-bottom:solid thin;border-top:solid thin&quot; rowspan=&quot;1&quot; colspan=&quot;1&quot;&gt;Identity Privacy&lt;/th&gt;&lt;th align=&quot;center&quot; valign=&quot;middle&quot; style=&quot;border-bottom:solid thin;border-top:solid thin&quot; rowspan=&quot;1&quot; colspan=&quot;1&quot;&gt;Attribute Privacy&lt;/th&gt;&lt;/tr&gt;&lt;/thead&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td align=&quot;center&quot; valign=&quot;middle&quot; rowspan=&quot;1&quot; colspan=&quot;1&quot;&gt;Fo-SDD&lt;/td&gt;&lt;td align=&quot;center&quot; valign=&quot;middle&quot; rowspan=&quot;1&quot; colspan=&quot;1&quot;&gt;
&lt;italic&gt;√&lt;/italic&gt;
&lt;/td&gt;&lt;td align=&quot;center&quot; valign=&quot;middle&quot; rowspan=&quot;1&quot; colspan=&quot;1&quot;&gt;×&lt;/td&gt;&lt;td align=&quot;center&quot; valign=&quot;middle&quot; rowspan=&quot;1&quot; colspan=&quot;1&quot;&gt;×&lt;/td&gt;&lt;td align=&quot;center&quot; valign=&quot;middle&quot; rowspan=&quot;1&quot; colspan=&quot;1&quot;&gt;×&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td align=&quot;center&quot; valign=&quot;middle&quot; rowspan=&quot;1&quot; colspan=&quot;1&quot;&gt;SybSub&lt;/td&gt;&lt;td align=&quot;center&quot; valign=&quot;middle&quot; rowspan=&quot;1&quot; colspan=&quot;1&quot;&gt;×&lt;/td&gt;&lt;td align=&quot;center&quot; valign=&quot;middle&quot; rowspan=&quot;1&quot; colspan=&quot;1&quot;&gt;
&lt;italic&gt;√&lt;/italic&gt;
&lt;/td&gt;&lt;td align=&quot;center&quot; valign=&quot;middle&quot; rowspan=&quot;1&quot; colspan=&quot;1&quot;&gt;×&lt;/td&gt;&lt;td align=&quot;center&quot; valign=&quot;middle&quot; rowspan=&quot;1&quot; colspan=&quot;1&quot;&gt;
&lt;italic&gt;√&lt;/italic&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td align=&quot;center&quot; valign=&quot;middle&quot; rowspan=&quot;1&quot; colspan=&quot;1&quot;&gt;ZebraLancer&lt;/td&gt;&lt;td align=&quot;center&quot; valign=&quot;middle&quot; rowspan=&quot;1&quot; colspan=&quot;1&quot;&gt;×&lt;/td&gt;&lt;td align=&quot;center&quot; valign=&quot;middle&quot; rowspan=&quot;1&quot; colspan=&quot;1&quot;&gt;×&lt;/td&gt;&lt;td align=&quot;center&quot; valign=&quot;middle&quot; rowspan=&quot;1&quot; colspan=&quot;1&quot;&gt;
&lt;italic&gt;√&lt;/italic&gt;
&lt;/td&gt;&lt;td align=&quot;center&quot; valign=&quot;middle&quot; rowspan=&quot;1&quot; colspan=&quot;1&quot;&gt;×&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td align=&quot;center&quot; valign=&quot;middle&quot; style=&quot;border-bottom:solid thin&quot; rowspan=&quot;1&quot; colspan=&quot;1&quot;&gt;zk-MIPE&lt;/td&gt;&lt;td align=&quot;center&quot; valign=&quot;middle&quot; style=&quot;border-bottom:solid thin&quot; rowspan=&quot;1&quot; colspan=&quot;1&quot;&gt;
&lt;italic&gt;√&lt;/italic&gt;
&lt;/td&gt;&lt;td align=&quot;center&quot; valign=&quot;middle&quot; style=&quot;border-bottom:solid thin&quot; rowspan=&quot;1&quot; colspan=&quot;1&quot;&gt;
&lt;italic&gt;√&lt;/italic&gt;
&lt;/td&gt;&lt;td align=&quot;center&quot; valign=&quot;middle&quot; style=&quot;border-bottom:solid thin&quot; rowspan=&quot;1&quot; colspan=&quot;1&quot;&gt;
&lt;italic&gt;√&lt;/italic&gt;
&lt;/td&gt;&lt;td align=&quot;center&quot; valign=&quot;middle&quot; style=&quot;border-bottom:solid thin&quot; rowspan=&quot;1&quot; colspan=&quot;1&quot;&gt;
&lt;italic&gt;√&lt;/italic&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;
</infon><offset>45393</offset><text>Scheme	Task Content Privacy	Task Constraint Privacy	Identity Privacy	Attribute Privacy	 	Fo-SDD	√	×	×	×	 	SybSub	×	√	×	√	 	ZebraLancer	×	×	√	×	 	zk-MIPE	√	√	√	√	 	</text></passage><passage><infon key="file">sensors-21-03036-t003.xml</infon><infon key="id">sensors-21-03036-t003</infon><infon key="section_type">TABLE</infon><infon key="type">table_caption</infon><offset>45581</offset><text>Notations in Fo-SDD, SybSub, ZebraLancer and zk-MIPE.</text></passage><passage><infon key="file">sensors-21-03036-t003.xml</infon><infon key="id">sensors-21-03036-t003</infon><infon key="section_type">TABLE</infon><infon key="type">table</infon><infon key="xml">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
&lt;table xmlns:mml=&quot;http://www.w3.org/1998/Math/MathML&quot; frame=&quot;hsides&quot; rules=&quot;groups&quot;&gt;&lt;thead&gt;&lt;tr&gt;&lt;th align=&quot;center&quot; valign=&quot;middle&quot; style=&quot;border-bottom:solid thin;border-top:solid thin&quot; rowspan=&quot;1&quot; colspan=&quot;1&quot;&gt;Notations&lt;/th&gt;&lt;th align=&quot;left&quot; valign=&quot;middle&quot; style=&quot;border-bottom:solid thin;border-top:solid thin&quot; rowspan=&quot;1&quot; colspan=&quot;1&quot;&gt;Description&lt;/th&gt;&lt;/tr&gt;&lt;/thead&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td align=&quot;center&quot; valign=&quot;middle&quot; rowspan=&quot;1&quot; colspan=&quot;1&quot;&gt;
&lt;inline-formula&gt;&lt;mml:math id=&quot;mm515&quot;&gt;&lt;mml:mrow&gt;&lt;mml:mrow&gt;&lt;mml:msub&gt;&lt;mml:mi&gt;E&lt;/mml:mi&gt;&lt;mml:mn&gt;1&lt;/mml:mn&gt;&lt;/mml:msub&gt;&lt;mml:mo&gt;,&lt;/mml:mo&gt;&lt;mml:msub&gt;&lt;mml:mi&gt;E&lt;/mml:mi&gt;&lt;mml:mi&gt;T&lt;/mml:mi&gt;&lt;/mml:msub&gt;&lt;/mml:mrow&gt;&lt;/mml:mrow&gt;&lt;/mml:math&gt;&lt;/inline-formula&gt;
&lt;/td&gt;&lt;td align=&quot;left&quot; valign=&quot;middle&quot; rowspan=&quot;1&quot; colspan=&quot;1&quot;&gt;Exponentiation on &lt;inline-formula&gt;&lt;mml:math id=&quot;mm516&quot;&gt;&lt;mml:mrow&gt;&lt;mml:msub&gt;&lt;mml:mi&gt;G&lt;/mml:mi&gt;&lt;mml:mn&gt;1&lt;/mml:mn&gt;&lt;/mml:msub&gt;&lt;/mml:mrow&gt;&lt;/mml:math&gt;&lt;/inline-formula&gt; and &lt;inline-formula&gt;&lt;mml:math id=&quot;mm517&quot;&gt;&lt;mml:mrow&gt;&lt;mml:msub&gt;&lt;mml:mi&gt;G&lt;/mml:mi&gt;&lt;mml:mi&gt;T&lt;/mml:mi&gt;&lt;/mml:msub&gt;&lt;/mml:mrow&gt;&lt;/mml:math&gt;&lt;/inline-formula&gt; respectively&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td align=&quot;center&quot; valign=&quot;middle&quot; rowspan=&quot;1&quot; colspan=&quot;1&quot;&gt;
&lt;inline-formula&gt;&lt;mml:math id=&quot;mm518&quot;&gt;&lt;mml:mrow&gt;&lt;mml:msub&gt;&lt;mml:mi&gt;E&lt;/mml:mi&gt;&lt;mml:mn&gt;2&lt;/mml:mn&gt;&lt;/mml:msub&gt;&lt;/mml:mrow&gt;&lt;/mml:math&gt;&lt;/inline-formula&gt;
&lt;/td&gt;&lt;td align=&quot;left&quot; valign=&quot;middle&quot; rowspan=&quot;1&quot; colspan=&quot;1&quot;&gt;Exponentiation in Paillier encryption&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td align=&quot;center&quot; valign=&quot;middle&quot; rowspan=&quot;1&quot; colspan=&quot;1&quot;&gt;
&lt;italic&gt;P&lt;/italic&gt;
&lt;/td&gt;&lt;td align=&quot;left&quot; valign=&quot;middle&quot; rowspan=&quot;1&quot; colspan=&quot;1&quot;&gt;Pairing on &lt;inline-formula&gt;&lt;mml:math id=&quot;mm519&quot;&gt;&lt;mml:mrow&gt;&lt;mml:mrow&gt;&lt;mml:mrow&gt;&lt;mml:mo stretchy=&quot;false&quot;&gt;(&lt;/mml:mo&gt;&lt;mml:msub&gt;&lt;mml:mi&gt;G&lt;/mml:mi&gt;&lt;mml:mn&gt;1&lt;/mml:mn&gt;&lt;/mml:msub&gt;&lt;mml:mo&gt;,&lt;/mml:mo&gt;&lt;mml:msub&gt;&lt;mml:mi&gt;G&lt;/mml:mi&gt;&lt;mml:mn&gt;1&lt;/mml:mn&gt;&lt;/mml:msub&gt;&lt;mml:mo stretchy=&quot;false&quot;&gt;)&lt;/mml:mo&gt;&lt;/mml:mrow&gt;&lt;mml:mo&gt;→&lt;/mml:mo&gt;&lt;mml:msub&gt;&lt;mml:mi&gt;G&lt;/mml:mi&gt;&lt;mml:mi&gt;T&lt;/mml:mi&gt;&lt;/mml:msub&gt;&lt;/mml:mrow&gt;&lt;/mml:mrow&gt;&lt;/mml:math&gt;&lt;/inline-formula&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td align=&quot;center&quot; valign=&quot;middle&quot; rowspan=&quot;1&quot; colspan=&quot;1&quot;&gt;
&lt;inline-formula&gt;&lt;mml:math id=&quot;mm520&quot;&gt;&lt;mml:mrow&gt;&lt;mml:mrow&gt;&lt;mml:msub&gt;&lt;mml:mover accent=&quot;true&quot;&gt;&lt;mml:mi&gt;C&lt;/mml:mi&gt;&lt;mml:mo&gt;˜&lt;/mml:mo&gt;&lt;/mml:mover&gt;&lt;mml:mi&gt;s&lt;/mml:mi&gt;&lt;/mml:msub&gt;&lt;mml:mo&gt;,&lt;/mml:mo&gt;&lt;mml:msub&gt;&lt;mml:mover accent=&quot;true&quot;&gt;&lt;mml:mi&gt;C&lt;/mml:mi&gt;&lt;mml:mo&gt;˜&lt;/mml:mo&gt;&lt;/mml:mover&gt;&lt;mml:mi&gt;a&lt;/mml:mi&gt;&lt;/mml:msub&gt;&lt;/mml:mrow&gt;&lt;/mml:mrow&gt;&lt;/mml:math&gt;&lt;/inline-formula&gt;
&lt;/td&gt;&lt;td align=&quot;left&quot; valign=&quot;middle&quot; rowspan=&quot;1&quot; colspan=&quot;1&quot;&gt;Ciphertext based on AES and public key encryption, respectively&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td align=&quot;center&quot; valign=&quot;middle&quot; rowspan=&quot;1&quot; colspan=&quot;1&quot;&gt;
&lt;inline-formula&gt;&lt;mml:math id=&quot;mm521&quot;&gt;&lt;mml:mrow&gt;&lt;mml:msub&gt;&lt;mml:mi&gt;C&lt;/mml:mi&gt;&lt;mml:mrow&gt;&lt;mml:mi&gt;s&lt;/mml:mi&gt;&lt;mml:mi&gt;c&lt;/mml:mi&gt;&lt;/mml:mrow&gt;&lt;/mml:msub&gt;&lt;/mml:mrow&gt;&lt;/mml:math&gt;&lt;/inline-formula&gt;
&lt;/td&gt;&lt;td align=&quot;left&quot; valign=&quot;middle&quot; rowspan=&quot;1&quot; colspan=&quot;1&quot;&gt;Coding a task into a smart contract&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td align=&quot;center&quot; valign=&quot;middle&quot; rowspan=&quot;1&quot; colspan=&quot;1&quot;&gt;
&lt;inline-formula&gt;&lt;mml:math id=&quot;mm522&quot;&gt;&lt;mml:mrow&gt;&lt;mml:mrow&gt;&lt;mml:msub&gt;&lt;mml:mover accent=&quot;true&quot;&gt;&lt;mml:mi&gt;E&lt;/mml:mi&gt;&lt;mml:mo&gt;˜&lt;/mml:mo&gt;&lt;/mml:mover&gt;&lt;mml:mi&gt;s&lt;/mml:mi&gt;&lt;/mml:msub&gt;&lt;mml:mo&gt;,&lt;/mml:mo&gt;&lt;mml:msub&gt;&lt;mml:mover accent=&quot;true&quot;&gt;&lt;mml:mi&gt;E&lt;/mml:mi&gt;&lt;mml:mo&gt;˜&lt;/mml:mo&gt;&lt;/mml:mover&gt;&lt;mml:mi&gt;a&lt;/mml:mi&gt;&lt;/mml:msub&gt;&lt;mml:mo&gt;,&lt;/mml:mo&gt;&lt;mml:msub&gt;&lt;mml:mover accent=&quot;true&quot;&gt;&lt;mml:mi&gt;E&lt;/mml:mi&gt;&lt;mml:mo&gt;˜&lt;/mml:mo&gt;&lt;/mml:mover&gt;&lt;mml:mi&gt;P&lt;/mml:mi&gt;&lt;/mml:msub&gt;&lt;/mml:mrow&gt;&lt;/mml:mrow&gt;&lt;/mml:math&gt;&lt;/inline-formula&gt;
&lt;/td&gt;&lt;td align=&quot;left&quot; valign=&quot;middle&quot; rowspan=&quot;1&quot; colspan=&quot;1&quot;&gt;Symmetric encryption, asymmetric encryption and Paillier encryption&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td align=&quot;center&quot; valign=&quot;middle&quot; rowspan=&quot;1&quot; colspan=&quot;1&quot;&gt;
&lt;inline-formula&gt;&lt;mml:math id=&quot;mm523&quot;&gt;&lt;mml:mrow&gt;&lt;mml:mrow&gt;&lt;mml:msub&gt;&lt;mml:mover accent=&quot;true&quot;&gt;&lt;mml:mi&gt;D&lt;/mml:mi&gt;&lt;mml:mo&gt;˜&lt;/mml:mo&gt;&lt;/mml:mover&gt;&lt;mml:mi&gt;s&lt;/mml:mi&gt;&lt;/mml:msub&gt;&lt;mml:mo&gt;,&lt;/mml:mo&gt;&lt;mml:msub&gt;&lt;mml:mover accent=&quot;true&quot;&gt;&lt;mml:mi&gt;D&lt;/mml:mi&gt;&lt;mml:mo&gt;˜&lt;/mml:mo&gt;&lt;/mml:mover&gt;&lt;mml:mi&gt;a&lt;/mml:mi&gt;&lt;/mml:msub&gt;&lt;mml:mo&gt;,&lt;/mml:mo&gt;&lt;mml:msub&gt;&lt;mml:mover accent=&quot;true&quot;&gt;&lt;mml:mi&gt;D&lt;/mml:mi&gt;&lt;mml:mo&gt;˜&lt;/mml:mo&gt;&lt;/mml:mover&gt;&lt;mml:mi&gt;P&lt;/mml:mi&gt;&lt;/mml:msub&gt;&lt;/mml:mrow&gt;&lt;/mml:mrow&gt;&lt;/mml:math&gt;&lt;/inline-formula&gt;
&lt;/td&gt;&lt;td align=&quot;left&quot; valign=&quot;middle&quot; rowspan=&quot;1&quot; colspan=&quot;1&quot;&gt;Symmetric decryption, asymmetric decryption and Paillier decryption&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td align=&quot;center&quot; valign=&quot;middle&quot; rowspan=&quot;1&quot; colspan=&quot;1&quot;&gt;
&lt;inline-formula&gt;&lt;mml:math id=&quot;mm524&quot;&gt;&lt;mml:mrow&gt;&lt;mml:mrow&gt;&lt;mml:msub&gt;&lt;mml:mi&gt;l&lt;/mml:mi&gt;&lt;mml:mn&gt;1&lt;/mml:mn&gt;&lt;/mml:msub&gt;&lt;mml:mo&gt;,&lt;/mml:mo&gt;&lt;mml:msub&gt;&lt;mml:mi&gt;l&lt;/mml:mi&gt;&lt;mml:mn&gt;2&lt;/mml:mn&gt;&lt;/mml:msub&gt;&lt;mml:mo&gt;,&lt;/mml:mo&gt;&lt;mml:msub&gt;&lt;mml:mi&gt;l&lt;/mml:mi&gt;&lt;mml:mn&gt;3&lt;/mml:mn&gt;&lt;/mml:msub&gt;&lt;/mml:mrow&gt;&lt;/mml:mrow&gt;&lt;/mml:math&gt;&lt;/inline-formula&gt;
&lt;/td&gt;&lt;td align=&quot;left&quot; valign=&quot;middle&quot; rowspan=&quot;1&quot; colspan=&quot;1&quot;&gt;Bit length of task, attribute and smart contract, respectively&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td align=&quot;center&quot; valign=&quot;middle&quot; rowspan=&quot;1&quot; colspan=&quot;1&quot;&gt;
&lt;italic&gt;M&lt;/italic&gt;
&lt;/td&gt;&lt;td align=&quot;left&quot; valign=&quot;middle&quot; rowspan=&quot;1&quot; colspan=&quot;1&quot;&gt;NP machine used to prove membership of an instance &lt;italic&gt;x&lt;/italic&gt; in a given NP language &lt;italic&gt;L&lt;/italic&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td align=&quot;center&quot; valign=&quot;middle&quot; rowspan=&quot;1&quot; colspan=&quot;1&quot;&gt;
&lt;inline-formula&gt;&lt;mml:math id=&quot;mm525&quot;&gt;&lt;mml:mrow&gt;&lt;mml:mrow&gt;&lt;mml:msub&gt;&lt;mml:mi&gt;t&lt;/mml:mi&gt;&lt;mml:mi&gt;M&lt;/mml:mi&gt;&lt;/mml:msub&gt;&lt;mml:mo&gt;,&lt;/mml:mo&gt;&lt;mml:msub&gt;&lt;mml:mi&gt;s&lt;/mml:mi&gt;&lt;mml:mi&gt;M&lt;/mml:mi&gt;&lt;/mml:msub&gt;&lt;/mml:mrow&gt;&lt;/mml:mrow&gt;&lt;/mml:math&gt;&lt;/inline-formula&gt;
&lt;/td&gt;&lt;td align=&quot;left&quot; valign=&quot;middle&quot; rowspan=&quot;1&quot; colspan=&quot;1&quot;&gt;Operations and computation space of &lt;italic&gt;M&lt;/italic&gt; for the instance &lt;italic&gt;x&lt;/italic&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td align=&quot;center&quot; valign=&quot;middle&quot; rowspan=&quot;1&quot; colspan=&quot;1&quot;&gt;poly&lt;/td&gt;&lt;td align=&quot;left&quot; valign=&quot;middle&quot; rowspan=&quot;1&quot; colspan=&quot;1&quot;&gt;Universal polynomial&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td align=&quot;center&quot; valign=&quot;middle&quot; rowspan=&quot;1&quot; colspan=&quot;1&quot;&gt;
&lt;inline-formula&gt;&lt;mml:math id=&quot;mm526&quot;&gt;&lt;mml:mrow&gt;&lt;mml:mi&gt;λ&lt;/mml:mi&gt;&lt;/mml:mrow&gt;&lt;/mml:math&gt;&lt;/inline-formula&gt;
&lt;/td&gt;&lt;td align=&quot;left&quot; valign=&quot;middle&quot; rowspan=&quot;1&quot; colspan=&quot;1&quot;&gt;Security parameter&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td align=&quot;center&quot; valign=&quot;middle&quot; rowspan=&quot;1&quot; colspan=&quot;1&quot;&gt;
&lt;italic&gt;N&lt;/italic&gt;
&lt;/td&gt;&lt;td align=&quot;left&quot; valign=&quot;middle&quot; rowspan=&quot;1&quot; colspan=&quot;1&quot;&gt;Product of two primes&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td align=&quot;center&quot; valign=&quot;middle&quot; rowspan=&quot;1&quot; colspan=&quot;1&quot;&gt;
&lt;italic&gt;m&lt;/italic&gt;
&lt;/td&gt;&lt;td align=&quot;left&quot; valign=&quot;middle&quot; rowspan=&quot;1&quot; colspan=&quot;1&quot;&gt;Number of attribute authorities&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td align=&quot;center&quot; valign=&quot;middle&quot; rowspan=&quot;1&quot; colspan=&quot;1&quot;&gt;
&lt;italic&gt;n&lt;/italic&gt;
&lt;/td&gt;&lt;td align=&quot;left&quot; valign=&quot;middle&quot; rowspan=&quot;1&quot; colspan=&quot;1&quot;&gt;Dimension of the attribute-based vector&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td align=&quot;center&quot; valign=&quot;middle&quot; rowspan=&quot;1&quot; colspan=&quot;1&quot;&gt;
&lt;italic&gt;l&lt;/italic&gt;
&lt;/td&gt;&lt;td align=&quot;left&quot; valign=&quot;middle&quot; rowspan=&quot;1&quot; colspan=&quot;1&quot;&gt;Number of attributes managed by each authority&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td align=&quot;center&quot; valign=&quot;middle&quot; style=&quot;border-bottom:solid thin&quot; rowspan=&quot;1&quot; colspan=&quot;1&quot;&gt;
&lt;italic&gt;k&lt;/italic&gt;
&lt;/td&gt;&lt;td align=&quot;left&quot; valign=&quot;middle&quot; style=&quot;border-bottom:solid thin&quot; rowspan=&quot;1&quot; colspan=&quot;1&quot;&gt;Number of suitable workers&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;
</infon><offset>45635</offset><text>Notations	Description	 		Exponentiation on  and  respectively	 		Exponentiation in Paillier encryption	 	P	Pairing on 	 		Ciphertext based on AES and public key encryption, respectively	 		Coding a task into a smart contract	 		Symmetric encryption, asymmetric encryption and Paillier encryption	 		Symmetric decryption, asymmetric decryption and Paillier decryption	 		Bit length of task, attribute and smart contract, respectively	 	M	NP machine used to prove membership of an instance x in a given NP language L	 		Operations and computation space of M for the instance x	 	poly	Universal polynomial	 		Security parameter	 	N	Product of two primes	 	m	Number of attribute authorities	 	n	Dimension of the attribute-based vector	 	l	Number of attributes managed by each authority	 	k	Number of suitable workers	 	</text></passage><passage><infon key="file">sensors-21-03036-t004.xml</infon><infon key="id">sensors-21-03036-t004</infon><infon key="section_type">TABLE</infon><infon key="type">table_caption</infon><offset>46451</offset><text>Communication cost.</text></passage><passage><infon key="file">sensors-21-03036-t004.xml</infon><infon key="id">sensors-21-03036-t004</infon><infon key="section_type">TABLE</infon><infon key="type">table</infon><infon key="xml">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
&lt;table xmlns:mml=&quot;http://www.w3.org/1998/Math/MathML&quot; frame=&quot;hsides&quot; rules=&quot;groups&quot;&gt;&lt;thead&gt;&lt;tr&gt;&lt;th align=&quot;center&quot; valign=&quot;middle&quot; style=&quot;border-bottom:solid thin;border-top:solid thin&quot; rowspan=&quot;1&quot; colspan=&quot;1&quot;&gt;Scheme&lt;/th&gt;&lt;th align=&quot;center&quot; valign=&quot;middle&quot; style=&quot;border-bottom:solid thin;border-top:solid thin&quot; rowspan=&quot;1&quot; colspan=&quot;1&quot;&gt;Requester/Publisher&lt;/th&gt;&lt;th align=&quot;center&quot; valign=&quot;middle&quot; style=&quot;border-bottom:solid thin;border-top:solid thin&quot; rowspan=&quot;1&quot; colspan=&quot;1&quot;&gt;CS/Contract&lt;/th&gt;&lt;th align=&quot;center&quot; valign=&quot;middle&quot; style=&quot;border-bottom:solid thin;border-top:solid thin&quot; rowspan=&quot;1&quot; colspan=&quot;1&quot;&gt;Worker/Subscriber&lt;/th&gt;&lt;th align=&quot;center&quot; valign=&quot;middle&quot; style=&quot;border-bottom:solid thin;border-top:solid thin&quot; rowspan=&quot;1&quot; colspan=&quot;1&quot;&gt;Fog Node&lt;/th&gt;&lt;/tr&gt;&lt;/thead&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td align=&quot;center&quot; valign=&quot;middle&quot; rowspan=&quot;1&quot; colspan=&quot;1&quot;&gt;Fo-SDD&lt;/td&gt;&lt;td align=&quot;center&quot; valign=&quot;middle&quot; rowspan=&quot;1&quot; colspan=&quot;1&quot;&gt;
&lt;inline-formula&gt;&lt;mml:math id=&quot;mm527&quot;&gt;&lt;mml:mrow&gt;&lt;mml:mrow&gt;&lt;mml:mrow&gt;&lt;mml:mo&gt;|&lt;/mml:mo&gt;&lt;/mml:mrow&gt;&lt;mml:msub&gt;&lt;mml:mi&gt;G&lt;/mml:mi&gt;&lt;mml:mn&gt;1&lt;/mml:mn&gt;&lt;/mml:msub&gt;&lt;mml:mrow&gt;&lt;mml:mo&gt;|&lt;/mml:mo&gt;&lt;mml:mo&gt;+&lt;/mml:mo&gt;&lt;mml:mo&gt;|&lt;/mml:mo&gt;&lt;/mml:mrow&gt;&lt;mml:msub&gt;&lt;mml:mi&gt;G&lt;/mml:mi&gt;&lt;mml:mn&gt;2&lt;/mml:mn&gt;&lt;/mml:msub&gt;&lt;mml:mrow&gt;&lt;mml:mo&gt;|&lt;/mml:mo&gt;&lt;mml:mo&gt;+&lt;/mml:mo&gt;&lt;mml:mo&gt;|&lt;/mml:mo&gt;&lt;/mml:mrow&gt;&lt;mml:msub&gt;&lt;mml:mover accent=&quot;true&quot;&gt;&lt;mml:mi&gt;C&lt;/mml:mi&gt;&lt;mml:mo&gt;˜&lt;/mml:mo&gt;&lt;/mml:mover&gt;&lt;mml:mi&gt;s&lt;/mml:mi&gt;&lt;/mml:msub&gt;&lt;mml:mrow&gt;&lt;mml:mo&gt;|&lt;/mml:mo&gt;&lt;mml:mo&gt;+&lt;/mml:mo&gt;&lt;/mml:mrow&gt;&lt;mml:msub&gt;&lt;mml:mi&gt;l&lt;/mml:mi&gt;&lt;mml:mn&gt;1&lt;/mml:mn&gt;&lt;/mml:msub&gt;&lt;/mml:mrow&gt;&lt;/mml:mrow&gt;&lt;/mml:math&gt;&lt;/inline-formula&gt;
&lt;/td&gt;&lt;td align=&quot;center&quot; valign=&quot;middle&quot; rowspan=&quot;1&quot; colspan=&quot;1&quot;&gt;
&lt;inline-formula&gt;&lt;mml:math id=&quot;mm528&quot;&gt;&lt;mml:mrow&gt;&lt;mml:mrow&gt;&lt;mml:mi&gt;k&lt;/mml:mi&gt;&lt;mml:mo stretchy=&quot;false&quot;&gt;(&lt;/mml:mo&gt;&lt;mml:mo&gt;|&lt;/mml:mo&gt;&lt;mml:msub&gt;&lt;mml:mi&gt;Z&lt;/mml:mi&gt;&lt;mml:mi&gt;q&lt;/mml:mi&gt;&lt;/mml:msub&gt;&lt;mml:mo&gt;|&lt;/mml:mo&gt;&lt;mml:mo&gt;+&lt;/mml:mo&gt;&lt;mml:mo&gt;|&lt;/mml:mo&gt;&lt;mml:msub&gt;&lt;mml:mi&gt;G&lt;/mml:mi&gt;&lt;mml:mn&gt;2&lt;/mml:mn&gt;&lt;/mml:msub&gt;&lt;mml:mo&gt;|&lt;/mml:mo&gt;&lt;mml:mo&gt;+&lt;/mml:mo&gt;&lt;mml:mo&gt;|&lt;/mml:mo&gt;&lt;mml:msub&gt;&lt;mml:mover accent=&quot;true&quot;&gt;&lt;mml:mi&gt;C&lt;/mml:mi&gt;&lt;mml:mo&gt;˜&lt;/mml:mo&gt;&lt;/mml:mover&gt;&lt;mml:mi&gt;s&lt;/mml:mi&gt;&lt;/mml:msub&gt;&lt;mml:mo&gt;|&lt;/mml:mo&gt;&lt;mml:mo&gt;+&lt;/mml:mo&gt;&lt;mml:msub&gt;&lt;mml:mi&gt;l&lt;/mml:mi&gt;&lt;mml:mn&gt;1&lt;/mml:mn&gt;&lt;/mml:msub&gt;&lt;mml:mo stretchy=&quot;false&quot;&gt;)&lt;/mml:mo&gt;&lt;/mml:mrow&gt;&lt;/mml:mrow&gt;&lt;/mml:math&gt;&lt;/inline-formula&gt;
&lt;/td&gt;&lt;td align=&quot;center&quot; valign=&quot;middle&quot; rowspan=&quot;1&quot; colspan=&quot;1&quot;&gt;
&lt;inline-formula&gt;&lt;mml:math id=&quot;mm529&quot;&gt;&lt;mml:mrow&gt;&lt;mml:mrow&gt;&lt;mml:mrow&gt;&lt;mml:mn&gt;2&lt;/mml:mn&gt;&lt;mml:mo&gt;|&lt;/mml:mo&gt;&lt;/mml:mrow&gt;&lt;mml:msub&gt;&lt;mml:mi&gt;Z&lt;/mml:mi&gt;&lt;mml:mi&gt;q&lt;/mml:mi&gt;&lt;/mml:msub&gt;&lt;mml:mrow&gt;&lt;mml:mo&gt;|&lt;/mml:mo&gt;&lt;mml:mo&gt;+&lt;/mml:mo&gt;&lt;mml:mn&gt;4&lt;/mml:mn&gt;&lt;mml:mo&gt;|&lt;/mml:mo&gt;&lt;/mml:mrow&gt;&lt;mml:msub&gt;&lt;mml:mi&gt;G&lt;/mml:mi&gt;&lt;mml:mn&gt;1&lt;/mml:mn&gt;&lt;/mml:msub&gt;&lt;mml:mrow&gt;&lt;mml:mo&gt;|&lt;/mml:mo&gt;&lt;mml:mo&gt;+&lt;/mml:mo&gt;&lt;mml:mn&gt;2&lt;/mml:mn&gt;&lt;mml:mo&gt;|&lt;/mml:mo&gt;&lt;/mml:mrow&gt;&lt;mml:msub&gt;&lt;mml:mover accent=&quot;true&quot;&gt;&lt;mml:mi&gt;C&lt;/mml:mi&gt;&lt;mml:mo&gt;˜&lt;/mml:mo&gt;&lt;/mml:mover&gt;&lt;mml:mi&gt;s&lt;/mml:mi&gt;&lt;/mml:msub&gt;&lt;mml:mrow&gt;&lt;mml:mo&gt;|&lt;/mml:mo&gt;&lt;/mml:mrow&gt;&lt;/mml:mrow&gt;&lt;/mml:mrow&gt;&lt;/mml:math&gt;&lt;/inline-formula&gt;
&lt;/td&gt;&lt;td align=&quot;center&quot; valign=&quot;middle&quot; rowspan=&quot;1&quot; colspan=&quot;1&quot;&gt;
&lt;inline-formula&gt;&lt;mml:math id=&quot;mm530&quot;&gt;&lt;mml:mrow&gt;&lt;mml:mrow&gt;&lt;mml:mi&gt;k&lt;/mml:mi&gt;&lt;mml:mo stretchy=&quot;false&quot;&gt;(&lt;/mml:mo&gt;&lt;mml:mo&gt;|&lt;/mml:mo&gt;&lt;mml:msub&gt;&lt;mml:mi&gt;Z&lt;/mml:mi&gt;&lt;mml:mi&gt;q&lt;/mml:mi&gt;&lt;/mml:msub&gt;&lt;mml:mo&gt;|&lt;/mml:mo&gt;&lt;mml:mo&gt;+&lt;/mml:mo&gt;&lt;mml:mn&gt;4&lt;/mml:mn&gt;&lt;mml:mo&gt;|&lt;/mml:mo&gt;&lt;mml:msub&gt;&lt;mml:mi&gt;G&lt;/mml:mi&gt;&lt;mml:mn&gt;1&lt;/mml:mn&gt;&lt;/mml:msub&gt;&lt;mml:mo&gt;|&lt;/mml:mo&gt;&lt;mml:mo&gt;+&lt;/mml:mo&gt;&lt;mml:mo&gt;|&lt;/mml:mo&gt;&lt;mml:msub&gt;&lt;mml:mover accent=&quot;true&quot;&gt;&lt;mml:mi&gt;C&lt;/mml:mi&gt;&lt;mml:mo&gt;˜&lt;/mml:mo&gt;&lt;/mml:mover&gt;&lt;mml:mi&gt;s&lt;/mml:mi&gt;&lt;/mml:msub&gt;&lt;mml:mo&gt;|&lt;/mml:mo&gt;&lt;mml:mo&gt;+&lt;/mml:mo&gt;&lt;mml:msub&gt;&lt;mml:mi&gt;l&lt;/mml:mi&gt;&lt;mml:mn&gt;1&lt;/mml:mn&gt;&lt;/mml:msub&gt;&lt;mml:mo stretchy=&quot;false&quot;&gt;)&lt;/mml:mo&gt;&lt;/mml:mrow&gt;&lt;/mml:mrow&gt;&lt;/mml:math&gt;&lt;/inline-formula&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td align=&quot;center&quot; valign=&quot;middle&quot; rowspan=&quot;1&quot; colspan=&quot;1&quot;&gt;SybSub&lt;/td&gt;&lt;td align=&quot;center&quot; valign=&quot;middle&quot; rowspan=&quot;1&quot; colspan=&quot;1&quot;&gt;
&lt;inline-formula&gt;&lt;mml:math id=&quot;mm531&quot;&gt;&lt;mml:mrow&gt;&lt;mml:mrow&gt;&lt;mml:msub&gt;&lt;mml:mi&gt;l&lt;/mml:mi&gt;&lt;mml:mn&gt;2&lt;/mml:mn&gt;&lt;/mml:msub&gt;&lt;mml:mo&gt;+&lt;/mml:mo&gt;&lt;mml:mrow&gt;&lt;mml:mo&gt;|&lt;/mml:mo&gt;&lt;mml:msub&gt;&lt;mml:mi&gt;Z&lt;/mml:mi&gt;&lt;mml:msup&gt;&lt;mml:mrow/&gt;&lt;mml:msup&gt;&lt;mml:mrow&gt;&lt;mml:mi&gt;N&lt;/mml:mi&gt;&lt;/mml:mrow&gt;&lt;mml:mn&gt;2&lt;/mml:mn&gt;&lt;/mml:msup&gt;&lt;/mml:msup&gt;&lt;/mml:msub&gt;&lt;mml:mo&gt;|&lt;/mml:mo&gt;&lt;/mml:mrow&gt;&lt;/mml:mrow&gt;&lt;/mml:mrow&gt;&lt;/mml:math&gt;&lt;/inline-formula&gt;
&lt;/td&gt;&lt;td align=&quot;center&quot; valign=&quot;middle&quot; rowspan=&quot;1&quot; colspan=&quot;1&quot;&gt;
&lt;inline-formula&gt;&lt;mml:math id=&quot;mm532&quot;&gt;&lt;mml:mrow&gt;&lt;mml:msub&gt;&lt;mml:mi&gt;l&lt;/mml:mi&gt;&lt;mml:mn&gt;1&lt;/mml:mn&gt;&lt;/mml:msub&gt;&lt;/mml:mrow&gt;&lt;/mml:math&gt;&lt;/inline-formula&gt;
&lt;/td&gt;&lt;td align=&quot;center&quot; valign=&quot;middle&quot; rowspan=&quot;1&quot; colspan=&quot;1&quot;&gt;
&lt;inline-formula&gt;&lt;mml:math id=&quot;mm533&quot;&gt;&lt;mml:mrow&gt;&lt;mml:mrow&gt;&lt;mml:mrow&gt;&lt;mml:mn&gt;2&lt;/mml:mn&gt;&lt;mml:mo&gt;|&lt;/mml:mo&gt;&lt;/mml:mrow&gt;&lt;mml:msub&gt;&lt;mml:mi&gt;G&lt;/mml:mi&gt;&lt;mml:mn&gt;1&lt;/mml:mn&gt;&lt;/mml:msub&gt;&lt;mml:mrow&gt;&lt;mml:mo&gt;|&lt;/mml:mo&gt;&lt;mml:mo&gt;+&lt;/mml:mo&gt;&lt;/mml:mrow&gt;&lt;mml:msub&gt;&lt;mml:mi&gt;l&lt;/mml:mi&gt;&lt;mml:mn&gt;2&lt;/mml:mn&gt;&lt;/mml:msub&gt;&lt;mml:mo&gt;+&lt;/mml:mo&gt;&lt;mml:mrow&gt;&lt;mml:mo&gt;|&lt;/mml:mo&gt;&lt;mml:msub&gt;&lt;mml:mi&gt;Z&lt;/mml:mi&gt;&lt;mml:msup&gt;&lt;mml:mrow&gt;&lt;mml:mi&gt;N&lt;/mml:mi&gt;&lt;/mml:mrow&gt;&lt;mml:mn&gt;2&lt;/mml:mn&gt;&lt;/mml:msup&gt;&lt;/mml:msub&gt;&lt;mml:mo&gt;|&lt;/mml:mo&gt;&lt;/mml:mrow&gt;&lt;/mml:mrow&gt;&lt;/mml:mrow&gt;&lt;/mml:math&gt;&lt;/inline-formula&gt;
&lt;/td&gt;&lt;td align=&quot;center&quot; valign=&quot;middle&quot; rowspan=&quot;1&quot; colspan=&quot;1&quot;&gt;-&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td align=&quot;center&quot; valign=&quot;middle&quot; rowspan=&quot;1&quot; colspan=&quot;1&quot;&gt;ZebraLancer&lt;/td&gt;&lt;td align=&quot;center&quot; valign=&quot;middle&quot; rowspan=&quot;1&quot; colspan=&quot;1&quot;&gt;
&lt;inline-formula&gt;&lt;mml:math id=&quot;mm534&quot;&gt;&lt;mml:mrow&gt;&lt;mml:msub&gt;&lt;mml:mi&gt;l&lt;/mml:mi&gt;&lt;mml:mn&gt;3&lt;/mml:mn&gt;&lt;/mml:msub&gt;&lt;/mml:mrow&gt;&lt;/mml:math&gt;&lt;/inline-formula&gt;
&lt;/td&gt;&lt;td align=&quot;center&quot; valign=&quot;middle&quot; rowspan=&quot;1&quot; colspan=&quot;1&quot;&gt;
&lt;inline-formula&gt;&lt;mml:math id=&quot;mm535&quot;&gt;&lt;mml:mrow&gt;&lt;mml:mrow&gt;&lt;mml:mrow&gt;&lt;mml:mi&gt;k&lt;/mml:mi&gt;&lt;mml:mo&gt;|&lt;/mml:mo&gt;&lt;/mml:mrow&gt;&lt;mml:msub&gt;&lt;mml:mover accent=&quot;true&quot;&gt;&lt;mml:mi&gt;C&lt;/mml:mi&gt;&lt;mml:mo&gt;˜&lt;/mml:mo&gt;&lt;/mml:mover&gt;&lt;mml:mi&gt;a&lt;/mml:mi&gt;&lt;/mml:msub&gt;&lt;mml:mrow&gt;&lt;mml:mo&gt;|&lt;/mml:mo&gt;&lt;/mml:mrow&gt;&lt;/mml:mrow&gt;&lt;/mml:mrow&gt;&lt;/mml:math&gt;&lt;/inline-formula&gt;
&lt;/td&gt;&lt;td align=&quot;center&quot; valign=&quot;middle&quot; rowspan=&quot;1&quot; colspan=&quot;1&quot;&gt;
&lt;inline-formula&gt;&lt;mml:math id=&quot;mm536&quot;&gt;&lt;mml:mrow&gt;&lt;mml:mrow&gt;&lt;mml:mrow&gt;&lt;mml:mo&gt;|&lt;/mml:mo&gt;&lt;/mml:mrow&gt;&lt;mml:msub&gt;&lt;mml:mover accent=&quot;true&quot;&gt;&lt;mml:mi&gt;C&lt;/mml:mi&gt;&lt;mml:mo&gt;˜&lt;/mml:mo&gt;&lt;/mml:mover&gt;&lt;mml:mi&gt;a&lt;/mml:mi&gt;&lt;/mml:msub&gt;&lt;mml:mrow&gt;&lt;mml:mo&gt;|&lt;/mml:mo&gt;&lt;mml:mo&gt;+&lt;/mml:mo&gt;&lt;/mml:mrow&gt;&lt;mml:msub&gt;&lt;mml:mi&gt;s&lt;/mml:mi&gt;&lt;mml:mi&gt;M&lt;/mml:mi&gt;&lt;/mml:msub&gt;&lt;mml:mi&gt;poly&lt;/mml:mi&gt;&lt;mml:mrow&gt;&lt;mml:mo stretchy=&quot;false&quot;&gt;(&lt;/mml:mo&gt;&lt;mml:mi&gt;λ&lt;/mml:mi&gt;&lt;mml:mo stretchy=&quot;false&quot;&gt;)&lt;/mml:mo&gt;&lt;/mml:mrow&gt;&lt;/mml:mrow&gt;&lt;/mml:mrow&gt;&lt;/mml:math&gt;&lt;/inline-formula&gt;
&lt;/td&gt;&lt;td align=&quot;center&quot; valign=&quot;middle&quot; rowspan=&quot;1&quot; colspan=&quot;1&quot;&gt;-&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td align=&quot;center&quot; valign=&quot;middle&quot; style=&quot;border-bottom:solid thin&quot; rowspan=&quot;1&quot; colspan=&quot;1&quot;&gt;zk-MIPE&lt;/td&gt;&lt;td align=&quot;center&quot; valign=&quot;middle&quot; style=&quot;border-bottom:solid thin&quot; rowspan=&quot;1&quot; colspan=&quot;1&quot;&gt;
&lt;inline-formula&gt;&lt;mml:math id=&quot;mm537&quot;&gt;&lt;mml:mrow&gt;&lt;mml:mrow&gt;&lt;mml:mrow&gt;&lt;mml:mrow&gt;&lt;mml:mo stretchy=&quot;false&quot;&gt;(&lt;/mml:mo&gt;&lt;mml:mn&gt;5&lt;/mml:mn&gt;&lt;mml:mo&gt;+&lt;/mml:mo&gt;&lt;mml:mn&gt;2&lt;/mml:mn&gt;&lt;mml:mi&gt;n&lt;/mml:mi&gt;&lt;mml:mi&gt;m&lt;/mml:mi&gt;&lt;mml:mo stretchy=&quot;false&quot;&gt;)&lt;/mml:mo&gt;&lt;/mml:mrow&gt;&lt;mml:mo&gt;|&lt;/mml:mo&gt;&lt;/mml:mrow&gt;&lt;mml:msub&gt;&lt;mml:mi&gt;G&lt;/mml:mi&gt;&lt;mml:mn&gt;1&lt;/mml:mn&gt;&lt;/mml:msub&gt;&lt;mml:mrow&gt;&lt;mml:mo&gt;|&lt;/mml:mo&gt;&lt;mml:mo&gt;+&lt;/mml:mo&gt;&lt;mml:mo&gt;|&lt;/mml:mo&gt;&lt;/mml:mrow&gt;&lt;mml:msub&gt;&lt;mml:mi&gt;G&lt;/mml:mi&gt;&lt;mml:mn&gt;2&lt;/mml:mn&gt;&lt;/mml:msub&gt;&lt;mml:mrow&gt;&lt;mml:mo&gt;|&lt;/mml:mo&gt;&lt;/mml:mrow&gt;&lt;/mml:mrow&gt;&lt;/mml:mrow&gt;&lt;/mml:math&gt;&lt;/inline-formula&gt;
&lt;/td&gt;&lt;td align=&quot;center&quot; valign=&quot;middle&quot; style=&quot;border-bottom:solid thin&quot; rowspan=&quot;1&quot; colspan=&quot;1&quot;&gt;
&lt;inline-formula&gt;&lt;mml:math id=&quot;mm538&quot;&gt;&lt;mml:mrow&gt;&lt;mml:mrow&gt;&lt;mml:mrow&gt;&lt;mml:mn&gt;2&lt;/mml:mn&gt;&lt;mml:mi&gt;k&lt;/mml:mi&gt;&lt;mml:mo&gt;|&lt;/mml:mo&gt;&lt;/mml:mrow&gt;&lt;mml:msub&gt;&lt;mml:mi&gt;G&lt;/mml:mi&gt;&lt;mml:mn&gt;1&lt;/mml:mn&gt;&lt;/mml:msub&gt;&lt;mml:mrow&gt;&lt;mml:mo&gt;|&lt;/mml:mo&gt;&lt;mml:mo&gt;+&lt;/mml:mo&gt;&lt;mml:mi&gt;k&lt;/mml:mi&gt;&lt;mml:mo&gt;|&lt;/mml:mo&gt;&lt;/mml:mrow&gt;&lt;mml:msub&gt;&lt;mml:mi&gt;Z&lt;/mml:mi&gt;&lt;mml:mi&gt;q&lt;/mml:mi&gt;&lt;/mml:msub&gt;&lt;mml:mrow&gt;&lt;mml:mo&gt;|&lt;/mml:mo&gt;&lt;/mml:mrow&gt;&lt;/mml:mrow&gt;&lt;/mml:mrow&gt;&lt;/mml:math&gt;&lt;/inline-formula&gt;
&lt;/td&gt;&lt;td align=&quot;center&quot; valign=&quot;middle&quot; style=&quot;border-bottom:solid thin&quot; rowspan=&quot;1&quot; colspan=&quot;1&quot;&gt;
&lt;inline-formula&gt;&lt;mml:math id=&quot;mm539&quot;&gt;&lt;mml:mrow&gt;&lt;mml:mrow&gt;&lt;mml:mrow&gt;&lt;mml:mn&gt;5&lt;/mml:mn&gt;&lt;mml:mo&gt;|&lt;/mml:mo&gt;&lt;/mml:mrow&gt;&lt;mml:msub&gt;&lt;mml:mi&gt;G&lt;/mml:mi&gt;&lt;mml:mi&gt;T&lt;/mml:mi&gt;&lt;/mml:msub&gt;&lt;mml:mrow&gt;&lt;mml:mo&gt;|&lt;/mml:mo&gt;&lt;mml:mo&gt;+&lt;/mml:mo&gt;&lt;mml:mrow&gt;&lt;mml:mo stretchy=&quot;false&quot;&gt;(&lt;/mml:mo&gt;&lt;mml:mn&gt;7&lt;/mml:mn&gt;&lt;mml:mo&gt;+&lt;/mml:mo&gt;&lt;mml:mi&gt;m&lt;/mml:mi&gt;&lt;mml:mo&gt;+&lt;/mml:mo&gt;&lt;mml:mi&gt;n&lt;/mml:mi&gt;&lt;mml:mi&gt;m&lt;/mml:mi&gt;&lt;mml:mo stretchy=&quot;false&quot;&gt;)&lt;/mml:mo&gt;&lt;/mml:mrow&gt;&lt;mml:mo stretchy=&quot;false&quot;&gt;(&lt;/mml:mo&gt;&lt;mml:mo&gt;|&lt;/mml:mo&gt;&lt;/mml:mrow&gt;&lt;mml:msub&gt;&lt;mml:mi&gt;Z&lt;/mml:mi&gt;&lt;mml:mi&gt;q&lt;/mml:mi&gt;&lt;/mml:msub&gt;&lt;mml:mrow&gt;&lt;mml:mo&gt;|&lt;/mml:mo&gt;&lt;mml:mo&gt;+&lt;/mml:mo&gt;&lt;mml:mo&gt;|&lt;/mml:mo&gt;&lt;/mml:mrow&gt;&lt;mml:msub&gt;&lt;mml:mi&gt;G&lt;/mml:mi&gt;&lt;mml:mn&gt;1&lt;/mml:mn&gt;&lt;/mml:msub&gt;&lt;mml:mrow&gt;&lt;mml:mo&gt;|&lt;/mml:mo&gt;&lt;mml:mo stretchy=&quot;false&quot;&gt;)&lt;/mml:mo&gt;&lt;/mml:mrow&gt;&lt;/mml:mrow&gt;&lt;/mml:mrow&gt;&lt;/mml:math&gt;&lt;/inline-formula&gt;
&lt;/td&gt;&lt;td align=&quot;center&quot; valign=&quot;middle&quot; style=&quot;border-bottom:solid thin&quot; rowspan=&quot;1&quot; colspan=&quot;1&quot;&gt;-&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;
</infon><offset>46471</offset><text>Scheme	Requester/Publisher	CS/Contract	Worker/Subscriber	Fog Node	 	Fo-SDD					 	SybSub				-	 	ZebraLancer				-	 	zk-MIPE				-	 	</text></passage><passage><infon key="file">sensors-21-03036-t005.xml</infon><infon key="id">sensors-21-03036-t005</infon><infon key="section_type">TABLE</infon><infon key="type">table_caption</infon><offset>46601</offset><text>Computation cost.</text></passage><passage><infon key="file">sensors-21-03036-t005.xml</infon><infon key="id">sensors-21-03036-t005</infon><infon key="section_type">TABLE</infon><infon key="type">table</infon><infon key="xml">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
&lt;table xmlns:mml=&quot;http://www.w3.org/1998/Math/MathML&quot; frame=&quot;hsides&quot; rules=&quot;groups&quot;&gt;&lt;thead&gt;&lt;tr&gt;&lt;th align=&quot;center&quot; valign=&quot;middle&quot; style=&quot;border-bottom:solid thin;border-top:solid thin&quot; rowspan=&quot;1&quot; colspan=&quot;1&quot;&gt;Scheme&lt;/th&gt;&lt;th align=&quot;center&quot; valign=&quot;middle&quot; style=&quot;border-bottom:solid thin;border-top:solid thin&quot; rowspan=&quot;1&quot; colspan=&quot;1&quot;&gt;Requester/Publisher&lt;/th&gt;&lt;th align=&quot;center&quot; valign=&quot;middle&quot; style=&quot;border-bottom:solid thin;border-top:solid thin&quot; rowspan=&quot;1&quot; colspan=&quot;1&quot;&gt;CS/Contract&lt;/th&gt;&lt;th align=&quot;center&quot; valign=&quot;middle&quot; style=&quot;border-bottom:solid thin;border-top:solid thin&quot; rowspan=&quot;1&quot; colspan=&quot;1&quot;&gt;Worker&lt;/th&gt;&lt;th align=&quot;center&quot; valign=&quot;middle&quot; style=&quot;border-bottom:solid thin;border-top:solid thin&quot; rowspan=&quot;1&quot; colspan=&quot;1&quot;&gt;Fog Node&lt;/th&gt;&lt;/tr&gt;&lt;/thead&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td align=&quot;center&quot; valign=&quot;middle&quot; rowspan=&quot;1&quot; colspan=&quot;1&quot;&gt;Fo-SDD&lt;/td&gt;&lt;td align=&quot;center&quot; valign=&quot;middle&quot; rowspan=&quot;1&quot; colspan=&quot;1&quot;&gt;
&lt;inline-formula&gt;&lt;mml:math id=&quot;mm540&quot;&gt;&lt;mml:mrow&gt;&lt;mml:mrow&gt;&lt;mml:mn&gt;2&lt;/mml:mn&gt;&lt;mml:msub&gt;&lt;mml:mi&gt;E&lt;/mml:mi&gt;&lt;mml:mn&gt;1&lt;/mml:mn&gt;&lt;/mml:msub&gt;&lt;mml:mo&gt;+&lt;/mml:mo&gt;&lt;mml:msub&gt;&lt;mml:mover accent=&quot;true&quot;&gt;&lt;mml:mi&gt;E&lt;/mml:mi&gt;&lt;mml:mo stretchy=&quot;false&quot;&gt;˜&lt;/mml:mo&gt;&lt;/mml:mover&gt;&lt;mml:mi&gt;s&lt;/mml:mi&gt;&lt;/mml:msub&gt;&lt;/mml:mrow&gt;&lt;/mml:mrow&gt;&lt;/mml:math&gt;&lt;/inline-formula&gt;
&lt;/td&gt;&lt;td align=&quot;center&quot; valign=&quot;middle&quot; rowspan=&quot;1&quot; colspan=&quot;1&quot;&gt;
&lt;inline-formula&gt;&lt;mml:math id=&quot;mm541&quot;&gt;&lt;mml:mrow&gt;&lt;mml:mrow&gt;&lt;mml:mi&gt;k&lt;/mml:mi&gt;&lt;mml:mo stretchy=&quot;false&quot;&gt;(&lt;/mml:mo&gt;&lt;mml:msub&gt;&lt;mml:mi&gt;E&lt;/mml:mi&gt;&lt;mml:mn&gt;1&lt;/mml:mn&gt;&lt;/mml:msub&gt;&lt;mml:mo&gt;+&lt;/mml:mo&gt;&lt;mml:msub&gt;&lt;mml:mi&gt;E&lt;/mml:mi&gt;&lt;mml:mn&gt;2&lt;/mml:mn&gt;&lt;/mml:msub&gt;&lt;mml:mo&gt;+&lt;/mml:mo&gt;&lt;mml:mi&gt;P&lt;/mml:mi&gt;&lt;mml:mo&gt;+&lt;/mml:mo&gt;&lt;mml:msub&gt;&lt;mml:mover accent=&quot;true&quot;&gt;&lt;mml:mi&gt;D&lt;/mml:mi&gt;&lt;mml:mo stretchy=&quot;false&quot;&gt;˜&lt;/mml:mo&gt;&lt;/mml:mover&gt;&lt;mml:mi&gt;s&lt;/mml:mi&gt;&lt;/mml:msub&gt;&lt;mml:mo stretchy=&quot;false&quot;&gt;)&lt;/mml:mo&gt;&lt;/mml:mrow&gt;&lt;/mml:mrow&gt;&lt;/mml:math&gt;&lt;/inline-formula&gt;
&lt;/td&gt;&lt;td align=&quot;center&quot; valign=&quot;middle&quot; rowspan=&quot;1&quot; colspan=&quot;1&quot;&gt;
&lt;inline-formula&gt;&lt;mml:math id=&quot;mm542&quot;&gt;&lt;mml:mrow&gt;&lt;mml:mrow&gt;&lt;mml:mn&gt;6&lt;/mml:mn&gt;&lt;mml:msub&gt;&lt;mml:mi&gt;E&lt;/mml:mi&gt;&lt;mml:mn&gt;1&lt;/mml:mn&gt;&lt;/mml:msub&gt;&lt;mml:mo&gt;+&lt;/mml:mo&gt;&lt;mml:mn&gt;2&lt;/mml:mn&gt;&lt;mml:msub&gt;&lt;mml:mi&gt;E&lt;/mml:mi&gt;&lt;mml:mi&gt;T&lt;/mml:mi&gt;&lt;/mml:msub&gt;&lt;mml:mo&gt;+&lt;/mml:mo&gt;&lt;mml:mn&gt;2&lt;/mml:mn&gt;&lt;mml:mi&gt;P&lt;/mml:mi&gt;&lt;mml:mo&gt;+&lt;/mml:mo&gt;&lt;mml:msub&gt;&lt;mml:mover accent=&quot;true&quot;&gt;&lt;mml:mi&gt;D&lt;/mml:mi&gt;&lt;mml:mo stretchy=&quot;false&quot;&gt;˜&lt;/mml:mo&gt;&lt;/mml:mover&gt;&lt;mml:mi&gt;s&lt;/mml:mi&gt;&lt;/mml:msub&gt;&lt;/mml:mrow&gt;&lt;/mml:mrow&gt;&lt;/mml:math&gt;&lt;/inline-formula&gt;
&lt;/td&gt;&lt;td align=&quot;center&quot; valign=&quot;middle&quot; rowspan=&quot;1&quot; colspan=&quot;1&quot;&gt;
&lt;inline-formula&gt;&lt;mml:math id=&quot;mm543&quot;&gt;&lt;mml:mrow&gt;&lt;mml:mrow&gt;&lt;mml:msub&gt;&lt;mml:mi&gt;E&lt;/mml:mi&gt;&lt;mml:mi&gt;T&lt;/mml:mi&gt;&lt;/mml:msub&gt;&lt;mml:mo&gt;+&lt;/mml:mo&gt;&lt;mml:msub&gt;&lt;mml:mover accent=&quot;true&quot;&gt;&lt;mml:mi&gt;D&lt;/mml:mi&gt;&lt;mml:mo stretchy=&quot;false&quot;&gt;˜&lt;/mml:mo&gt;&lt;/mml:mover&gt;&lt;mml:mi&gt;s&lt;/mml:mi&gt;&lt;/mml:msub&gt;&lt;mml:mo&gt;+&lt;/mml:mo&gt;&lt;mml:mi&gt;k&lt;/mml:mi&gt;&lt;mml:mrow&gt;&lt;mml:mo stretchy=&quot;false&quot;&gt;(&lt;/mml:mo&gt;&lt;mml:mn&gt;3&lt;/mml:mn&gt;&lt;mml:msub&gt;&lt;mml:mi&gt;E&lt;/mml:mi&gt;&lt;mml:mn&gt;1&lt;/mml:mn&gt;&lt;/mml:msub&gt;&lt;mml:mo&gt;+&lt;/mml:mo&gt;&lt;mml:msub&gt;&lt;mml:mover accent=&quot;true&quot;&gt;&lt;mml:mi&gt;E&lt;/mml:mi&gt;&lt;mml:mo stretchy=&quot;false&quot;&gt;˜&lt;/mml:mo&gt;&lt;/mml:mover&gt;&lt;mml:mi&gt;s&lt;/mml:mi&gt;&lt;/mml:msub&gt;&lt;mml:mo stretchy=&quot;false&quot;&gt;)&lt;/mml:mo&gt;&lt;/mml:mrow&gt;&lt;/mml:mrow&gt;&lt;/mml:mrow&gt;&lt;/mml:math&gt;&lt;/inline-formula&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td align=&quot;center&quot; valign=&quot;middle&quot; rowspan=&quot;1&quot; colspan=&quot;1&quot;&gt;SybSub&lt;/td&gt;&lt;td align=&quot;center&quot; valign=&quot;middle&quot; rowspan=&quot;1&quot; colspan=&quot;1&quot;&gt;
&lt;inline-formula&gt;&lt;mml:math id=&quot;mm544&quot;&gt;&lt;mml:mrow&gt;&lt;mml:mrow&gt;&lt;mml:mi&gt;l&lt;/mml:mi&gt;&lt;mml:msub&gt;&lt;mml:mi&gt;E&lt;/mml:mi&gt;&lt;mml:mn&gt;2&lt;/mml:mn&gt;&lt;/mml:msub&gt;&lt;mml:mo&gt;+&lt;/mml:mo&gt;&lt;mml:mn&gt;2&lt;/mml:mn&gt;&lt;mml:mi&gt;l&lt;/mml:mi&gt;&lt;mml:msub&gt;&lt;mml:mover accent=&quot;true&quot;&gt;&lt;mml:mi&gt;E&lt;/mml:mi&gt;&lt;mml:mo stretchy=&quot;false&quot;&gt;˜&lt;/mml:mo&gt;&lt;/mml:mover&gt;&lt;mml:mi&gt;P&lt;/mml:mi&gt;&lt;/mml:msub&gt;&lt;/mml:mrow&gt;&lt;/mml:mrow&gt;&lt;/mml:math&gt;&lt;/inline-formula&gt;
&lt;/td&gt;&lt;td align=&quot;center&quot; valign=&quot;middle&quot; rowspan=&quot;1&quot; colspan=&quot;1&quot;&gt;
&lt;inline-formula&gt;&lt;mml:math id=&quot;mm545&quot;&gt;&lt;mml:mrow&gt;&lt;mml:mrow&gt;&lt;mml:mi&gt;k&lt;/mml:mi&gt;&lt;mml:mi&gt;l&lt;/mml:mi&gt;&lt;mml:mrow&gt;&lt;mml:mo stretchy=&quot;false&quot;&gt;(&lt;/mml:mo&gt;&lt;mml:msub&gt;&lt;mml:mi&gt;E&lt;/mml:mi&gt;&lt;mml:mn&gt;1&lt;/mml:mn&gt;&lt;/mml:msub&gt;&lt;mml:mo&gt;+&lt;/mml:mo&gt;&lt;mml:msub&gt;&lt;mml:mover accent=&quot;true&quot;&gt;&lt;mml:mi&gt;D&lt;/mml:mi&gt;&lt;mml:mo stretchy=&quot;false&quot;&gt;˜&lt;/mml:mo&gt;&lt;/mml:mover&gt;&lt;mml:mi&gt;P&lt;/mml:mi&gt;&lt;/mml:msub&gt;&lt;mml:mo stretchy=&quot;false&quot;&gt;)&lt;/mml:mo&gt;&lt;/mml:mrow&gt;&lt;mml:mo&gt;+&lt;/mml:mo&gt;&lt;mml:mi&gt;l&lt;/mml:mi&gt;&lt;mml:mrow&gt;&lt;mml:mo stretchy=&quot;false&quot;&gt;(&lt;/mml:mo&gt;&lt;mml:mi&gt;k&lt;/mml:mi&gt;&lt;mml:mo&gt;+&lt;/mml:mo&gt;&lt;mml:mn&gt;1&lt;/mml:mn&gt;&lt;mml:mo stretchy=&quot;false&quot;&gt;)&lt;/mml:mo&gt;&lt;/mml:mrow&gt;&lt;mml:mi&gt;P&lt;/mml:mi&gt;&lt;/mml:mrow&gt;&lt;/mml:mrow&gt;&lt;/mml:math&gt;&lt;/inline-formula&gt;
&lt;/td&gt;&lt;td align=&quot;center&quot; valign=&quot;middle&quot; rowspan=&quot;1&quot; colspan=&quot;1&quot;&gt;
&lt;inline-formula&gt;&lt;mml:math id=&quot;mm546&quot;&gt;&lt;mml:mrow&gt;&lt;mml:mrow&gt;&lt;mml:mn&gt;3&lt;/mml:mn&gt;&lt;mml:mi&gt;l&lt;/mml:mi&gt;&lt;mml:msub&gt;&lt;mml:mi&gt;E&lt;/mml:mi&gt;&lt;mml:mn&gt;1&lt;/mml:mn&gt;&lt;/mml:msub&gt;&lt;mml:mo&gt;+&lt;/mml:mo&gt;&lt;mml:mn&gt;2&lt;/mml:mn&gt;&lt;mml:mi&gt;l&lt;/mml:mi&gt;&lt;mml:msub&gt;&lt;mml:mover accent=&quot;true&quot;&gt;&lt;mml:mi&gt;E&lt;/mml:mi&gt;&lt;mml:mo stretchy=&quot;false&quot;&gt;˜&lt;/mml:mo&gt;&lt;/mml:mover&gt;&lt;mml:mi&gt;P&lt;/mml:mi&gt;&lt;/mml:msub&gt;&lt;mml:mo&gt;+&lt;/mml:mo&gt;&lt;mml:mi&gt;l&lt;/mml:mi&gt;&lt;mml:msub&gt;&lt;mml:mi&gt;E&lt;/mml:mi&gt;&lt;mml:mn&gt;2&lt;/mml:mn&gt;&lt;/mml:msub&gt;&lt;/mml:mrow&gt;&lt;/mml:mrow&gt;&lt;/mml:math&gt;&lt;/inline-formula&gt;
&lt;/td&gt;&lt;td align=&quot;center&quot; valign=&quot;middle&quot; rowspan=&quot;1&quot; colspan=&quot;1&quot;&gt;-&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td align=&quot;center&quot; valign=&quot;middle&quot; rowspan=&quot;1&quot; colspan=&quot;1&quot;&gt;ZebraLancer&lt;/td&gt;&lt;td align=&quot;center&quot; valign=&quot;middle&quot; rowspan=&quot;1&quot; colspan=&quot;1&quot;&gt;
&lt;inline-formula&gt;&lt;mml:math id=&quot;mm547&quot;&gt;&lt;mml:mrow&gt;&lt;mml:mrow&gt;&lt;mml:msub&gt;&lt;mml:mi&gt;E&lt;/mml:mi&gt;&lt;mml:mn&gt;1&lt;/mml:mn&gt;&lt;/mml:msub&gt;&lt;mml:mo&gt;+&lt;/mml:mo&gt;&lt;mml:msub&gt;&lt;mml:mi&gt;C&lt;/mml:mi&gt;&lt;mml:mrow&gt;&lt;mml:mi&gt;s&lt;/mml:mi&gt;&lt;mml:mi&gt;c&lt;/mml:mi&gt;&lt;/mml:mrow&gt;&lt;/mml:msub&gt;&lt;mml:mo&gt;+&lt;/mml:mo&gt;&lt;mml:msub&gt;&lt;mml:mi&gt;t&lt;/mml:mi&gt;&lt;mml:mi&gt;M&lt;/mml:mi&gt;&lt;/mml:msub&gt;&lt;mml:mi&gt;poly&lt;/mml:mi&gt;&lt;mml:mrow&gt;&lt;mml:mo stretchy=&quot;false&quot;&gt;(&lt;/mml:mo&gt;&lt;mml:mi&gt;λ&lt;/mml:mi&gt;&lt;mml:mo stretchy=&quot;false&quot;&gt;)&lt;/mml:mo&gt;&lt;/mml:mrow&gt;&lt;/mml:mrow&gt;&lt;/mml:mrow&gt;&lt;/mml:math&gt;&lt;/inline-formula&gt;
&lt;/td&gt;&lt;td align=&quot;center&quot; valign=&quot;middle&quot; rowspan=&quot;1&quot; colspan=&quot;1&quot;&gt;
&lt;inline-formula&gt;&lt;mml:math id=&quot;mm548&quot;&gt;&lt;mml:mrow&gt;&lt;mml:mrow&gt;&lt;mml:mi&gt;k&lt;/mml:mi&gt;&lt;mml:mi&gt;poly&lt;/mml:mi&gt;&lt;mml:mo stretchy=&quot;false&quot;&gt;(&lt;/mml:mo&gt;&lt;mml:mi&gt;λ&lt;/mml:mi&gt;&lt;mml:mo stretchy=&quot;false&quot;&gt;)&lt;/mml:mo&gt;&lt;/mml:mrow&gt;&lt;/mml:mrow&gt;&lt;/mml:math&gt;&lt;/inline-formula&gt;
&lt;/td&gt;&lt;td align=&quot;center&quot; valign=&quot;middle&quot; rowspan=&quot;1&quot; colspan=&quot;1&quot;&gt;
&lt;inline-formula&gt;&lt;mml:math id=&quot;mm549&quot;&gt;&lt;mml:mrow&gt;&lt;mml:mrow&gt;&lt;mml:msub&gt;&lt;mml:mover accent=&quot;true&quot;&gt;&lt;mml:mi&gt;E&lt;/mml:mi&gt;&lt;mml:mo stretchy=&quot;false&quot;&gt;˜&lt;/mml:mo&gt;&lt;/mml:mover&gt;&lt;mml:mi&gt;a&lt;/mml:mi&gt;&lt;/mml:msub&gt;&lt;mml:mo&gt;+&lt;/mml:mo&gt;&lt;mml:msub&gt;&lt;mml:mi&gt;t&lt;/mml:mi&gt;&lt;mml:mi&gt;M&lt;/mml:mi&gt;&lt;/mml:msub&gt;&lt;mml:mi&gt;poly&lt;/mml:mi&gt;&lt;mml:mrow&gt;&lt;mml:mo stretchy=&quot;false&quot;&gt;(&lt;/mml:mo&gt;&lt;mml:mi&gt;λ&lt;/mml:mi&gt;&lt;mml:mo stretchy=&quot;false&quot;&gt;)&lt;/mml:mo&gt;&lt;/mml:mrow&gt;&lt;/mml:mrow&gt;&lt;/mml:mrow&gt;&lt;/mml:math&gt;&lt;/inline-formula&gt;
&lt;/td&gt;&lt;td align=&quot;center&quot; valign=&quot;middle&quot; rowspan=&quot;1&quot; colspan=&quot;1&quot;&gt;-&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td align=&quot;center&quot; valign=&quot;middle&quot; style=&quot;border-bottom:solid thin&quot; rowspan=&quot;1&quot; colspan=&quot;1&quot;&gt;zk-MIPE&lt;/td&gt;&lt;td align=&quot;center&quot; valign=&quot;middle&quot; style=&quot;border-bottom:solid thin&quot; rowspan=&quot;1&quot; colspan=&quot;1&quot;&gt;
&lt;inline-formula&gt;&lt;mml:math id=&quot;mm550&quot;&gt;&lt;mml:mrow&gt;&lt;mml:mrow&gt;&lt;mml:mrow&gt;&lt;mml:mo stretchy=&quot;false&quot;&gt;(&lt;/mml:mo&gt;&lt;mml:mn&gt;4&lt;/mml:mn&gt;&lt;mml:mo&gt;+&lt;/mml:mo&gt;&lt;mml:mn&gt;4&lt;/mml:mn&gt;&lt;mml:mi&gt;n&lt;/mml:mi&gt;&lt;mml:mi&gt;m&lt;/mml:mi&gt;&lt;mml:mo stretchy=&quot;false&quot;&gt;)&lt;/mml:mo&gt;&lt;/mml:mrow&gt;&lt;mml:msub&gt;&lt;mml:mi&gt;E&lt;/mml:mi&gt;&lt;mml:mn&gt;1&lt;/mml:mn&gt;&lt;/mml:msub&gt;&lt;mml:mo&gt;+&lt;/mml:mo&gt;&lt;mml:mn&gt;2&lt;/mml:mn&gt;&lt;mml:msub&gt;&lt;mml:mi&gt;E&lt;/mml:mi&gt;&lt;mml:mi&gt;T&lt;/mml:mi&gt;&lt;/mml:msub&gt;&lt;/mml:mrow&gt;&lt;/mml:mrow&gt;&lt;/mml:math&gt;&lt;/inline-formula&gt;
&lt;/td&gt;&lt;td align=&quot;center&quot; valign=&quot;middle&quot; style=&quot;border-bottom:solid thin&quot; rowspan=&quot;1&quot; colspan=&quot;1&quot;&gt;
&lt;inline-formula&gt;&lt;mml:math id=&quot;mm551&quot;&gt;&lt;mml:mrow&gt;&lt;mml:mrow&gt;&lt;mml:mn&gt;5&lt;/mml:mn&gt;&lt;mml:mi&gt;k&lt;/mml:mi&gt;&lt;mml:msub&gt;&lt;mml:mi&gt;E&lt;/mml:mi&gt;&lt;mml:mn&gt;1&lt;/mml:mn&gt;&lt;/mml:msub&gt;&lt;mml:mo&gt;+&lt;/mml:mo&gt;&lt;mml:mrow&gt;&lt;mml:mo stretchy=&quot;false&quot;&gt;(&lt;/mml:mo&gt;&lt;mml:mn&gt;10&lt;/mml:mn&gt;&lt;mml:mo&gt;+&lt;/mml:mo&gt;&lt;mml:mi&gt;m&lt;/mml:mi&gt;&lt;mml:mo&gt;+&lt;/mml:mo&gt;&lt;mml:mi&gt;n&lt;/mml:mi&gt;&lt;mml:mi&gt;m&lt;/mml:mi&gt;&lt;mml:mo stretchy=&quot;false&quot;&gt;)&lt;/mml:mo&gt;&lt;/mml:mrow&gt;&lt;mml:mi&gt;k&lt;/mml:mi&gt;&lt;mml:msub&gt;&lt;mml:mi&gt;E&lt;/mml:mi&gt;&lt;mml:mi&gt;T&lt;/mml:mi&gt;&lt;/mml:msub&gt;&lt;mml:mo&gt;+&lt;/mml:mo&gt;&lt;mml:mrow&gt;&lt;mml:mo stretchy=&quot;false&quot;&gt;(&lt;/mml:mo&gt;&lt;mml:mn&gt;5&lt;/mml:mn&gt;&lt;mml:mo&gt;+&lt;/mml:mo&gt;&lt;mml:mn&gt;2&lt;/mml:mn&gt;&lt;mml:mi&gt;m&lt;/mml:mi&gt;&lt;mml:mo&gt;+&lt;/mml:mo&gt;&lt;mml:mn&gt;2&lt;/mml:mn&gt;&lt;mml:mi&gt;n&lt;/mml:mi&gt;&lt;mml:mi&gt;m&lt;/mml:mi&gt;&lt;mml:mo stretchy=&quot;false&quot;&gt;)&lt;/mml:mo&gt;&lt;/mml:mrow&gt;&lt;mml:mi&gt;k&lt;/mml:mi&gt;&lt;mml:mi&gt;P&lt;/mml:mi&gt;&lt;/mml:mrow&gt;&lt;/mml:mrow&gt;&lt;/mml:math&gt;&lt;/inline-formula&gt;
&lt;/td&gt;&lt;td align=&quot;center&quot; valign=&quot;middle&quot; style=&quot;border-bottom:solid thin&quot; rowspan=&quot;1&quot; colspan=&quot;1&quot;&gt;
&lt;inline-formula&gt;&lt;mml:math id=&quot;mm552&quot;&gt;&lt;mml:mrow&gt;&lt;mml:mrow&gt;&lt;mml:mrow&gt;&lt;mml:mo stretchy=&quot;false&quot;&gt;(&lt;/mml:mo&gt;&lt;mml:mn&gt;9&lt;/mml:mn&gt;&lt;mml:mo&gt;+&lt;/mml:mo&gt;&lt;mml:mi&gt;m&lt;/mml:mi&gt;&lt;mml:mo&gt;+&lt;/mml:mo&gt;&lt;mml:mi&gt;n&lt;/mml:mi&gt;&lt;mml:mi&gt;m&lt;/mml:mi&gt;&lt;mml:mo stretchy=&quot;false&quot;&gt;)&lt;/mml:mo&gt;&lt;/mml:mrow&gt;&lt;mml:msub&gt;&lt;mml:mi&gt;E&lt;/mml:mi&gt;&lt;mml:mn&gt;1&lt;/mml:mn&gt;&lt;/mml:msub&gt;&lt;mml:mo&gt;+&lt;/mml:mo&gt;&lt;mml:mrow&gt;&lt;mml:mo stretchy=&quot;false&quot;&gt;(&lt;/mml:mo&gt;&lt;mml:mn&gt;4&lt;/mml:mn&gt;&lt;mml:mo&gt;+&lt;/mml:mo&gt;&lt;mml:mi&gt;n&lt;/mml:mi&gt;&lt;mml:mo&gt;+&lt;/mml:mo&gt;&lt;mml:mi&gt;m&lt;/mml:mi&gt;&lt;mml:mo stretchy=&quot;false&quot;&gt;)&lt;/mml:mo&gt;&lt;/mml:mrow&gt;&lt;mml:mrow&gt;&lt;mml:mo stretchy=&quot;false&quot;&gt;(&lt;/mml:mo&gt;&lt;mml:msub&gt;&lt;mml:mi&gt;E&lt;/mml:mi&gt;&lt;mml:mi&gt;T&lt;/mml:mi&gt;&lt;/mml:msub&gt;&lt;mml:mo&gt;+&lt;/mml:mo&gt;&lt;mml:mi&gt;P&lt;/mml:mi&gt;&lt;mml:mo stretchy=&quot;false&quot;&gt;)&lt;/mml:mo&gt;&lt;/mml:mrow&gt;&lt;mml:mo&gt;+&lt;/mml:mo&gt;&lt;mml:mn&gt;2&lt;/mml:mn&gt;&lt;mml:msub&gt;&lt;mml:mi&gt;E&lt;/mml:mi&gt;&lt;mml:mi&gt;T&lt;/mml:mi&gt;&lt;/mml:msub&gt;&lt;/mml:mrow&gt;&lt;/mml:mrow&gt;&lt;/mml:math&gt;&lt;/inline-formula&gt;
&lt;/td&gt;&lt;td align=&quot;center&quot; valign=&quot;middle&quot; style=&quot;border-bottom:solid thin&quot; rowspan=&quot;1&quot; colspan=&quot;1&quot;&gt;-&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;
</infon><offset>46619</offset><text>Scheme	Requester/Publisher	CS/Contract	Worker	Fog Node	 	Fo-SDD					 	SybSub				-	 	ZebraLancer				-	 	zk-MIPE				-	 	</text></passage></document></collection>
